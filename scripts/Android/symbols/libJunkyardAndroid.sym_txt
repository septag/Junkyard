                 U AAssetManager_open
                 U AAsset_close
                 U AAsset_getLength
                 U AAsset_read
                 U AConfiguration_delete
                 U AConfiguration_fromAssetManager
                 U AConfiguration_new
                 U AInputEvent_getSource
                 U AInputEvent_getType
                 U AInputQueue_attachLooper
                 U AInputQueue_detachLooper
                 U AInputQueue_finishEvent
                 U AInputQueue_getEvent
                 U AInputQueue_preDispatchEvent
                 U AKeyEvent_getAction
                 U AKeyEvent_getKeyCode
                 U AKeyEvent_getMetaState
                 U AKeyEvent_getRepeatCount
                 U ALooper_addFd
                 U ALooper_pollOnce
                 U ALooper_prepare
                 U AMotionEvent_getAction
                 U AMotionEvent_getAxisValue
                 U AMotionEvent_getButtonState
                 U AMotionEvent_getPointerCount
                 U AMotionEvent_getPointerId
                 U AMotionEvent_getX
                 U AMotionEvent_getY
000000000012fe18 T ANativeActivity_onCreate
                 U ANativeWindow_getHeight
                 U ANativeWindow_getWidth
                 U ANativeWindow_setBuffersGeometry
00000000002be1d8 d DW.ref.__gxx_personality_v0
00000000000af3dc r GCC_except_table0
00000000000af3f0 r GCC_except_table0
00000000000af474 r GCC_except_table0
00000000000aff50 r GCC_except_table0
00000000000b012c r GCC_except_table0
00000000000b03a0 r GCC_except_table0
00000000000b04d8 r GCC_except_table0
00000000000af4f0 r GCC_except_table1
00000000000af744 r GCC_except_table1
00000000000aff60 r GCC_except_table1
00000000000b03ec r GCC_except_table1
00000000000b0500 r GCC_except_table1
00000000000b051c r GCC_except_table1
00000000000af554 r GCC_except_table10
00000000000b003c r GCC_except_table10
00000000000afa9c r GCC_except_table100
00000000000afaec r GCC_except_table101
00000000000afb3c r GCC_except_table102
00000000000afb74 r GCC_except_table103
00000000000afbac r GCC_except_table104
00000000000afbe4 r GCC_except_table105
00000000000afc1c r GCC_except_table106
00000000000afc54 r GCC_except_table107
00000000000afc8c r GCC_except_table108
00000000000afcc4 r GCC_except_table109
00000000000af570 r GCC_except_table11
00000000000b0050 r GCC_except_table11
00000000000afcfc r GCC_except_table110
00000000000afd34 r GCC_except_table111
00000000000afd6c r GCC_except_table112
00000000000b0218 r GCC_except_table112
00000000000afda4 r GCC_except_table113
00000000000afddc r GCC_except_table114
00000000000afe14 r GCC_except_table115
00000000000af590 r GCC_except_table12
00000000000b02c4 r GCC_except_table12
00000000000afe4c r GCC_except_table128
00000000000afe68 r GCC_except_table129
00000000000af43c r GCC_except_table13
00000000000af5a8 r GCC_except_table13
00000000000b0064 r GCC_except_table13
00000000000b02dc r GCC_except_table13
00000000000afe84 r GCC_except_table130
00000000000afea0 r GCC_except_table131
00000000000afed0 r GCC_except_table132
00000000000aff00 r GCC_except_table133
00000000000aff30 r GCC_except_table136
00000000000b0300 r GCC_except_table14
00000000000af458 r GCC_except_table15
00000000000af5c4 r GCC_except_table15
00000000000af68c r GCC_except_table15
00000000000affbc r GCC_except_table15
00000000000b0080 r GCC_except_table15
00000000000af5e0 r GCC_except_table16
00000000000af6a0 r GCC_except_table16
00000000000affd8 r GCC_except_table16
00000000000b0318 r GCC_except_table16
00000000000af61c r GCC_except_table17
00000000000af6b8 r GCC_except_table17
00000000000b0094 r GCC_except_table17
00000000000af63c r GCC_except_table18
00000000000af6d4 r GCC_except_table18
00000000000b0140 r GCC_except_table18
00000000000b0330 r GCC_except_table18
00000000000af65c r GCC_except_table19
00000000000af6e8 r GCC_except_table19
00000000000b00a4 r GCC_except_table19
00000000000b0344 r GCC_except_table19
00000000000af404 r GCC_except_table2
00000000000af488 r GCC_except_table2
00000000000b0414 r GCC_except_table2
00000000000b043c r GCC_except_table2
00000000000af700 r GCC_except_table20
00000000000b0360 r GCC_except_table20
00000000000af71c r GCC_except_table21
00000000000b00b0 r GCC_except_table21
00000000000b0378 r GCC_except_table21
00000000000b038c r GCC_except_table22
00000000000af764 r GCC_except_table23
00000000000b00d8 r GCC_except_table23
00000000000b0230 r GCC_except_table230
00000000000b0260 r GCC_except_table231
00000000000af730 r GCC_except_table24
00000000000b00f8 r GCC_except_table24
00000000000b0108 r GCC_except_table26
00000000000b0114 r GCC_except_table28
00000000000af49c r GCC_except_table3
00000000000af504 r GCC_except_table3
00000000000af754 r GCC_except_table3
00000000000affec r GCC_except_table3
00000000000b0284 r GCC_except_table3
00000000000b0474 r GCC_except_table3
00000000000b0158 r GCC_except_table31
00000000000b0164 r GCC_except_table32
00000000000b0170 r GCC_except_table33
00000000000b017c r GCC_except_table34
00000000000b0188 r GCC_except_table35
00000000000b0194 r GCC_except_table36
00000000000af784 r GCC_except_table38
00000000000b01a0 r GCC_except_table38
00000000000af4b8 r GCC_except_table4
00000000000aff6c r GCC_except_table4
00000000000aff88 r GCC_except_table4
00000000000b0298 r GCC_except_table4
00000000000b0538 r GCC_except_table4
00000000000b01b8 r GCC_except_table46
00000000000af420 r GCC_except_table5
00000000000af4e0 r GCC_except_table5
00000000000af518 r GCC_except_table5
00000000000aff7c r GCC_except_table5
00000000000af79c r GCC_except_table52
00000000000af7d4 r GCC_except_table53
00000000000af800 r GCC_except_table55
00000000000af81c r GCC_except_table56
00000000000af83c r GCC_except_table58
00000000000aff9c r GCC_except_table6
00000000000b0454 r GCC_except_table6
00000000000b01dc r GCC_except_table60
00000000000af85c r GCC_except_table62
00000000000af884 r GCC_except_table63
00000000000af8ac r GCC_except_table65
00000000000af8c8 r GCC_except_table67
00000000000af8f0 r GCC_except_table69
00000000000af52c r GCC_except_table7
00000000000affa8 r GCC_except_table7
00000000000b0000 r GCC_except_table7
00000000000af918 r GCC_except_table70
00000000000af934 r GCC_except_table71
00000000000af964 r GCC_except_table72
00000000000af980 r GCC_except_table74
00000000000af998 r GCC_except_table75
00000000000af9b8 r GCC_except_table77
00000000000af540 r GCC_except_table8
00000000000b0014 r GCC_except_table8
00000000000af9d4 r GCC_except_table81
00000000000af9f0 r GCC_except_table83
00000000000afa0c r GCC_except_table84
00000000000afa28 r GCC_except_table86
00000000000b0028 r GCC_except_table9
00000000000b0120 r GCC_except_table9
00000000000b02ac r GCC_except_table9
00000000000b01f8 r GCC_except_table91
00000000000afa40 r GCC_except_table93
00000000000afa60 r GCC_except_table96
00000000000afa7c r GCC_except_table99
00000000002c0fb0 B GImGui
00000000002b4a98 d _DYNAMIC
000000000014c190 t _GLOBAL__sub_I_Allocators.cpp
0000000000131d0c t _GLOBAL__sub_I_ApplicationAndroid.cpp
00000000000f34f8 t _GLOBAL__sub_I_AssetManager.cpp
000000000014dd74 t _GLOBAL__sub_I_Base.cpp
0000000000137fbc t _GLOBAL__sub_I_Clipboard.cpp
0000000000276384 t _GLOBAL__sub_I_Console.cpp
000000000014e73c t _GLOBAL__sub_I_Debug.cpp
000000000014f408 t _GLOBAL__sub_I_DebugClang.cpp
000000000017f590 t _GLOBAL__sub_I_Engine.cpp
000000000017d5a8 t _GLOBAL__sub_I_FrameInfoHud.cpp
0000000000255cc4 t _GLOBAL__sub_I_Graphics.cpp
00000000002653a4 t _GLOBAL__sub_I_ImGuiWrapper.cpp
0000000000272dc8 t _GLOBAL__sub_I_ImGuizmo.cpp
000000000010db48 t _GLOBAL__sub_I_Image.cpp
0000000000159300 t _GLOBAL__sub_I_Jobs.cpp
0000000000139a00 t _GLOBAL__sub_I_JunkyardSettings.cpp
0000000000160cfc t _GLOBAL__sub_I_Log.cpp
000000000012b740 t _GLOBAL__sub_I_Model.cpp
000000000013b8fc t _GLOBAL__sub_I_RemoteServices.cpp
000000000016befc t _GLOBAL__sub_I_Settings.cpp
000000000012e890 t _GLOBAL__sub_I_Shader.cpp
0000000000175368 t _GLOBAL__sub_I_System.cpp
000000000013fa60 t _GLOBAL__sub_I_VirtualFS.cpp
00000000001c0690 t _GLOBAL__sub_I_imgui.cpp
00000000001e3db4 t _GLOBAL__sub_I_imgui_draw.cpp
000000000029ff4c t _Unwind_Backtrace
000000000029bd1c t _Unwind_DeleteException
000000000029fee4 t _Unwind_FindEnclosingFunction
000000000029ffc0 t _Unwind_Find_FDE
000000000029bc50 t _Unwind_ForcedUnwind
00000000002a0038 t _Unwind_GetCFA
000000000029fe54 t _Unwind_GetDataRelBase
000000000029bd38 t _Unwind_GetGR
000000000029bd6c t _Unwind_GetIP
00000000002a0068 t _Unwind_GetIPInfo
000000000029bcb4 t _Unwind_GetLanguageSpecificData
000000000029bce8 t _Unwind_GetRegionStart
000000000029fe9c t _Unwind_GetTextRelBase
000000000029b8e8 t _Unwind_RaiseException
000000000029bae4 t _Unwind_Resume
000000000029fdf0 t _Unwind_Resume_or_Rethrow
000000000029bd64 t _Unwind_SetGR
000000000029bd9c t _Unwind_SetIP
00000000000f6dfc W unsigned int AlignValue<unsigned int>(unsigned int, unsigned int)
00000000000f5e10 W unsigned long AlignValue<unsigned long>(unsigned long, unsigned long)
000000000018260c T ImFileOpen(char const*, char const*)
00000000001826f4 T ImFileRead(void*, unsigned long long, unsigned long long, __sFILE*)
0000000000182430 T ImHashData(void const*, unsigned long, unsigned int)
0000000000181ae8 T ImStrnicmp(char const*, char const*, unsigned long)
000000000012fde8 T appGetName()
0000000000164f14 T colorBlend(Color, Color, float)
000000000027526c T conExecute(char const*, char*, unsigned int)
000000000014e030 T debugPrint(char const*)
000000000024aee4 T gfxCmdDraw(unsigned int, unsigned int, unsigned int, unsigned int)
00000000002647ec T imguiLabel(Color, Color, char const*, char const*, ...)
0000000000264bbc T imguiLabel(Color, Color, float, float, char const*, char const*, ...)
00000000002645d4 T imguiLabel(char const*, char const*, ...)
0000000000264a9c T imguiLabel(float, float, char const*, char const*, ...)
000000000015159c T ini_create(void*)
00000000001656c4 T mat4ToQuat(Mat4 const&)
0000000000173aa0 T pathToUnix(char const*, char*, unsigned long)
00000000001669e4 T quatToMat3(Quat)
0000000000162374 T quatToMat4(Quat)
00000000001721a4 T strFindStr(char const*, char const*)
0000000000171420 T strIsEqual(char const*, char const*)
00000000001718f4 T strToLower(char*, unsigned int, char const*)
00000000001715b4 T strToLower(char)
00000000001719f0 T strToUpper(char*, unsigned int, char const*)
00000000001719a4 T strToUpper(char)
0000000000177fc0 T sysLoadDLL(char const*, char**)
0000000000167ed4 T AABBFromBox(Box const*)
0000000000273828 T AndroidMain(int, char**)
0000000000182638 T ImFileClose(__sFILE*)
0000000000182730 T ImFileWrite(void const*, unsigned long long, unsigned long long, __sFILE*)
0000000000181cbc T ImStrdupcpy(char*, unsigned long*, char const*)
00000000000f1afc T assetAddRef(Handle<AssetHandleT>)
00000000000f154c T assetUnload(Handle<AssetHandleT>)
0000000000244d4c T gfxEndFrame()
0000000000263c74 T imguiRender()
00000000001527cc T ini_destroy(ini_t*)
00000000001574d0 T jobsRelease()
000000000015eae8 T jsonDestroy(JsonContext*)
0000000000163938 T mat3Inverse(Mat3 const&)
0000000000163bd0 T mat4Inverse(Mat4 const&)
000000000016331c T mat4OrthoLH(float, float, float, float, float, bool)
0000000000161eb4 T mat4ViewFPS(Float3, float, float)
00000000001674e4 T planeNormal(Float3, Float3, Float3)
0000000000167e2c T planeOrigin(Plane)
00000000001671c4 T quatToEuler(Quat)
0000000000139978 T settingsGet()
00000000001717dc T strEndsWith(char const*, char const*)
0000000000171e10 T strFindChar(char const*, char)
0000000000171aa0 T strIsNumber(char)
00000000001709fc T strPrintFmt(char*, unsigned int, char const*, ...)
00000000001724e8 T strSkipChar(char const*, char)
00000000001723d8 T strToDouble(char const*)
00000000001723ac T strToUint64(char const*)
0000000000177434 T threadSleep(unsigned int)
000000000017740c T threadYield()
000000000013dd68 T vfsReadFile(char const*, VfsFlags, Allocator*)
00000000001304a8 T appIsKeyDown(InputKeycode)
000000000012fdf8 T appSetCursor(AppMouseCursor)
000000000012fba0 T appShowMouse(bool)
00000000000f18f8 T assetGetInfo(Handle<AssetHandleT>)
00000000000f1a24 T assetIsAlive(Handle<AssetHandleT>)
0000000000137948 T clipboardAdd(char const*, ClipboardVar const*)
000000000013770c T clipboardGet(Handle<ClipboardVarHandleT>)
00000000001377cc T clipboardGet(char const*)
000000000014f6fc T hashMurmur32(void const*, unsigned int, unsigned int)
0000000000154078 T iniSaveToMem(IniContext const&, Allocator*)
0000000000155f7c T jobsDispatch(JobsType, void (*)(unsigned int, void*), void*, unsigned int, JobsPriority, unsigned int)
0000000000160fec T mathCopySign(float, float)
000000000012ce6c W ImageLoadParams* memAllocCopy<ImageLoadParams>(ImageLoadParams const*, unsigned int, Allocator*)
00000000000f4308 W AssetMetaKeyValue* memAllocCopy<AssetMetaKeyValue>(AssetMetaKeyValue const*, unsigned int, Allocator*)
0000000000259640 W VkGraphicsPipelineCreateInfo* memAllocCopy<VkGraphicsPipelineCreateInfo>(VkGraphicsPipelineCreateInfo const*, unsigned int, Allocator*)
0000000000258028 W VkCommandBuffer_T** memAllocCopy<VkCommandBuffer_T*>(VkCommandBuffer_T* const*, unsigned int, Allocator*)
000000000012b990 W char* memAllocCopy<char>(char const*, unsigned int, Allocator*)
000000000010f210 W unsigned char* memAllocCopy<unsigned char>(unsigned char const*, unsigned int, Allocator*)
0000000000143d28 T memAllocTemp(unsigned int, unsigned long, unsigned int)
000000000014349c T memTempPopId(unsigned int)
0000000000143db4 T memTempReset(float, bool)
000000000014dae8 T memTrackFree(void*)
0000000000178180 T pathAbsolute(char const*, char*, unsigned long)
0000000000173e04 T pathFileName(char const*, char*, unsigned long)
000000000017831c T pathMakeTemp(char*, unsigned long, char const*, char const*)
000000000016786c T plane3Points(Float3, Float3, Float3)
000000000016c364 W sargs_create(sargs_desc const&)
0000000000170f90 T strCopyCount(char*, unsigned int, char const*, unsigned int)
00000000001718b4 T strIsInRange(char, char, char)
0000000000178114 T sysGetEnvVar(char const*, char*, unsigned int)
00000000001780b0 T sysSetEnvVar(char const*, char const*)
0000000000178040 T sysUnloadDLL(void*)
00000000001420e8 T test_ffs_fls()
00000000001741b0 T timerLapTime(unsigned long*)
000000000013e190 T vfsWriteFile(char const*, Blob const&, VfsFlags)
00000000001682e0 T AABBTransform(AABB const&, Mat4 const&)
0000000000182668 T ImFileGetSize(__sFILE*)
0000000000181dd4 T ImStrchrRange(char const*, char const*, char)
0000000000181e84 T ImStreolRange(char const*, char const*)
00000000001f2838 W TableFixFlags(int, ImGuiWindow*)
0000000000130568 T appGetKeyMods()
000000000012f1d8 T appInitialize(AppDesc const&)
00000000000f7d9c T assetGetImage(AssetHandleImage)
0000000000118564 T assetGetModel(AssetHandleModel)
00000000000f1bd8 T assetRegister(AssetTypeDesc const&)
0000000000137a60 T clipboardFind(char const*)
0000000000164c24 T colorRGBToHSV(float*, float const*)
0000000000164ae4 T colorRGBtoHSV(float*, float const*)
000000000017e654 T engineRelease()
0000000000244a44 T gfxBeginFrame()
000000000014f9bc T hashMurmur128(void const*, unsigned long, unsigned int)
0000000000155ec8 T jobsIsRunning(JobsInstance*)
0000000000265494 W ImDrawVert* memAllocTyped<ImDrawVert>(unsigned int, Allocator*)
000000000012c3c0 W ModelMaterial* memAllocTyped<ModelMaterial>(unsigned int, Allocator*)
000000000012cf6c W ImageLoadParams* memAllocTyped<ImageLoadParams>(unsigned int, Allocator*)
0000000000256610 W VkPresentModeKHR* memAllocTyped<VkPresentModeKHR>(unsigned int, Allocator*)
00000000000f7398 W AssetMetaKeyValue* memAllocTyped<AssetMetaKeyValue>(unsigned int, Allocator*)
0000000000255ec8 W VkLayerProperties* memAllocTyped<VkLayerProperties>(unsigned int, Allocator*)
0000000000256570 W VkSurfaceFormatKHR* memAllocTyped<VkSurfaceFormatKHR>(unsigned int, Allocator*)
0000000000255f68 W VkExtensionProperties* memAllocTyped<VkExtensionProperties>(unsigned int, Allocator*)
000000000014c280 W MemTransientAllocatorStats* memAllocTyped<MemTransientAllocatorStats>(unsigned int, Allocator*)
0000000000261c58 W VkGraphicsPipelineCreateInfo* memAllocTyped<VkGraphicsPipelineCreateInfo>(unsigned int, Allocator*)
0000000000258e38 W GfxDescriptorSetLayoutData::Binding* memAllocTyped<GfxDescriptorSetLayoutData::Binding>(unsigned int, Allocator*)
0000000000260614 W VkCommandBuffer_T** memAllocTyped<VkCommandBuffer_T*>(unsigned int, Allocator*)
000000000012d420 W char* memAllocTyped<char>(unsigned int, Allocator*)
000000000010f464 W unsigned char* memAllocTyped<unsigned char>(unsigned int, Allocator*)
0000000000265534 W unsigned short* memAllocTyped<unsigned short>(unsigned int, Allocator*)
0000000000143040 T memTempPushId()
00000000001159e8 T modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)
00000000001782b0 T pathCreateDir(char const*)
0000000000173ee4 T pathDirectory(char const*, char*, unsigned long)
0000000000175be4 T pathGetMyPath(char*, unsigned long)
0000000000167c10 T planeDistance(Plane, Float3)
000000000016735c T quatFromEuler(Float3)
000000000014d248 T randomGenSeed()
000000000014d36c T randomNewUint(RandomContext*)
000000000014d6d8 T randomNewUint()
00000000001755e4 T sysGetSysInfo(SysInfo*)
0000000000177f6c T timerGetTicks()
000000000013be54 T vfsMountLocal(char const*, char const*, bool)
0000000000182260 T ImFormatString(char*, unsigned long, char const*, ...)
0000000000182208 T ImStrSkipBlank(char const*)
00000000001c2aac W ImTriangleArea(ImVec2 const&, ImVec2 const&, ImVec2 const&)
000000000012fc1c T appGetDpiScale()
000000000012e290 T assetGetShader(AssetHandleShader)
00000000000f7d0c T assetLoadImage(char const*, ImageLoadParams const&, Handle<AssetBarrierT>)
00000000001184d4 T assetLoadModel(char const*, ModelLoadParams const&, Handle<AssetBarrierT>)
000000000017e8dc T engineEndFrame(float)
0000000000245c0c T gfxCreateImage(GfxImageDesc const&)
000000000024b1e0 T gfxWaitForIdle()
0000000000179850 T float imguiDivideInt<unsigned int>(unsigned int, unsigned int)
0000000000179884 T float imguiDivideInt<unsigned long>(unsigned long, unsigned long)
00000000002645b8 T imguiIsEnabled()
00000000001564d0 T jobsInitialize(JobsInitParams const&)
000000000015ff38 T logSetSettings(LogLevel, bool, bool)
0000000000165dc0 T mat4FromNormal(Float3, float, Float3)
000000000016116c T mat4ViewLookAt(Float3, Float3, Float3)
0000000000143750 T memReallocTemp(unsigned int, void*, unsigned long, unsigned int)
000000000014dad4 T memTrackMalloc(void*, unsigned long)
000000000014d3fc T randomNewFloat(RandomContext*)
000000000014d74c T randomNewFloat()
0000000000171388 T strConcatCount(char*, unsigned int, char const*, unsigned int)
0000000000172124 T strFindCharRev(char const*, char)
0000000000172400 T strReplaceChar(char*, unsigned int, char, char)
0000000000178098 T sysGetPageSize()
000000000014c0f4 W tlsf_fls_sizet(unsigned long)
000000000013c15c T vfsMountRemote(char const*, bool)
0000000000182384 T ImFormatStringV(char*, unsigned long, char const*, std::__va_list)
00000000001820d8 T ImStrTrimBlanks(char*)
0000000000182cac T ImTextStrToUtf8(char*, int, unsigned short const*, unsigned short const*)
00000000001305a8 T appCaptureMouse()
000000000012fbb4 T appIsMouseShown()
00000000001305ac T appReleaseMouse()
000000000012e200 T assetLoadShader(char const*, ShaderLoadParams const&, Handle<AssetBarrierT>)
00000000000f1dd4 T assetUnregister(unsigned int)
000000000017c92c T frameInfoRender(float, bool*)
0000000000245188 T gfxCreateBuffer(GfxBufferDesc const&)
0000000000243ee0 T gfxDestroyImage(Handle<GfxImageT>)
000000000024b220 T gfxGetImageInfo(Handle<GfxImageT>)
0000000000264e10 T imguiGetSetting(char const*)
0000000000264ecc T imguiSetSetting(char const*, bool)
00000000002650ec T imguiSetSetting(char const*, int)
0000000000151ac4 T ini_section_add(ini_t*, char const*, int)
0000000000162cc8 T mat4Perspective(float, float, float, float, bool)
0000000000162168 T mat4ViewArcBall(Float3, Quat, Float3)
000000000014d9fc T memAlignPointer(void*, unsigned long, unsigned int)
000000000014da58 T memDefaultAlloc()
000000000014dab4 T memEnableMemPro(bool)
0000000000260850 W GfxGarbage* memReallocTyped<GfxGarbage>(void*, unsigned int, Allocator*)
000000000014102c W VfsRequest* memReallocTyped<VfsRequest>(void*, unsigned int, Allocator*)
00000000000f7008 W AssetGarbage* memReallocTyped<AssetGarbage>(void*, unsigned int, Allocator*)
0000000000138f18 W ClipboardVar* memReallocTyped<ClipboardVar>(void*, unsigned int, Allocator*)
0000000000276b24 W ConCustomVar* memReallocTyped<ConCustomVar>(void*, unsigned int, Allocator*)
0000000000260de4 W GfxImageData* memReallocTyped<GfxImageData>(void*, unsigned int, Allocator*)
000000000014cf0c W MemTempStack* memReallocTyped<MemTempStack>(void*, unsigned int, Allocator*)
0000000000260a98 W GfxBufferData* memReallocTyped<GfxBufferData>(void*, unsigned int, Allocator*)
0000000000140dd8 W VfsMountPoint* memReallocTyped<VfsMountPoint>(void*, unsigned int, Allocator*)
0000000000276d78 W ConCommandDesc* memReallocTyped<ConCommandDesc>(void*, unsigned int, Allocator*)
000000000012cb1c W AssetDependency* memReallocTyped<AssetDependency>(void*, unsigned int, Allocator*)
0000000000261128 W GfxPipelineData* memReallocTyped<GfxPipelineData>(void*, unsigned int, Allocator*)
00000000000f78b4 W AssetTypeManager* memReallocTyped<AssetTypeManager>(void*, unsigned int, Allocator*)
000000000012dc1c W ModelLoadRequest* memReallocTyped<ModelLoadRequest>(void*, unsigned int, Allocator*)
000000000016c7d4 W SettingsKeyValue* memReallocTyped<SettingsKeyValue>(void*, unsigned int, Allocator*)
000000000013bda4 W RemoteCommandDesc* memReallocTyped<RemoteCommandDesc>(void*, unsigned int, Allocator*)
000000000012efc0 W ShaderLoadRequest* memReallocTyped<ShaderLoadRequest>(void*, unsigned int, Allocator*)
000000000017faf0 W EngineShortcutKeys* memReallocTyped<EngineShortcutKeys>(void*, unsigned int, Allocator*)
000000000025b258 W GfxDeferredCommand* memReallocTyped<GfxDeferredCommand>(void*, unsigned int, Allocator*)
0000000000132554 W AppEventCallbackPair* memReallocTyped<AppEventCallbackPair>(void*, unsigned int, Allocator*)
0000000000261aa4 W GfxDescriptorSetData* memReallocTyped<GfxDescriptorSetData>(void*, unsigned int, Allocator*)
000000000010f6ec W AssetImageLoadRequest* memReallocTyped<AssetImageLoadRequest>(void*, unsigned int, Allocator*)
000000000025b9d0 W GfxPipelineLayoutData* memReallocTyped<GfxPipelineLayoutData>(void*, unsigned int, Allocator*)
0000000000261758 W GfxDescriptorSetLayoutData* memReallocTyped<GfxDescriptorSetLayoutData>(void*, unsigned int, Allocator*)
00000000000f634c W Asset* memReallocTyped<Asset>(void*, unsigned int, Allocator*)
0000000000261478 W Handle<GfxPipelineT>* memReallocTyped<Handle<GfxPipelineT> >(void*, unsigned int, Allocator*)
0000000000274f00 W Handle<GfxDescriptorSetT>* memReallocTyped<Handle<GfxDescriptorSetT> >(void*, unsigned int, Allocator*)
00000000000f7b1c W Signal* memReallocTyped<Signal>(void*, unsigned int, Allocator*)
000000000015fc28 W cj5_token* memReallocTyped<cj5_token>(void*, unsigned int, Allocator*)
000000000014ee28 W DebugFiberProtectorThreadContext::Item* memReallocTyped<DebugFiberProtectorThreadContext::Item>(void*, unsigned int, Allocator*)
000000000014d178 W _private::MemDebugPointer* memReallocTyped<_private::MemDebugPointer>(void*, unsigned int, Allocator*)
000000000014cc8c W MemTempContext** memReallocTyped<MemTempContext*>(void*, unsigned int, Allocator*)
000000000025a988 W VkCommandBuffer_T** memReallocTyped<VkCommandBuffer_T*>(void*, unsigned int, Allocator*)
000000000010ef8c W AssetDescriptorUpdateCacheItem** memReallocTyped<AssetDescriptorUpdateCacheItem*>(void*, unsigned int, Allocator*)
0000000000141278 W void (**memReallocTyped<void (*)(char const*)>(void*, unsigned int, Allocator*))(char const*)
0000000000173930 W char** memReallocTyped<char*>(void*, unsigned int, Allocator*)
000000000012b674 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData* memReallocTyped<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData>(void*, unsigned int, Allocator*)
0000000000146178 t MemTlsfAllocator::CalculateFragmentation()::AllocData* memReallocTyped<MemTlsfAllocator::CalculateFragmentation()::AllocData>(void*, unsigned int, Allocator*)
00000000001736e4 W char* memReallocTyped<char>(void*, unsigned int, Allocator*)
000000000012d65c W unsigned int* memReallocTyped<unsigned int>(void*, unsigned int, Allocator*)
0000000000142e8c T memTempGetStats(Allocator*, MemTransientAllocatorStats**, unsigned int*)
000000000014daf8 T memTrackRealloc(void*, void*, unsigned long)
000000000016b69c T settingsRelease()
0000000000171600 T strIsEqualCount(char const*, char const*, unsigned int)
0000000000171860 T strIsWhitespace(char)
0000000000170abc T strPrintFmtArgs(char*, unsigned int, char const*, std::__va_list)
0000000000178754 T sysUUIDGenerate(SysUUID*)
0000000000178790 T sysUUIDToString(SysUUID const&, char*, unsigned int)
000000000013c3dc T vfsGetMountType(char const*)
00000000001e50cc W ImBitArraySetBit(unsigned int*, int)
0000000000182aa8 T ImTextCharToUtf8(char*, unsigned int)
00000000001304d4 T appIsAnyKeysDown(InputKeycode const*, unsigned int)
0000000000137708 T clipboardRelease()
0000000000275968 T conExecuteRemote(char const*)
000000000017e740 T engineBeginFrame(float)
000000000017eaf8 T engineFrameIndex()
000000000017eb70 T engineGetSysInfo()
000000000017dd94 T engineInitialize()
000000000017d558 T frameInfoRelease()
0000000000243e0c T gfxDestroyBuffer(Handle<GfxBufferT>)
0000000000153d48 T iniCreateContext(Allocator*)
0000000000152ea0 T ini_find_section(ini_t const*, char const*, int)
0000000000151de4 T ini_property_add(ini_t*, int, char const*, int, char const*, int)
0000000000152ae8 T ini_section_name(ini_t const*, int)
000000000015647c T jobsDispatchAuto(JobsType, void (*)(unsigned int, void*), void*, unsigned int, JobsPriority, unsigned int)
00000000001668dc T mat4ProjectPlane(Float3)
0000000000161814 T mat4ViewLookAtLH(Float3, Float3, Float3)
0000000000143d60 T memAllocTempZero(unsigned int, unsigned long, unsigned int)
0000000000178468 T memVirtualCommit(void*, unsigned long)
00000000001679e8 T planeNormalPoint(Float3, Float3)
000000000016b598 T settingsGetValue(char const*, char const*)
000000000016b41c T settingsSetValue(char const*, char const*)
00000000001714e0 T strIsEqualNoCase(char const*, char const*)
0000000000170b08 T strPrintFmtAlloc(Allocator*, char const*, ...)
000000000017806c T sysSymbolAddress(void*, char const*)
000000000013c49c T vfsReadFileAsync(char const*, VfsFlags, void (*)(char const*, Blob const&, void*), void*, Allocator*)
00000000001ce090 T ImBezierCubicCalc(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, float)
00000000001e5084 W ImBitArrayTestBit(unsigned int const*, int)
00000000001828fc T ImTextStrFromUtf8(unsigned short*, int, char const*, char const*, char const**)
000000000013045c T appGetDisplayInfo()
000000000012fbdc T appGetWindowWidth()
000000000010f03c W String<32u> assetGetMetaValue<String<32u> >(AssetMetaKeyValue const*, unsigned int, char const*, String<32u>)
000000000010f0a4 W bool assetGetMetaValue<bool>(AssetMetaKeyValue const*, unsigned int, char const*, bool)
00000000000f0904 T assetGetMetaValue(AssetMetaKeyValue const*, unsigned int, char const*)
00000000000f0750 T assetLoadMetaData(Handle<AssetHandleT>, Allocator*, AssetMetaKeyValue**, unsigned int*)
00000000000f01bc T assetLoadMetaData(char const*, AssetPlatform, Allocator*, AssetMetaKeyValue**, unsigned int*)
0000000000165250 T colorToFloat4SRGB(Float4)
000000000017b000 T ddDrawGrid_XYAxis(Camera const&, float, float, DebugDrawGridProperties const&)
000000000017eb7c T engineGetInitHeap()
000000000024af58 T gfxCmdDrawIndexed(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
000000000024a8c8 T gfxCmdSetScissors(unsigned int, unsigned int, Recti const*, bool)
0000000000246c58 T gfxCreatePipeline(GfxPipelineDesc const&)
000000000024b7b8 T gfxGetBudgetStats(GfxBudgetStats*)
0000000000153f14 T iniLoadFromString(char const*, Allocator*)
0000000000152fb0 T ini_find_property(ini_t const*, int, char const*, int)
0000000000152c20 T ini_property_name(ini_t const*, int, int)
0000000000152ab8 T ini_section_count(ini_t const*)
0000000000162db8 T mat4PerspectiveLH(float, float, float, float, bool)
0000000000159d24 W JobsThreadData* memAllocZeroTyped<JobsThreadData>(unsigned int, Allocator*)
0000000000131f90 W char* memAllocZeroTyped<char>(unsigned int, Allocator*)
0000000000178678 T memVirtualRelease(void*, unsigned long)
00000000001783a4 T memVirtualReserve(unsigned long, MemVirtualFlags)
0000000000173c40 T pathFileExtension(char const*, char*, unsigned long)
0000000000175c54 T pathGetCurrentDir(char*, unsigned long)
000000000017416c T pathJoinUnixStyle(char*, unsigned long, char const*, char const*)
0000000000175c20 T pathSetCurrentDir(char const*)
0000000000167cc4 T planeProjectPoint(Plane, Float3)
000000000013ac04 T remoteIsConnected()
000000000016acfc T settingsSaveToINI(char const*)
0000000000172494 T strSkipWhitespace(char const*)
00000000001787d4 T sysUUIDFromString(SysUUID*, char const*)
000000000013da74 T vfsStripMountPath(char*, unsigned int, char const*)
000000000013c744 T vfsWriteFileAsync(char const*, Blob const&, VfsFlags, void (*)(char const*, unsigned long, Blob const&, void*), void*)
0000000000182eec T ImAlphaBlendColors(unsigned int, unsigned int)
00000000001f3df0 W ImBitArrayClearBit(unsigned int*, int)
000000000018276c T ImFileLoadToMemory(char const*, char const*, unsigned long*, int)
0000000000180ed0 T ImLineClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&)
0000000000180938 T ImTextCharFromUtf8(unsigned int*, char const*, char const*)
000000000012fbec T appGetWindowHeight()
000000000014d4e0 T assertDebugMessage(char const*, ...)
00000000000f1f14 T assetCreateBarrier()
00000000000f0118 T assetMakeCacheHash(AssetCacheDesc const&)
00000000001798b0 T budgetViewerRender(float, bool*)
0000000000275eec T conRegisterCommand(ConCommandDesc const&)
000000000024a828 T gfxCmdBindPipeline(Handle<GfxPipelineT>)
000000000024acc8 T gfxCmdSetViewports(unsigned int, unsigned int, GfxViewport const*, bool)
00000000002458e8 T gfxCmdUpdateBuffer(Handle<GfxBufferT>, void const*, unsigned int)
0000000000244120 T gfxDestroyPipeline(Handle<GfxPipelineT>)
000000000024bb50 T gfxGetRenderTimeNs()
0000000000244760 T gfxResizeSwapchain(unsigned short, unsigned short)
0000000000152b94 T ini_property_count(ini_t const*, int)
0000000000152dc0 T ini_property_value(ini_t const*, int, int)
0000000000153118 T ini_section_remove(ini_t*, int)
0000000000157790 T jobsGetBudgetStats(JobsBudgetStats*)
0000000000163414 T mat4OrthoOffCenter(float, float, float, float, float, float, float, bool)
00000000001630d8 T mat4PerspectiveFOV(float, float, float, float, bool)
000000000014dac8 T memIsMemProEnabled()
000000000014d9b8 T memRunFailCallback()
000000000014da68 T memSetDefaultAlloc(Allocator*)
000000000014d988 T memSetFailCallback(void (*)(void*), void*)
00000000001785d4 T memVirtualDecommit(void*, unsigned long)
0000000000178724 T memVirtualGetStats()
0000000000173d64 T pathFileNameAndExt(char const*, char*, unsigned long)
0000000000139d80 T remoteSendResponse(unsigned int, Blob const&, bool, char const*)
00000000001726a4 T strSplitWhitespace(char const*, Allocator*)
0000000000177420 T threadGetCurrentId()
000000000013d81c T vfsGetLastModified(char const*)
0000000000253ac0 W VmaSuballocation* VmaBinaryFindSorted<VmaSuballocationOffsetLess, VmaSuballocation*, VmaSuballocation>(VmaSuballocation* const&, VmaSuballocation* const&, VmaSuballocation const&, VmaSuballocationOffsetLess const&)
0000000000253ca8 W VmaSuballocation const* VmaBinaryFindSorted<VmaSuballocationOffsetLess, VmaSuballocation const*, VmaSuballocation>(VmaSuballocation const* const&, VmaSuballocation const* const&, VmaSuballocation const&, VmaSuballocationOffsetLess const&)
0000000000253b98 W VmaSuballocation* VmaBinaryFindSorted<VmaSuballocationOffsetGreater, VmaSuballocation*, VmaSuballocation>(VmaSuballocation* const&, VmaSuballocation* const&, VmaSuballocation const&, VmaSuballocationOffsetGreater const&)
0000000000253d48 W VmaSuballocation const* VmaBinaryFindSorted<VmaSuballocationOffsetGreater, VmaSuballocation const*, VmaSuballocation>(VmaSuballocation const* const&, VmaSuballocation const* const&, VmaSuballocation const&, VmaSuballocationOffsetGreater const&)
00000000000f0020 T assetCollectGarbage()
00000000000f1fc0 T assetDestroyBarrier(Handle<AssetBarrierT>)
00000000000f2120 T assetGetBudgetStats(AssetBudgetStats*)
00000000001374b0 T clipboardInitialize(MemBumpAllocatorBase*, bool)
000000000016513c T colorToFloat4Linear(Float4)
000000000014eef8 T debugUnwindCallback(_Unwind_Context*, void*)
000000000017d350 T frameInfoInitialize()
0000000000245ae8 T gfxCmdPushConstants(Handle<GfxPipelineT>, GfxShaderStage, void const*, unsigned int)
000000000023f3d0 T gfxEndCommandBuffer()
0000000000265160 T imguiGetBudgetStats(ImGuiBudgetStats*)
0000000000153420 T ini_property_remove(ini_t*, int, int)
0000000000160860 T logRegisterCallback(void (*)(LogEntry const&, void*), void*)
0000000000142d80 T memTempSetDebugMode(bool)
000000000014d260 T randomCreateContext(unsigned int)
000000000014d650 T randomNewIntInRange(RandomContext*, int, int)
000000000014d794 T randomNewIntInRange(int, int)
0000000000171d68 T strRemoveWhitespace(char*, unsigned int, char const*)
0000000000175eec T sysAndroidGetJniEnv()
00000000001d4ff4 T ImFontAtlasBuildInit(ImFontAtlas*)
000000000020126c T ImParseFormatFindEnd(char const*)
00000000001535d4 T ini_section_name_set(ini_t*, int, char const*, int)
0000000000157874 T jobsResetBudgetStats()
0000000000165a08 T mat3InverseTransform(Mat4 const&)
0000000000163588 T mat4OrthoOffCenterLH(float, float, float, float, float, float, float, bool)
000000000016317c T mat4PerspectiveFOVLH(float, float, float, float, bool)
0000000000159414 W AtomicALockThread* memAllocAlignedTyped<AtomicALockThread>(unsigned int, unsigned int, Allocator*)
000000000010f2a4 W AssetImage* memAllocCopyRawBytes<AssetImage>(AssetImage const*, unsigned long, Allocator*)
000000000012bc5c W ModelMaterial* memAllocCopyRawBytes<ModelMaterial>(ModelMaterial const*, unsigned long, Allocator*)
000000000012c0c8 W AssetDependency* memAllocCopyRawBytes<AssetDependency>(AssetDependency const*, unsigned long, Allocator*)
000000000012bf7c W Model* memAllocCopyRawBytes<Model>(Model const*, unsigned long, Allocator*)
00000000001389dc W void* memAllocCopyRawBytes<void>(void const*, unsigned long, Allocator*)
000000000013ac74 T remoteExecuteCommand(unsigned int, Blob const&)
0000000000170bc0 T strPrintFmtAllocArgs(Allocator*, char const*, std::__va_list)
0000000000175c90 T sysAndroidPrintToLog(SysAndroidLogType, char const*, char const*)
0000000000175310 T sysGetPrimitiveStats()
0000000000175f48 T sysIsDebuggerPresent()
00000000001ce1e0 T ImBezierQuadraticCalc(ImVec2 const&, ImVec2 const&, ImVec2 const&, float)
00000000001f3d20 W ImBitArraySetBitRange(unsigned int*, int, int)
000000000013044c T appAndroidGetActivity()
000000000012fbc0 T appGetClipboardString()
0000000000130428 T appGetNativeAppHandle()
000000000012f070 T appSetClipboardString(char const*)
000000000014d620 T assertRunFailCallback()
000000000014d95c T assertSetFailCallback(void (*)(void*), void*)
00000000000f7ce8 T assetGetWhiteImage1x1()
0000000000164750 T float2CalcLinearFit2D(Float2 const*, int)
00000000001648b0 T float3CalcLinearFit3D(Float3 const*, int)
000000000023ed98 T gfxBeginCommandBuffer()
000000000024b140 T gfxCmdBindIndexBuffer(Handle<GfxBufferT>, unsigned long, GfxIndexType)
000000000023ec68 T gfxHasDeviceExtension(char const*)
0000000000153830 T ini_property_name_set(ini_t*, int, int, char const*, int)
0000000000155b50 T jobsWaitForCompletion(JobsInstance*)
0000000000160984 T logUnregisterCallback(void (*)(LogEntry const&, void*))
000000000014d46c T randomNewFloatInRange(RandomContext*, float, float)
000000000014d764 T randomNewFloatInRange(float, float)
000000000013aee0 T remoteRegisterCommand(RemoteCommandDesc const&)
00000000001716e4 T strIsEqualNoCaseCount(char const*, char const*, unsigned int)
000000000013db48 T vfsMountPackageBundle(char const*)
00000000001d5094 T ImFontAtlasBuildFinish(ImFontAtlas*)
00000000002011ec T ImParseFormatFindStart(char const*)
0000000000201454 T ImParseFormatPrecision(char const*, int)
0000000000181870 T ImTriangleClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&)
000000000012fbfc T appGetFramebufferWidth()
0000000000114ee0 T cgltf_buffer_view_data(cgltf_buffer_view const*)
000000000014f080 T debugCaptureStacktrace(void**, unsigned short, unsigned short, unsigned int*)
000000000014f158 T debugResolveStacktrace(unsigned short, void* const*, DebugStacktraceEntry*)
000000000017ebb0 T engineRegisterShortcut(char const*, void (*)(void*), void*)
0000000000249a68 T gfxCreateDescriptorSet(Handle<GfxDescriptorSetLayoutT>)
0000000000249db0 T gfxUpdateDescriptorSet(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*)
0000000000153abc T ini_property_value_set(ini_t*, int, int, char const*, int)
00000000001815bc T ImTriangleContainsPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&)
000000000012fc0c T appGetFramebufferHeight()
000000000017eb8c T engineGetCpuFrameTimeMS()
000000000024afd4 T gfxCmdBindVertexBuffers(unsigned int, unsigned int, Handle<GfxBufferT> const*, unsigned long const*)
0000000000244320 T gfxDestroyDescriptorSet(Handle<GfxDescriptorSetT>)
000000000023ed00 T gfxHasInstanceExtension(char const*)
0000000000175cc4 T sysAndroidAcquireJniEnv(ANativeActivity*)
0000000000175e54 T sysAndroidReleaseJniEnv(ANativeActivity*)
0000000000182a0c T ImTextCountCharsFromUtf8(char const*, char const*)
000000000012fe08 T appGetNativeWindowHandle()
000000000024a6b0 T gfxCmdBindDescriptorSets(Handle<GfxPipelineT>, unsigned int, Handle<GfxDescriptorSetT> const*, unsigned int const*, unsigned int)
000000000024b920 T gfxGetClipspaceTransform()
0000000000162ea4 T mat4PerspectiveOffCenter(float, float, float, float, float, float, bool)
00000000001636f8 T mat4ScaleRotateTranslate(float, float, float, float, float, float, float, float, float)
0000000000180d90 T ImBezierCubicClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, int)
00000000001d46fc T ImFontAtlasBuildSetupFont(ImFontAtlas*, ImFont*, ImFontConfig*, float, float)
00000000001a2c2c T ImGetDirQuadrantFromDelta(float, float)
0000000000130438 T appAndroidGetAssetManager()
000000000012fc2c T appRegisterEventsCallback(void (*)(AppEvent const&, void*), void*)
000000000024bb34 T gfxIsRenderingToSwapchain()
00000000001578b8 T jobsGetWorkerThreadsCount(JobsType)
000000000016ab18 T settingsInitializeFromINI(char const*)
000000000016626c T sx_mat4_from_normal_angle(Float3, float, Float3, float)
000000000013c0fc T vfsReqFileChangesThreadFn(void*)
0000000000130598 T appGetFramebufferTransform()
0000000000162fbc T mat4PerspectiveOffCenterLH(float, float, float, float, float, float, bool)
000000000016a430 T settingsAddCustomCallbacks(SettingsCustomCallbacks*)
0000000000139988 T settingsInitializeJunkyard(SettingsJunkyard const&)
00000000001773b0 T threadGetCurrentThreadName(char*, unsigned int)
000000000017737c T threadSetCurrentThreadName(char const*)
0000000000182dc4 T ImTextCountUtf8BytesFromStr(unsigned short const*, unsigned short const*)
0000000000181764 T ImTriangleBarycentricCoords(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, float&, float&, float&)
000000000012fd04 T appUnregisterEventsCallback(void (*)(AppEvent const&, void*))
0000000000142e60 T memTempSetCaptureStackTrace(bool)
000000000017600c T sysAndroidGetCacheDirectory(ANativeActivity*)
0000000000201364 T ImParseFormatTrimDecorations(char const*, char*, unsigned long)
0000000000182c78 T ImTextCountUtf8BytesFromChar(char const*, char const*)
000000000014e394 T debugFiberScopeProtector_Pop(unsigned short)
000000000014f288 T debugStacktraceSaveStopPoint(void*)
0000000000248e18 T gfxCmdEndSwapchainRenderPass()
0000000000248f2c T gfxCreateDescriptorSetLayout(GfxShader const&, GfxDescriptorSetLayoutBinding const*, unsigned int)
000000000014e18c T debugFiberScopeProtector_Push(char const*)
000000000024bc50 T gfxCreateDynamicUniformBuffer(unsigned int, unsigned int)
00000000002445e8 T gfxDestroyDescriptorSetLayout(Handle<GfxDescriptorSetLayoutT>)
0000000000244854 T gfxDestroySurfaceAndSwapchain()
00000000001399d0 T settingsIsInitializedJunkyard()
000000000016a4a4 T settingsRemoveCustomCallbacks(SettingsCustomCallbacks*)
000000000013e414 T vfsRegisterFileChangeCallback(void (*)(char const*))
000000000014e4f0 T debugFiberScopeProtector_Check()
0000000000248c68 T gfxCmdBeginSwapchainRenderPass(Color)
000000000024bda4 T gfxDestroyDynamicUniformBuffer(GfxDynamicUniformBuffer&)
0000000000242eb0 T gfxGetPhysicalDeviceProperties()
00000000002448dc T gfxRecreateSurfaceAndSwapchain()
000000000017426c T sysGenerateCmdLineFromArgcArgv(int, char const**, char**, unsigned int*, Allocator*, char const*)
0000000000177498 T threadSetCurrentThreadPriority(ThreadPriority)
00000000001d47fc T ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*)
000000000012f088 T appAndroidGetCharcodeFromKeycode(int, int, int)
000000000024806c T gfxBlendAttachmentDescGetDefault()
0000000000130578 T appAndroidSetFramebufferTransform(AppFramebufferTransform)
000000000016b138 T settingsInitializeFromCommandLine(int, char**)
0000000000181078 T ImBezierCubicClosestPointCasteljau(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, float)
00000000001d3448 T ImFontAtlasBuildMultiplyRectAlpha8(unsigned char const*, unsigned char*, int, int, int, int, int)
000000000016a518 T settingsInitializeFromAndroidAsset(AAssetManager*, char const*)
00000000001d33a8 T ImFontAtlasGetBuilderForStbTruetype()
000000000024bc30 T gfxSetUpdateImageDescriptorCallback(void (*)(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*))
000000000024a8bc T gfxBlendAttachmentDescGetAlphaBlending()
00000000001d33c4 T ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char*, float)
00000000001373ec W float Max<float>(float, float)
00000000000f5690 W unsigned int Max<unsigned int>(unsigned int, unsigned int)
000000000014c74c W unsigned long Max<unsigned long>(unsigned long, unsigned long)
000000000013742c W float Min<float>(float, float)
000000000012c740 W unsigned int Min<unsigned int>(unsigned int, unsigned int)
00000000000f68dc W unsigned long Min<unsigned long>(unsigned long, unsigned long)
000000000010f3f4 t pow(float, float)
00000000001d4cf0 T ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned char)
00000000001d4e74 T ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned int)
000000000014e088 T debugFiberScopeProtector_RegisterCallback(bool (*)(void*), void*)
000000000014e060 T debugSetCaptureStacktraceForFiberProtector(bool)
000000000025adcc W void Swap<GfxGarbage>(GfxGarbage&, GfxGarbage&)
000000000012d36c W void Swap<ModelLoadRequest>(ModelLoadRequest&, ModelLoadRequest&)
000000000012ed1c W void Swap<ShaderLoadRequest>(ShaderLoadRequest&, ShaderLoadRequest&)
0000000000132604 W void Swap<AppEventCallbackPair>(AppEventCallbackPair&, AppEventCallbackPair&)
0000000000259af4 W void Swap<VmaSuballocationType>(VmaSuballocationType&, VmaSuballocationType&)
000000000010e848 W void Swap<AssetImageLoadRequest>(AssetImageLoadRequest&, AssetImageLoadRequest&)
0000000000160fb0 W void Swap<Pair<void (*)(LogEntry const&, void*), void*> >(Pair<void (*)(LogEntry const&, void*), void*>&, Pair<void (*)(LogEntry const&, void*), void*>&)
0000000000261584 W void Swap<Handle<GfxPipelineT> >(Handle<GfxPipelineT>&, Handle<GfxPipelineT>&)
0000000000254a8c W void Swap<VmaAllocation_T::BlockAllocation>(VmaAllocation_T::BlockAllocation&, VmaAllocation_T::BlockAllocation&)
0000000000254d14 W void Swap<VmaDeviceMemoryBlock*>(VmaDeviceMemoryBlock*&, VmaDeviceMemoryBlock*&)
000000000016c56c W void Swap<SettingsCustomCallbacks*>(SettingsCustomCallbacks*&, SettingsCustomCallbacks*&)
000000000010f79c W void Swap<AssetDescriptorUpdateCacheItem*>(AssetDescriptorUpdateCacheItem*&, AssetDescriptorUpdateCacheItem*&)
00000000001688fc W void Swap<float>(float&, float&)
000000000025d770 W void Swap<int>(int&, int&)
000000000025ab6c W void Swap<unsigned int>(unsigned int&, unsigned int&)
0000000000137260 W float Clamp<float>(float, float, float)
000000000025ab34 W unsigned int Clamp<unsigned int>(unsigned int, unsigned int, unsigned int)
000000000014c714 W unsigned long Clamp<unsigned long>(unsigned long, unsigned long, unsigned long)
000000000010f3c8 t ldexp(float, int)
0000000000170d98 T strLen(char const*)
00000000001372c4 W unsigned int CountOf<InputKeycode, 8ul>(InputKeycode const (&) [8ul])
00000000002586f8 W unsigned int CountOf<VkDynamicState, 2ul>(VkDynamicState const (&) [2ul])
0000000000274cf0 W unsigned int CountOf<GfxDescriptorBindingDesc, 2ul>(GfxDescriptorBindingDesc const (&) [2ul])
000000000026561c W unsigned int CountOf<GfxDescriptorBindingDesc, 3ul>(GfxDescriptorBindingDesc const (&) [3ul])
000000000017c8e0 W unsigned int CountOf<GfxVertexInputAttributeDesc, 2ul>(GfxVertexInputAttributeDesc const (&) [2ul])
00000000002655e8 W unsigned int CountOf<GfxVertexInputAttributeDesc, 3ul>(GfxVertexInputAttributeDesc const (&) [3ul])
0000000000274cdc W unsigned int CountOf<GfxDescriptorSetLayoutBinding, 2ul>(GfxDescriptorSetLayoutBinding const (&) [2ul])
00000000002655d4 W unsigned int CountOf<GfxDescriptorSetLayoutBinding, 3ul>(GfxDescriptorSetLayoutBinding const (&) [3ul])
000000000025870c W unsigned int CountOf<VkPipelineShaderStageCreateInfo, 2ul>(VkPipelineShaderStageCreateInfo const (&) [2ul])
000000000017c918 W unsigned int CountOf<Float3, 8ul>(Float3 const (&) [8ul])
000000000025816c W unsigned int CountOf<void*, 8ul>(void* const (&) [8ul])
0000000000256430 W unsigned int CountOf<unsigned int, 2ul>(unsigned int const (&) [2ul])
000000000012fbc8 T appQuit()
0000000000153d74 T iniLoad(char const*, Allocator*)
0000000000153f48 T iniSave(IniContext const&, char const*)
0000000000165368 T mat3Mul(Mat3 const&, Mat3 const&)
0000000000162610 T mat4Mul(Mat4 const&, Mat4 const&)
0000000000161030 T mathCos(float)
00000000001610ec T mathExp(float)
0000000000161110 T mathLog(float)
0000000000161078 T mathSin(float)
0000000000170c98 T strCopy(char*, unsigned int, char const*)
0000000000171acc T strTrim(char*, unsigned int, char const*)
0000000000171c18 T strTrim(char*, unsigned int, char const*, char)
0000000000234044 t void BlitSort<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
00000000001454d0 t void BlitSort<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000181c0c T ImStrdup(char const*)
0000000000274d04 W void* IntToPtr<unsigned int>(unsigned int)
00000000000f4770 W void* IntToPtr<unsigned long>(unsigned long)
00000000000f53f4 W unsigned int PtrToInt<unsigned int>(void*)
00000000000f64f8 W unsigned long PtrToInt<unsigned long>(void*)
000000000014f44c W unsigned short PtrToInt<unsigned short>(void*)
0000000000151784 T ini_load(char const*, void*)
00000000001522dc T ini_save(ini_t const*, char*, int)
0000000000161054 T mathACos(float)
000000000016109c T mathASin(float)
0000000000161134 T mathSqrt(float)
0000000000173fac T pathJoin(char*, unsigned long, char const*, char const*)
00000000001782e4 T pathMove(char const*, char const*)
0000000000178218 T pathStat(char const*)
0000000000166c58 T quatLerp(Quat, Quat, float)
0000000000172538 T strSplit(char const*, char, Allocator*)
000000000017235c T strToInt(char const*)
000000000014c080 W tlsf_ffs(unsigned int)
000000000014c0ac W tlsf_fls(unsigned int)
00000000001c4d6c W void IM_DELETE<ImDrawList>(ImDrawList*)
00000000001bf8b8 W void IM_DELETE<ImFontAtlas>(ImFontAtlas*)
00000000001c2018 W void IM_DELETE<ImGuiTabBar>(ImGuiTabBar*)
00000000001c792c W void IM_DELETE<ImGuiWindow>(ImGuiWindow*)
00000000001beb40 W void IM_DELETE<ImGuiContext>(ImGuiContext*)
00000000001c1bd0 W void IM_DELETE<ImGuiDockNode>(ImGuiDockNode*)
00000000001c4cd4 W void IM_DELETE<ImGuiViewportP>(ImGuiViewportP*)
00000000001e57fc W void IM_DELETE<ImFont>(ImFont*)
00000000001bdc24 W void IM_DELETE<char>(char*)
000000000012bef8 W unsigned int IdToIndex<unsigned int>(unsigned int)
00000000001824b4 T ImHashStr(char const*, unsigned long, unsigned int)
0000000000181f10 T ImStrbolW(unsigned short const*, unsigned short const*)
0000000000181a04 T ImStricmp(char const*, char const*)
0000000000181f6c T ImStristr(char const*, char const*, char const*, char const*)
0000000000181e48 T ImStrlenW(unsigned short const*)
0000000000181ba4 T ImStrncpy(char*, char const*, unsigned long)
000000000012b7d4 W unsigned int IndexToId<unsigned int>(unsigned int)
00000000002553dc W bool VmaIsPow2<int>(int)
0000000000255404 W bool VmaIsPow2<unsigned long>(unsigned long)
00000000000f0998 T assetLoad(AssetLoadParams const&, void const*)
00000000000f2044 T assetWait(Handle<AssetBarrierT>, unsigned int)
000000000014f4f0 T hashCRC32(void const*, unsigned long, unsigned int)
000000000015e798 T jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)
0000000000163220 T mat4Ortho(float, float, float, float, float, bool)
00000000001610c0 T mathATan2(float, float)
0000000000161018 T mathFloor(float)
000000000016114c T mathRsqrt(float)
0000000000173b70 T pathToWin(char const*, char*, unsigned long)
0000000000166f74 T quatSlerp(Quat, Quat, float)
00000000001712f8 T strConcat(char*, unsigned int, char const*)
00000000001722c0 T strToBool(char const*)
0000000000172380 T strToUint(char const*)
00000000002c9898 b guard variable for AndroidMain(int, char**)::impl
00000000002c9c50 b guard variable for __cxa_thread_atexit::manager
00000000002c10a8 b guard variable for ImGui::ShowMetricsWindow(bool*)::viewports
00000000002c9730 b guard variable for ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::panelPosition
00000000002c9780 b guard variable for ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::panelSize
00000000002c8d60 b guard variable for _private::gfxInitialize()::vmaFuncs
00000000002be7a0 b guard variable for _private::assetInitializeImageManager()::whiteImage
00000000002c9be0 b guard variable for std::__ndk1::future_category()::__f
00000000002c9940 b guard variable for std::__ndk1::system_category()::s
00000000002c9930 b guard variable for std::__ndk1::generic_category()::s
00000000002c9950 b guard variable for std::__ndk1::__thread_local_data()::__p
0000000000183154 t ImSaturate(float)
00000000001f783c t ImSaturate(float)
000000000018365c t LowerBound(ImVector<ImGuiStorage::ImGuiStoragePair>&, unsigned int)
0000000000229dd8 t unsigned long VmaAlignUp<unsigned long>(unsigned long, unsigned long)
0000000000169fdc t _sargs_str(sargs_state const*, int)
0000000000141d2c t align_down(unsigned long, unsigned long)
0000000000141714 t block_next(block_header_t const*)
0000000000145d84 t block_prev(block_header_t const*)
0000000000141780 t block_size(block_header_t const*)
000000000015f5ac t cj5__isnum(char)
00000000002bf840 b gClipboard
00000000002c0cf4 b gDebugDraw
00000000002c0d00 b gFrameInfo
00000000002c0c30 b gTimerInit
00000000002c0c64 b g_cpuCount
0000000000158f6c t jobsJumpIn(mco_coro*)
0000000000118f48 t jsmn_parse(jsmn_parser*, char const*, unsigned long, jsmntok_t*, unsigned long)
0000000000154c58 t mco_malloc(unsigned long, void*)
00000000001e2b80 t stb__match(unsigned char const*, unsigned int)
00000000000feac8 t stbi__get8(stbi__context*)
0000000000101060 t stbi__getn(stbi__context*, unsigned char*, int)
0000000000100f10 t stbi__skip(stbi__context*, int)
0000000000102fa4 t stbi__zeof(stbi__zbuf*)
000000000009c538 r stbsp__bot
000000000009c820 r stbsp__top
0000000000131a2c t timerToSec(unsigned long)
000000000023c268 t void vma_delete<VmaAllocator_T>(VkAllocationCallbacks const*, VmaAllocator_T*)
000000000023812c t void vma_delete<VmaBlockVector>(VmaAllocator_T*, VmaBlockVector*)
0000000000230fb8 t void vma_delete<VmaBlockMetadata>(VmaAllocator_T*, VmaBlockMetadata*)
000000000023088c t void vma_delete<VmaBlockMetadata>(VkAllocationCallbacks const*, VmaBlockMetadata*)
000000000023e938 t void vma_delete<VmaVirtualBlock_T>(VkAllocationCallbacks const*, VmaVirtualBlock_T*)
000000000023278c t void vma_delete<VmaDeviceMemoryBlock>(VmaAllocator_T*, VmaDeviceMemoryBlock*)
000000000023d828 t void vma_delete<VmaDefragmentationContext_T>(VmaAllocator_T*, VmaDefragmentationContext_T*)
000000000023b294 t void vma_delete<VmaPool_T>(VmaAllocator_T*, VmaPool_T*)
00000000001b3b04 t FreeWrapper(void*, void*)
0000000000180fe4 t ImLengthSqr(ImVec2 const&)
00000000001d160c t ImLengthSqr(ImVec2 const&)
000000000020b93c t ImLengthSqr(ImVec2 const&)
0000000000271a34 t ImLengthSqr(ImVec2 const&)
00000000001a59e0 t ScaleWindow(ImGuiWindow*, float)
000000000023c23c t VmaAllocator_T* VmaAllocate<VmaAllocator_T>(VkAllocationCallbacks const*)
0000000000237d10 t VmaBlockVector* VmaAllocate<VmaBlockVector>(VmaAllocator_T*)
000000000023e90c t VmaVirtualBlock_T* VmaAllocate<VmaVirtualBlock_T>(VkAllocationCallbacks const*)
00000000002345b4 t VmaDeviceMemoryBlock* VmaAllocate<VmaDeviceMemoryBlock>(VmaAllocator_T*)
0000000000230dbc t VmaBlockMetadata_TLSF* VmaAllocate<VmaBlockMetadata_TLSF>(VmaAllocator_T*)
0000000000230768 t VmaBlockMetadata_TLSF* VmaAllocate<VmaBlockMetadata_TLSF>(VkAllocationCallbacks const*)
0000000000230d90 t VmaBlockMetadata_Linear* VmaAllocate<VmaBlockMetadata_Linear>(VmaAllocator_T*)
00000000002307d0 t VmaBlockMetadata_Linear* VmaAllocate<VmaBlockMetadata_Linear>(VkAllocationCallbacks const*)
000000000023d790 t VmaDefragmentationContext_T* VmaAllocate<VmaDefragmentationContext_T>(VmaAllocator_T*)
000000000023b268 t VmaPool_T* VmaAllocate<VmaPool_T>(VmaAllocator_T*)
0000000000155398 t _mco_jumpin(mco_coro*)
000000000016be20 t _sargs_putc(sargs_state*, char)
0000000000145c6c t block_split(block_header_t*, unsigned long)
00000000001107a8 t cgltf_unhex(char)
000000000015c8c8 t cj5__strcpy(char*, int, char const*, int)
000000000015c24c t cj5__strlen(char const*)
000000000017648c t cpulist_and(CpuList*, CpuList*)
00000000001766cc t cpulist_set(CpuList*, int)
00000000002c0c54 b g_cpuFamily
0000000000242284 t gfxHasLayer(char const*)
0000000000156fdc t jobsEntryFn(mco_coro*)
0000000000155e14 t jobsJumpOut(mco_coro*)
00000000001e290c t stb_adler32(unsigned int, unsigned char*, unsigned int)
000000000009b01c r stbi__bmask
00000000001082c4 t stbi__clamp(int)
000000000009b060 r stbi__jbias
0000000000104d7c t stbi__paeth(int, int, int)
0000000000102f54 t stbi__zget8(stbi__zbuf*)
0000000000171098 t strLenCount(char const*, unsigned int)
00000000001779ec t timespecAdd(timespec*, int)
00000000001d8d6c t Decode85Byte(char)
000000000022d904 t unsigned long VmaAlignDown<unsigned long>(unsigned long, unsigned long)
00000000001555a4 t _mco_jumpout(mco_coro*)
0000000000158054 t _mco_makectx(mco_coro*, _mco_ctxbuf*, void*, unsigned long)
0000000000155a14 t _mco_running()
000000000014dd04 t aligned_free(void*)
0000000000145e14 t block_absorb(block_header_t*, block_header_t*)
0000000000141e08 t block_insert(control_t*, block_header_t*)
0000000000145dcc t block_remove(control_t*, block_header_t*)
00000000001419e8 t block_to_ptr(block_header_t const*)
000000000011e340 t cgltf_calloc(cgltf_options*, unsigned long, unsigned long)
000000000015f5dc t cj5__isrange(char, char, char)
000000000015f61c t cj5__isspace(char)
000000000015cab4 t cj5__tofloat(char const*, double*)
00000000001764e8 t cpulist_init(CpuList*)
00000000002bdd08 d gModelLoader
00000000002c0c38 b gSysCounters
00000000001378e0 t hashFnv32Str(char const*)
0000000000249a00 t hashFnv32Str(char const*)
0000000000264e64 t hashFnv32Str(char const*)
00000000002628dc t imguiOnEvent(AppEvent const&, void*)
0000000000157078 t jobsThreadFn(void*)
00000000002c6820 b loadedDevice
0000000000118384 t modelDestroy(Model*, Allocator*)
0000000000176708 t parse_number(char const*, char const*, int, int*)
0000000000106e88 t stbi__at_eof(stbi__context*)
00000000000fec24 t stbi__do_png(stbi__png*, int*, int*, int*, int, stbi__result_info*)
0000000000101fe0 t stbi__malloc(unsigned long)
00000000000fea98 t stbi__rewind(stbi__context*)
00000000002bde41 d stbsp__comma
0000000000176e8c t threadStubFn(void*)
000000000013c440 t vfsFindMount(char const*)
00000000002b0c50 d GDataTypeInfo
000000000009d1c4 r GStyleVarInfo
00000000001cdfe0 t ImFloorSigned(float)
0000000000216bdc t ImLinearSweep(float, float, float)
00000000001b3adc t MallocWrapper(unsigned long, void*)
0000000000230370 t VmaBitScanLSB(unsigned int)
000000000022a6b0 t VmaBitScanMSB(unsigned long)
0000000000232584 t VmaFreeString(VkAllocationCallbacks const*, char*)
000000000016b918 t _sargs_escape(char)
00000000000f103c t assetLoadTask(unsigned int, void*)
00000000001416d4 t block_is_free(block_header_t const*)
00000000001419b8 t block_is_last(block_header_t const*)
00000000001764b8 t cpulist_count(CpuList*)
0000000000176500 t cpulist_parse(CpuList*, char const*, int)
000000000017e4c8 t engineOnEvent(AppEvent const&, void*)
00000000002c0cd8 b gBudgetViewer
00000000002bea80 b gShaderLoader
00000000002c0c58 b g_cpuFeatures
0000000000176314 t get_cpu_count()
0000000000176110 t get_file_size(char const*)
0000000000262d8c t imguiSetTheme()
0000000000158108 t jobsAddToList(JobsWaitingList*, JobsFiberProperties*)
0000000000158ed8 t jobsMcoFreeFn(void*, void*)
000000000012afec t modelLoadTask(unsigned int, void*)
0000000000176694 t parse_decimal(char const*, char const*, int*)
00000000001074e8 t stbi__copyval(int, unsigned char*, unsigned char const*)
0000000000102094 t stbi__do_zlib(stbi__zbuf*, char*, int, int, int)
0000000000101018 t stbi__get16be(stbi__context*)
0000000000105190 t stbi__get16le(stbi__context*)
0000000000100fd8 t stbi__get32be(stbi__context*)
0000000000105150 t stbi__get32le(stbi__context*)
0000000000106e14 t stbi__pic_is4(stbi__context*, char const*)
000000000010743c t stbi__readval(stbi__context*, int, unsigned char*)
0000000000103068 t stbi__zexpand(stbi__zbuf*, char*, int)
000000000009c5f0 r stbsp__negbot
000000000009c750 r stbsp__negtop
00000000002bde40 d stbsp__period
000000000009c498 r stbsp__powten
000000000009c888 r stbsp__toperr
00000000001d9f24 t stbtt_PackEnd(stbtt_pack_context*)
00000000001da370 t stbtt__isfont(unsigned char*)
00000000001fd57c t bool DataTypeClampT<signed char>(signed char*, signed char const*, signed char const*)
00000000001fdb88 t bool DataTypeClampT<double>(double*, double const*, double const*)
00000000001fdadc t bool DataTypeClampT<float>(float*, float const*, float const*)
00000000001fd628 t bool DataTypeClampT<unsigned char>(unsigned char*, unsigned char const*, unsigned char const*)
00000000001fd82c t bool DataTypeClampT<int>(int*, int const*, int const*)
00000000001fd8d8 t bool DataTypeClampT<unsigned int>(unsigned int*, unsigned int const*, unsigned int const*)
00000000001fd6d4 t bool DataTypeClampT<short>(short*, short const*, short const*)
00000000001fd780 t bool DataTypeClampT<unsigned short>(unsigned short*, unsigned short const*, unsigned short const*)
00000000001fd984 t bool DataTypeClampT<long long>(long long*, long long const*, long long const*)
00000000001fda30 t bool DataTypeClampT<unsigned long long>(unsigned long long*, unsigned long long const*, unsigned long long const*)
00000000001840f0 t ImCharIsBlankA(char)
00000000001d70f0 t ImCharIsBlankA(char)
00000000001fce24 t ImCharIsBlankA(char)
00000000001d6d58 t ImCharIsBlankW(unsigned int)
0000000000215da0 t ImCharIsBlankW(unsigned int)
000000000019d4c8 t ImIsPowerOfTwo(int)
00000000001f251c t ImIsPowerOfTwo(int)
00000000001f95d4 t ImIsPowerOfTwo(int)
000000000016bcc8 t _sargs_end_key(sargs_state*)
000000000016bdb0 t _sargs_end_val(sargs_state*)
000000000014db10 t aligned_malloc(unsigned int, unsigned long)
00000000000f894c t assetBakeImage(char const*, Allocator*, AssetMetaKeyValue const*, unsigned int, char*, unsigned int)
00000000000f0db0 t assetCreateNew(unsigned int, unsigned int, AssetLoadParams const&, void const*)
0000000000141a44 t block_from_ptr(void const*)
0000000000141dc8 t block_set_free(block_header_t*)
0000000000141d90 t block_set_size(block_header_t*, unsigned long)
0000000000141e88 t block_set_used(block_header_t*)
000000000015b458 t cj5__set_error(cj5_result*, cj5_error_code, int, int)
0000000000141910 t default_walker(void*, unsigned long, int, void*)
0000000000263ce8 t imguiDrawFrame()
00000000002bde10 d kLogEntryTypes
00000000002c6818 b loadedInstance
000000000014179c t mapping_insert(unsigned long, int*, int*)
0000000000145a1c t mapping_search(unsigned long, int*, int*)
000000000010ac10 t resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int)
000000000013a134 t serverThreadFn(void*)
00000000001d2aa0 t stb_decompress(unsigned char*, unsigned char const*, unsigned int)
0000000000105750 t stbi__bitcount(unsigned int)
00000000000fa474 t stbi__bmp_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fa440 t stbi__bmp_test(stbi__context*)
00000000000fb68c t stbi__gif_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fb658 t stbi__gif_test(stbi__context*)
00000000000fcc68 t stbi__hdr_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fcc08 t stbi__hdr_test(stbi__context*)
0000000000105674 t stbi__high_bit(unsigned int)
00000000000fc4b8 t stbi__pic_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fc484 t stbi__pic_test(stbi__context*)
00000000000fa3ec t stbi__png_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fa3b8 t stbi__png_test(stbi__context*)
000000000010d1d8 t stbi__pnm_info(stbi__context*, int*, int*, int*)
00000000000fc9dc t stbi__pnm_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fc968 t stbi__pnm_test(stbi__context*)
00000000000fb960 t stbi__psd_load(stbi__context*, int*, int*, int*, int, stbi__result_info*, int)
00000000000fb918 t stbi__psd_test(stbi__context*)
00000000000fdd94 t stbi__tga_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fdbb4 t stbi__tga_test(stbi__context*)
000000000010231c t stbi__zreceive(stbi__zbuf*, int)
00000000001d8dd4 t stbtt_InitFont(stbtt_fontinfo*, unsigned char const*, int)
00000000001db3d8 t stbtt__buf_get(stbtt__buf*, int)
00000000001db578 t stbtt__cff_int(stbtt__buf*)
00000000001dcf20 t stbtt__csctx_v(stbtt__csctx*, unsigned char, int, int, int, int, int, int)
00000000001dacb0 t stbtt__new_buf(void const*, unsigned long)
0000000000199bc4 t ClampWindowRect(ImGuiWindow*, ImRect const&)
0000000000197d28 t CreateNewWindow(char const*, int)
0000000000185ab0 t GetStyleVarInfo(int)
00000000001a5890 t TranslateWindow(ImGuiWindow*, ImVec2 const&)
000000000023a3a0 t VmaCountBitsSet(unsigned int)
000000000022d810 t void VmaVectorRemove<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >(VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >&, unsigned long)
0000000000233fac t void VmaVectorRemove<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >(VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >&, unsigned long)
000000000016bb50 t _sargs_is_quote(sargs_state const*, char)
000000000014dbc8 t aligned_realloc(void*, unsigned int, unsigned long)
00000000001753c8 t android_cpuInit()
0000000000131954 t appAndroidFrame(float)
0000000000145c30 t block_can_split(block_header_t*, unsigned long)
0000000000141e50 t block_link_next(block_header_t*)
0000000000145bac t block_trim_free(control_t*, block_header_t*, unsigned long)
0000000000142cf4 t block_trim_used(control_t*, block_header_t*, unsigned long)
00000000001126f4 t cgltf_calc_size(cgltf_type, cgltf_component_type)
000000000011e4c0 t cgltf_skip_json(jsmntok_t const*, int)
000000000015b3e0 t cj5__hash_fnv32(char const*, char const*)
00000000002c0648 b gDebugStopFuncs
00000000002c0600 b gFiberProtector
00000000002bfb80 b gRemoteServices
000000000015819c t jobsCreateFiber(JobsFiberProperties*)
0000000000158e0c t jobsMcoMallocFn(unsigned long, void*)
000000000011d0ec t jsmn_fill_token(jsmntok_t*, jsmntype_t, int, int)
0000000000109c44 t load_jpeg_image(stbi__jpeg*, int*, int*, int*, int)
0000000000141998 t offset_to_block(void const*, unsigned long)
00000000002c0fc8 b resize_grip_def
000000000010af14 t stbi__blinn_8x8(unsigned char, unsigned char)
0000000000104fc8 t stbi__compute_y(int, int, int)
0000000000101ac0 t stbi__de_iphone(stbi__png*)
0000000000102fd0 t stbi__fill_bits(stbi__zbuf*)
00000000000fc860 t stbi__jpeg_load(stbi__context*, int*, int*, int*, int, stbi__result_info*)
00000000000fc774 t stbi__jpeg_test(stbi__context*)
00000000000f9e74 t stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int)
00000000000f9c40 t stbi__start_mem(stbi__context*, unsigned char const*, int)
00000000001d9738 t stbtt_PackBegin(stbtt_pack_context*, unsigned char*, int, int, int, int, void*)
00000000001de11c t stbtt_Rasterize(stbtt__bitmap*, float, stbtt_vertex*, int, float, float, float, float, int, int, int, void*)
00000000001daf10 t stbtt__buf_get8(stbtt__buf*)
00000000001dae74 t stbtt__buf_seek(stbtt__buf*, int)
00000000001dae3c t stbtt__buf_skip(stbtt__buf*, int)
00000000001db474 t stbtt__dict_get(stbtt__buf*, int)
00000000001dcdcc t stbtt__get_subr(stbtt__buf, int)
00000000001dd104 t stbtt_setvertex(stbtt_vertex*, unsigned char, int, int, int, int)
000000000013df9c t vfsDiskReadFile(char const*, VfsFlags, Allocator*)
00000000001fcffc t int DataTypeCompareT<signed char>(signed char const*, signed char const*)
00000000001fd380 t int DataTypeCompareT<double>(double const*, double const*)
00000000001fd31c t int DataTypeCompareT<float>(float const*, float const*)
00000000001fd060 t int DataTypeCompareT<unsigned char>(unsigned char const*, unsigned char const*)
00000000001fd18c t int DataTypeCompareT<int>(int const*, int const*)
00000000001fd1f0 t int DataTypeCompareT<unsigned int>(unsigned int const*, unsigned int const*)
00000000001fd0c4 t int DataTypeCompareT<short>(short const*, short const*)
00000000001fd128 t int DataTypeCompareT<unsigned short>(unsigned short const*, unsigned short const*)
00000000001fd254 t int DataTypeCompareT<long long>(long long const*, long long const*)
00000000001fd2b8 t int DataTypeCompareT<unsigned long long>(unsigned long long const*, unsigned long long const*)
00000000001baef0 t DockNodeFindInfo(ImGuiDockNode*, ImGuiDockNodeTreeInfo*)
00000000001f1080 t GetColumnWidthEx(ImGuiOldColumns*, int, bool)
000000000020eaf0 t Plot_ArrayGetter(void*, int)
000000000019919c t SetCurrentWindow(ImGuiWindow*)
000000000024c254 t VmaAddStatistics(VmaStatistics&, VmaStatistics const&)
000000000024d014 t VmaSuballocation* VmaAllocateArray<VmaSuballocation>(VkAllocationCallbacks const*, unsigned long)
000000000025323c t VkMappedMemoryRange* VmaAllocateArray<VkMappedMemoryRange>(VkAllocationCallbacks const*, unsigned long)
0000000000253204 t VmaDefragmentationMove* VmaAllocateArray<VmaDefragmentationMove>(VkAllocationCallbacks const*, unsigned long)
0000000000253194 t VmaPoolAllocator<VmaAllocation_T>::Item* VmaAllocateArray<VmaPoolAllocator<VmaAllocation_T>::Item>(VkAllocationCallbacks const*, unsigned long)
000000000024c21c t VmaPoolAllocator<VmaAllocation_T>::ItemBlock* VmaAllocateArray<VmaPoolAllocator<VmaAllocation_T>::ItemBlock>(VkAllocationCallbacks const*, unsigned long)
000000000024d0d8 t VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::Item* VmaAllocateArray<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::Item>(VkAllocationCallbacks const*, unsigned long)
000000000024d0a0 t VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock* VmaAllocateArray<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock>(VkAllocationCallbacks const*, unsigned long)
0000000000234948 t VmaDefragmentationContext_T::StateBalanced* VmaAllocateArray<VmaDefragmentationContext_T::StateBalanced>(VmaAllocator_T*, unsigned long)
0000000000234980 t VmaDefragmentationContext_T::StateExtensive* VmaAllocateArray<VmaDefragmentationContext_T::StateExtensive>(VmaAllocator_T*, unsigned long)
00000000002531cc t VmaDefragmentationContext_T::FragmentedBlock* VmaAllocateArray<VmaDefragmentationContext_T::FragmentedBlock>(VkAllocationCallbacks const*, unsigned long)
0000000000229c54 t VmaBlockBufferImageGranularity::RegionInfo* VmaAllocateArray<VmaBlockBufferImageGranularity::RegionInfo>(VkAllocationCallbacks const*, unsigned long)
000000000024d178 t VmaDeviceMemoryBlock** VmaAllocateArray<VmaDeviceMemoryBlock*>(VkAllocationCallbacks const*, unsigned long)
000000000022dd88 t VmaBlockMetadata_TLSF::Block** VmaAllocateArray<VmaBlockMetadata_TLSF::Block*>(VkAllocationCallbacks const*, unsigned long)
000000000024bfd0 t char* VmaAllocateArray<char>(VkAllocationCallbacks const*, unsigned long)
000000000022a394 t unsigned short* VmaAllocateArray<unsigned short>(VkAllocationCallbacks const*, unsigned long)
000000000016bd98 t _sargs_end_quote(sargs_state*)
000000000016b8fc t _sargs_in_escape(sargs_state const*)
000000000016bd70 t _sargs_in_quotes(sargs_state const*)
000000000016b9ac t _sargs_is_escape(char)
000000000016baac t _sargs_start_key(sargs_state*)
000000000016bbe8 t _sargs_start_val(sargs_state*)
00000000000efaec t assetFileChanged(char const*)
00000000000f2610 t assetSaveToCache(AssetTypeManager const&, AssetLoadParams const&, AssetResult const&, unsigned int)
0000000000142a6c t block_merge_next(control_t*, block_header_t*)
00000000001429d0 t block_merge_prev(control_t*, block_header_t*)
000000000010fc1c t cgltf_parse_json(cgltf_options*, unsigned char const*, unsigned long, cgltf_data**)
000000000015b338 t cj5__alloc_token(cj5__parser*)
000000000015f54c t cj5__islowerchar(char)
000000000015f57c t cj5__isupperchar(char)
00000000002bdbb1 d first_row_filter
0000000000245760 t gfxCmdCopyBuffer(VkBuffer_T*, VkBuffer_T*, unsigned int, VkBufferCopy const*)
000000000024250c t gfxDebugReportFn(unsigned int, VkDebugReportObjectTypeEXT, unsigned long, unsigned long, int, char const*, char const*, void*)
0000000000141a94 t integrity_walker(void*, unsigned long, int, void*)
0000000000158ffc t jobsDestroyFiber(JobsFiber*)
000000000011cb54 t jsmn_alloc_token(jsmn_parser*, jsmntok_t*, unsigned long)
00000000002be088 d kGfxVkExtensions
0000000000129308 t modelGltfGetWrap(GLTF_Wrap)
00000000001295f0 t modelHasTangents(cgltf_primitive const*)
0000000000108318 t stbi__get_marker(stbi__jpeg*)
00000000001062d0 t stbi__gif_header(stbi__context*, stbi__gif*, int*, int)
00000000000fd868 t stbi__hdr_to_ldr(float*, int, int, int)
0000000000107740 t stbi__idct_block(unsigned char*, int, short*)
000000000010c028 t stbi__jpeg_reset(stbi__jpeg*)
0000000000102104 t stbi__parse_zlib(stbi__zbuf*, int)
0000000000107564 t stbi__setup_jpeg(stbi__jpeg*)
000000000009ae4c r stbi__zdist_base
00000000001d4ac4 t stbrp_pack_rects(stbrp_context*, stbrp_rect*, int)
00000000002bde68 d stbsp__digitpair
000000000016fee0 t stbsp__lead_sign(unsigned int, char*)
000000000009c6a0 r stbsp__negboterr
000000000009c7b8 r stbsp__negtoperr
00000000001dfac4 t stbtt__add_point(stbtt__point*, int, float, float)
00000000001db6bc t stbtt__buf_peek8(stbtt__buf*)
00000000001db314 t stbtt__buf_range(stbtt__buf const*, int, int)
00000000001db224 t stbtt__get_subrs(stbtt__buf, stbtt__buf)
00000000001df744 t stbtt__rasterize(stbtt__bitmap*, stbtt__point*, int*, int, float, float, float, float, int, int, int, void*)
000000000013e28c t vfsDiskWriteFile(char const*, VfsFlags, Blob const&)
000000000024c1a4 t vma_aligned_free(void*)
000000000024c1c8 t void vma_delete_array<VmaPoolAllocator<VmaAllocation_T>::Item>(VkAllocationCallbacks const*, VmaPoolAllocator<VmaAllocation_T>::Item*, unsigned long)
000000000024d04c t void vma_delete_array<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::Item>(VkAllocationCallbacks const*, VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::Item*, unsigned long)
0000000000234adc t void vma_delete_array<VmaDefragmentationContext_T::StateBalanced>(VkAllocationCallbacks const*, VmaDefragmentationContext_T::StateBalanced*, unsigned long)
0000000000234b30 t void vma_delete_array<VmaDefragmentationContext_T::StateExtensive>(VkAllocationCallbacks const*, VmaDefragmentationContext_T::StateExtensive*, unsigned long)
0000000000229cdc t void vma_delete_array<VmaBlockBufferImageGranularity::RegionInfo>(VkAllocationCallbacks const*, VmaBlockBufferImageGranularity::RegionInfo*, unsigned long)
000000000022da74 t void vma_delete_array<VmaBlockMetadata_TLSF::Block*>(VkAllocationCallbacks const*, VmaBlockMetadata_TLSF::Block**, unsigned long)
000000000024c0f8 t void vma_delete_array<char>(VkAllocationCallbacks const*, char*, unsigned long)
000000000022a614 t void vma_delete_array<unsigned short>(VkAllocationCallbacks const*, unsigned short*, unsigned long)
000000000014e314 t FiberProtectorCtx()
000000000018b7fc t FindHoveredWindow()
000000000009cd3c r GCrc32LookupTable
00000000001d98c8 t ImUpperPowerOfTwo(int)
00000000001fb5f0 t Items_ArrayGetter(void*, int, char const**)
0000000000142de0 t MemGetTempContext()
00000000001b0064 t MetricsHelpMarker(char const*)
00000000001b7118 t SetWindowViewport(ImGuiWindow*, ImGuiViewportP*)
00000000001ef2c8 t TableSettingsInit(ImGuiTableSettings*, unsigned int, int, int)
000000000016b994 t _sargs_end_escape(sargs_state*)
000000000016b6b8 t _sargs_expect_key(sargs_state*)
000000000016bd28 t _sargs_expect_sep(sargs_state*)
000000000016bc80 t _sargs_expect_val(sargs_state*)
000000000016b6d4 t _sargs_parse_carg(sargs_state*, char const*)
0000000000130ec0 t appAndroidCleanup()
0000000000131320 t appAndroidDestroy()
00000000001305b0 t appAndroidReadCmd()
00000000000f22d0 t assetLoadObjLocal(Handle<AssetHandleT>, AssetTypeManager const&, AssetLoadParams const&, unsigned int, bool*)
0000000000142558 t block_locate_free(control_t*, unsigned long)
0000000000114990 t cgltf_free_extras(cgltf_data*, cgltf_extras*)
000000000011d134 t cgltf_json_strcmp(jsmntok_t const*, unsigned char const*, char const*)
000000000011e014 t cgltf_json_to_int(jsmntok_t const*, unsigned char const*)
000000000015b4a0 t cj5__parse_string(cj5__parser*, cj5_result*, char const*, int)
000000000015b85c t cj5__skip_comment(cj5__parser*, char const*, int)
0000000000142330 t control_construct(control_t*)
00000000001763f8 t cpulist_read_from(CpuList*, char const*)
00000000002bfa20 b gSettingsJunkyard
00000000002433ac t gfxCollectGarbage(bool)
00000000002498ac t gfxShaderGetParam(GfxShader const&, char const*)
0000000000247918 t gfxShaderGetStage(GfxShader const&, GfxShaderStage)
0000000000263c1c t imguiUpdateCursor()
0000000000145868 t insert_free_block(control_t*, block_header_t*, int, int)
0000000000155df4 t jobsGetThreadData()
000000000011cbe0 t jsmn_parse_string(jsmn_parser*, char const*, unsigned long, jsmntok_t*, unsigned long)
00000000002b0ff0 d kAdrenoDebugLayer
000000000009aa4c r kAssetCacheFileId
00000000001180ac t modelLoadTextures(Model*, Handle<AssetBarrierT>)
0000000000117394 t modelSetupBuffers(ModelMesh*, ModelGeometryLayout const&, cgltf_mesh*)
000000000014d2f0 t randomAvalanche64(unsigned long)
0000000000141fa4 t remove_free_block(control_t*, block_header_t*, int, int)
00000000002c1028 b resize_border_def
00000000002c67b0 b stb__barrier_in_b
0000000000103284 t stbi__bit_reverse(int, int)
00000000002bdc04 d stbi__h2l_gamma_i
00000000002bdc00 d stbi__h2l_scale_i
000000000010d848 t stbi__hdr_convert(float*, unsigned char*, int)
000000000010be2c t stbi__jpeg_finish(stbi__jpeg*)
0000000000104efc t stbi__malloc_mad2(int, int, int)
0000000000104c74 t stbi__malloc_mad3(int, int, int, int)
000000000010d410 t stbi__malloc_mad4(int, int, int, int, int)
000000000010d69c t stbi__pnm_isdigit(char)
000000000010d610 t stbi__pnm_isspace(char)
00000000001057d4 t stbi__shiftsigned(unsigned int, int, int)
000000000009aecc r stbi__zdist_extra
00000000001dd198 t stbrp_init_target(stbrp_context*, int, int, stbrp_node*, int)
00000000001db7f4 t stbtt_GetGlyphBox(stbtt_fontinfo const*, int, int*, int*, int*, int*)
00000000001dad14 t stbtt__find_table(unsigned char*, unsigned int, char const*)
00000000001e0990 t stbtt__hheap_free(stbtt__hheap*, void*)
00000000001e09c0 t stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*)
00000000001e0048 t stbtt__sort_edges(stbtt__edge*, int)
0000000000177228 t threadSetPriority(long, ThreadPriority)
000000000024c09c t vma_aligned_alloc(unsigned long, unsigned long)
0000000000223060 t volkGenLoadDevice(void*, void (* (*)(void*, char const*))())
0000000000222510 t volkGenLoadLoader(void*, void (* (*)(void*, char const*))())
00000000001b47c4 t CalcScrollEdgeSnap(float, float, float, float, float)
0000000000209380 t ColorEditRestoreHS(float const*, float*, float*, float*)
00000000001ced54 t FixRectCornerFlags(int)
00000000001fbe18 t signed char ImAddClampOverflow<signed char>(signed char, signed char, signed char, signed char)
00000000001fbf38 t unsigned char ImAddClampOverflow<unsigned char>(unsigned char, unsigned char, unsigned char, unsigned char)
00000000001fc298 t int ImAddClampOverflow<int>(int, int, int, int)
00000000001fc3b8 t unsigned int ImAddClampOverflow<unsigned int>(unsigned int, unsigned int, unsigned int, unsigned int)
00000000001fc058 t short ImAddClampOverflow<short>(short, short, short, short)
00000000001fc178 t unsigned short ImAddClampOverflow<unsigned short>(unsigned short, unsigned short, unsigned short, unsigned short)
00000000001fc4d8 t long long ImAddClampOverflow<long long>(long long, long long, long long, long long)
00000000001fc5f8 t unsigned long long ImAddClampOverflow<unsigned long long>(unsigned long long, unsigned long long, unsigned long long, unsigned long long)
00000000001fbea8 t signed char ImSubClampOverflow<signed char>(signed char, signed char, signed char, signed char)
00000000001fbfc8 t unsigned char ImSubClampOverflow<unsigned char>(unsigned char, unsigned char, unsigned char, unsigned char)
00000000001fc328 t int ImSubClampOverflow<int>(int, int, int, int)
00000000001fc448 t unsigned int ImSubClampOverflow<unsigned int>(unsigned int, unsigned int, unsigned int, unsigned int)
00000000001fc0e8 t short ImSubClampOverflow<short>(short, short, short, short)
00000000001fc208 t unsigned short ImSubClampOverflow<unsigned short>(unsigned short, unsigned short, unsigned short, unsigned short)
00000000001fc568 t long long ImSubClampOverflow<long long>(long long, long long, long long, long long)
00000000001fc688 t unsigned long long ImSubClampOverflow<unsigned long long>(unsigned long long, unsigned long long, unsigned long long, unsigned long long)
0000000000230a98 t VmaClearStatistics(VmaStatistics&)
0000000000231528 t VmaWriteMagicValue(void*, unsigned long)
0000000000154db0 t _mco_validate_desc(mco_desc*)
000000000016bbc8 t _sargs_begin_quote(sargs_state*, char)
0000000000169d00 t _sargs_parse_cargs(sargs_state*, int, char const**)
000000000016bc9c t _sargs_parsing_key(sargs_state const*)
000000000016bd44 t _sargs_parsing_val(sargs_state const*)
0000000000131838 t appAndroidSetInput(AInputQueue*)
000000000013127c t appAndroidWriteCmd(AppAndroidCmd)
00000000000f288c t assetLoadFromCache(AssetTypeManager const&, AssetLoadParams const&, unsigned int, bool*)
00000000000f9548 t assetLoadImageTask(unsigned int, void*)
00000000000f24a4 t assetLoadObjRemote(Handle<AssetHandleT>, AssetTypeManager const&, AssetLoadParams const&, unsigned int, bool*)
00000000001416f4 t block_is_prev_free(block_header_t const*)
0000000000142998 t block_mark_as_free(block_header_t*)
0000000000142cbc t block_mark_as_used(block_header_t*)
0000000000142608 t block_prepare_used(control_t*, block_header_t*, unsigned long)
000000000010fbac t cgltf_default_free(void*, void*)
00000000001210e8 t cgltf_json_to_bool(jsmntok_t const*, unsigned char const*)
0000000000120f34 t cgltf_json_to_size(jsmntok_t const*, unsigned char const*)
0000000000275df8 t conHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)
0000000000275cd8 t conHandlerServerFn(unsigned int, Blob const&, Blob*, void*, char*)
0000000000246b34 t gfxCreateSamplerVk(VkFilter, VkSamplerMipmapMode, VkSamplerAddressMode, float)
00000000002426e8 t gfxCreateSwapchain(VkSurfaceKHR_T*, unsigned short, unsigned short, VkSwapchainKHR_T*, bool)
000000000024c2c8 t gfxFindDepthFormat()
00000000002646ec t imguiLabelInternal(ImVec4, ImVec4, float, float, char const*, char const*, std::__va_list)
000000000015842c t jobsRemoveFromList(JobsWaitingList*, JobsFiberProperties*)
000000000009aa50 r kAssetCacheVersion
00000000002b0fe8 d kVkValidationLayer
0000000000160bc8 t logPrintToDebugger(LogEntry const&)
0000000000160a60 t logPrintToTerminal(LogEntry const&)
0000000000117688 t modelFindAttribute(ModelGeometryLayout const&, char const*, unsigned int)
0000000000129240 t modelGltfGetFilter(GLTF_Filter)
000000000013b050 t serverPeerThreadFn(void*)
00000000002c67c0 b stb__barrier_out_b
00000000002c67b8 b stb__barrier_out_e
00000000001032ec t stbi__bitreverse16(int)
0000000000105058 t stbi__bmp_test_raw(stbi__context*)
000000000010abdc t stbi__cleanup_jpeg(stbi__jpeg*)
0000000000105010 t stbi__compute_y_16(int, int, int)
00000000001059c8 t stbi__gif_test_raw(stbi__context*)
000000000010d75c t stbi__hdr_gettoken(stbi__context*, char*)
000000000010d038 t stbi__jpeg_get_bit(stbi__jpeg*)
00000000001069b8 t stbi__out_gif_code(stbi__gif*, unsigned short)
000000000010d9d0 t stbi__tga_get_comp(int, int, int*)
000000000009ad54 r stbi__zlength_base
000000000016ff64 t stbsp__real_to_str(char const**, unsigned int*, char*, int*, double, unsigned int)
00000000001df0e4 t stbtt__close_shape(stbtt_vertex*, int, int, int, int, int, int, int, int, int)
00000000001dd65c t stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int)
00000000001e15a4 t stbtt__hheap_alloc(stbtt__hheap*, unsigned long, void*)
00000000001ddb54 t stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int)
000000000013d8fc t vfsDiskResolvePath(char*, unsigned int, char const*, VfsFlags)
00000000001b3d30 t AddWindowToDrawData(ImGuiWindow*, int)
00000000001b3e3c t ApplyWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
00000000001b3c80 t ChildWindowComparer(void const*, void const*)
00000000001b417c t GetResizeBorderRect(ImGuiWindow*, int, float, float)
0000000000189a8c t GetViewportDrawList(ImGuiViewportP*, unsigned long, char const*)
000000000022d83c t VmaBlocksOnSamePage(unsigned long, unsigned long, unsigned long, unsigned long)
0000000000231e44 t VmaCreateStringCopy(VkAllocationCallbacks const*, char const*)
0000000000229c28 t unsigned long VmaDivideRoundingUp<unsigned long>(unsigned long, unsigned long)
0000000000154ea8 t _mco_create_context(mco_coro*, mco_desc*)
000000000016b9ec t _sargs_any_expected(sargs_state const*)
000000000016bc60 t _sargs_is_separator(char)
000000000016ba80 t _sargs_key_expected(sargs_state*)
000000000016b9d0 t _sargs_start_escape(sargs_state*)
000000000016bb24 t _sargs_val_expected(sargs_state const*)
00000000001424e0 t adjust_request_size(unsigned long, unsigned long)
0000000000175bb8 t android_getCpuCount()
00000000001310c0 t appAndroidCallEvent(AppEvent const&)
0000000000131050 t appAndroidInitEvent(AppEventType)
00000000001316e4 t appAndroidSetWindow(ANativeWindow*)
0000000000141ea8 t block_set_prev_free(block_header_t*)
0000000000141de8 t block_set_prev_used(block_header_t*)
0000000000118bb0 t cgltf_combine_paths(char*, char const*, char const*)
000000000010fb10 t cgltf_default_alloc(void*, unsigned long)
000000000012067c t cgltf_json_to_float(jsmntok_t const*, unsigned char const*)
000000000015c444 t cj5__seek_recursive(cj5_result*, int, unsigned int)
00000000002c05e8 b gAssertFailCallback
00000000002c05f0 b gAssertFailUserData
000000000024c30c t gfxCreateRenderPass(VkFormat, VkFormat)
00000000002434d0 t gfxDestroySwapchain(GfxSwapchain*)
0000000000242698 t gfxHasVulkanVersion(GfxApiVersion)
0000000000150110 t hashMurmur32MixTail(HashMurmur32Incremental*, unsigned char const**, unsigned int*)
0000000000116d14 t modelCreateMaterial(unsigned int*, unsigned int*, cgltf_material*, char const*, Allocator*)
000000000012ae1c t modelUnloadTextures(Model*)
00000000001e1b1c t rect_height_compare(void const*, void const*)
00000000001e1eb0 t rect_original_order(void const*, void const*)
0000000000109820 t stbi__build_fast_ac(short*, stbi__huffman*)
0000000000109578 t stbi__build_huffman(stbi__huffman*, int*)
0000000000105a94 t stbi__gif_load_next(stbi__context*, stbi__gif*, int*, int, unsigned char*)
000000000010d6d8 t stbi__hdr_test_core(stbi__context*, char const*)
000000000009afbc r stbi__jpeg_dezigzag
000000000010d0b4 t stbi__jpeg_get_bits(stbi__jpeg*, int)
0000000000106f0c t stbi__pic_load_core(stbi__context*, int, int, int*, unsigned char*)
0000000000106d8c t stbi__pic_test_core(stbi__context*)
00000000000feb50 t stbi__refill_buffer(stbi__context*)
00000000000fa220 t stbi__vertical_flip(void*, int, int, int)
000000000009add0 r stbi__zlength_extra
00000000001df248 t stbtt_FlattenCurves(stbtt_vertex*, int, float, int**, int*, void*)
00000000001de0bc t stbtt_GetGlyphShape(stbtt_fontinfo const*, int, stbtt_vertex**)
00000000001da010 t stbtt_GetPackedQuad(stbtt_packedchar const*, int, int, int, float*, float*, stbtt_aligned_quad*, int)
00000000001dd030 t stbtt__track_vertex(stbtt__csctx*, int, int)
00000000002226bc t volkGenLoadInstance(void*, void (* (*)(void*, char const*))())
00000000002bdf68 d GImAllocatorFreeFunc
00000000002c0fc0 b GImAllocatorUserData
0000000000216dc8 t SanitizeFormatString(char const*, char*, unsigned long)
0000000000216350 t TabItemGetSectionIdx(ImGuiTabItem const*)
00000000001550d8 t _mco_destroy_context(mco_coro*)
000000000016ba18 t _sargs_is_whitespace(sargs_state const*, char)
0000000000115690 t cgltf_component_size(cgltf_component_type)
0000000000119fec t cgltf_fixup_pointers(cgltf_data*)
0000000000123fb4 t cgltf_parse_json_ior(jsmntok_t const*, int, unsigned char const*, cgltf_ior*)
000000000015b960 t cj5__parse_primitive(cj5__parser*, cj5_result*, char const*, int)
000000000017d38c t frameInfoLogCallback(LogEntry const&, void*)
00000000002469a8 t gfxCreateImageViewVk(VkImage_T*, VkFormat, unsigned int)
000000000026450c t imguiReleaseSettings()
0000000000155fd0 t jobsDispatchInternal(bool, JobsType, void (*)(unsigned int, void*), void*, unsigned int, JobsPriority, unsigned int)
000000000011cf08 t jsmn_parse_primitive(jsmn_parser*, char const*, unsigned long, jsmntok_t*, unsigned long)
0000000000160bd8 t logPrintToAndroidLog(LogEntry const&)
000000000012ab8c t modelGetVertexStride(GfxFormat)
00000000001187a4 t modelHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)
0000000000118688 t modelHandlerServerFn(unsigned int, Blob const&, Blob*, void*, char*)
0000000000117ed4 t modelSetupGpuBuffers(Model*, GfxBufferUsage, GfxBufferUsage)
000000000013a6c8 t remoteClientThreadFn(void*)
00000000001e2564 t stb_decompress_token(unsigned char const*)
0000000000104eb0 t stbi__addsizes_valid(int, int)
00000000000fff44 t stbi__convert_format(unsigned char*, int, int, unsigned int, unsigned int)
000000000010cf3c t stbi__extend_receive(stbi__jpeg*, int)
00000000000fef98 t stbi__parse_png_file(stbi__png*, int, int)
000000000010d580 t stbi__pnm_getinteger(stbi__context*, char*)
00000000001083cc t stbi__process_marker(stbi__jpeg*, int)
0000000000106c24 t stbi__psd_decode_rle(stbi__context*, unsigned char*, int)
000000000010da84 t stbi__tga_read_rgb16(stbi__context*, unsigned char*)
00000000001025a4 t stbi__zbuild_huffman(stbi__zhuffman*, unsigned char const*, int)
000000000016fe48 t stbsp__real_to_parts(long long*, int*, double)
00000000001d8e08 t stbtt_FindGlyphIndex(stbtt_fontinfo const*, int)
00000000001dba70 t stbtt__GetGlyfOffset(stbtt_fontinfo const*, int)
00000000001daf6c t stbtt__cff_get_index(stbtt__buf*)
00000000001db050 t stbtt__cff_index_get(stbtt__buf, int)
00000000001db18c t stbtt__dict_get_ints(stbtt__buf*, int, int, unsigned int*)
00000000001e1550 t stbtt__hheap_cleanup(stbtt__hheap*, void*)
000000000019524c t AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*)
0000000000194cc0 t AddWindowToSortBuffer(ImVector<ImGuiWindow*>*, ImGuiWindow*)
00000000001974b4 t CalcWindowAutoFitSize(ImGuiWindow*, ImVec2 const&)
0000000000239fac t FindMemoryPreferences(bool, VmaAllocationCreateInfo const&, unsigned int, unsigned int&, unsigned int&, unsigned int&)
00000000002bdf60 d GImAllocatorAllocFunc
000000000019cfc0 t GetCombinedRootWindow(ImGuiWindow*, bool, bool)
000000000019d03c t GetWindowDisplayLayer(ImGuiWindow*)
0000000000195400 t SetupViewportDrawData(ImGuiViewportP*, ImVector<ImDrawList*>*)
00000000001e8bec t TableSetupColumnFlags(ImGuiTable*, ImGuiTableColumn*, int)
000000000022c824 t VmaValidateMagicValue(void const*, unsigned long)
0000000000176100 t android_cpuInitFamily()
00000000001148e8 t cgltf_free_extensions(cgltf_data*, cgltf_extension*, unsigned long)
000000000011ed9c t cgltf_parse_json_mesh(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_mesh*)
0000000000126b88 t cgltf_parse_json_node(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_node*)
00000000001194d4 t cgltf_parse_json_root(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
0000000000125edc t cgltf_parse_json_skin(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_skin*)
0000000000276208 t conRunExternalCommand(int, char const**)
0000000000246558 t gfxCmdPipelineBarrier(unsigned int, unsigned int, unsigned int, unsigned int, VkMemoryBarrier const*, unsigned int, VkBufferMemoryBarrier const*, unsigned int, VkImageMemoryBarrier const*)
00000000002b09a8 d kSettingCategoryNames
000000000014d424 t randomFloatNormalized(unsigned int)
0000000000145a90 t search_suitable_block(control_t*, int*, int*)
000000000012e780 t shaderCompileLoadTask(unsigned int, void*)
000000000013b5c0 t socketErrorCodeGetStr(SocketErrorCode)
00000000001d2a60 t stb_decompress_length(unsigned char const*)
00000000000fa0f0 t stbi__convert_16_to_8(unsigned short*, int, int, int)
000000000010d180 t stbi__jpeg_dequantize(short*, unsigned short*)
0000000000104f64 t stbi__mad2sizes_valid(int, int, int)
0000000000104cec t stbi__mad3sizes_valid(int, int, int, int)
000000000010d34c t stbi__mad4sizes_valid(int, int, int, int, int)
0000000000104e48 t stbi__mul2sizes_valid(int, int)
000000000009ac01 r stbi__zdefault_length
0000000000103388 t stbi__zhuffman_decode(stbi__zbuf*, stbi__zhuffman*)
00000000000f9aac t stbi_load_from_memory(unsigned char const*, int, int*, int*, int*, int)
00000000001707b0 t stbsp__clamp_callback(char const*, void*, int)
000000000016fd20 t stbsp__strlen_limited(char const*, unsigned int)
00000000001d9f58 t stbtt_GetFontVMetrics(stbtt_fontinfo const*, int*, int*, int*)
00000000001db930 t stbtt__GetGlyphInfoT2(stbtt_fontinfo const*, int, int*, int*, int*, int*)
00000000001dcab8 t stbtt__csctx_rline_to(stbtt__csctx*, float, float)
00000000001dca18 t stbtt__csctx_rmove_to(stbtt__csctx*, float, float)
00000000001dbc28 t stbtt__run_charstring(stbtt_fontinfo const*, int, stbtt__csctx*)
000000000013d77c t vfsReleaseDiskManager()
00000000001972b0 t CalcWindowContentSizes(ImGuiWindow*, ImVec2*, ImVec2*)
00000000001b3308 t DebugNodeDockNodeFlags(int*, char const*, bool)
00000000001abd48 t DockBuilderCopyNodeRec(ImGuiDockNode*, unsigned int, ImVector<unsigned int>*)
00000000001d6720 t FindFirstExistingGlyph(ImFont*, unsigned short const*, int)
00000000001b6444 t FindWindowNavFocusable(int, int, int)
000000000009d1ac r GWindowDockStyleColors
00000000001f20b0 t GetDraggedColumnOffset(ImGuiOldColumns*, int)
00000000002122a0 t GetTabBarFromTabBarRef(ImGuiPtrOrIndex const&)
0000000000211224 t GetTabBarRefFromTabBar(ImGuiTabBar*)
0000000000207bbc t InputTextCalcTextSizeW(unsigned short const*, unsigned short const*, unsigned short const**, ImVec2*, bool)
00000000002342e0 t void VmaPnextChainPushFront<VkMemoryAllocateInfo, VkMemoryAllocateFlagsInfo>(VkMemoryAllocateInfo*, VkMemoryAllocateFlagsInfo*)
0000000000234340 t void VmaPnextChainPushFront<VkMemoryAllocateInfo, VkExportMemoryAllocateInfo>(VkMemoryAllocateInfo*, VkExportMemoryAllocateInfo*)
000000000023994c t void VmaPnextChainPushFront<VkMemoryAllocateInfo, VkMemoryDedicatedAllocateInfo>(VkMemoryAllocateInfo*, VkMemoryDedicatedAllocateInfo*)
0000000000234310 t void VmaPnextChainPushFront<VkMemoryAllocateInfo, VkMemoryPriorityAllocateInfoEXT>(VkMemoryAllocateInfo*, VkMemoryPriorityAllocateInfoEXT*)
0000000000239c60 t void VmaPnextChainPushFront<VkMemoryRequirements2, VkMemoryDedicatedRequirements>(VkMemoryRequirements2*, VkMemoryDedicatedRequirements*)
000000000023c084 t void VmaPnextChainPushFront<VkPhysicalDeviceMemoryProperties2, VkPhysicalDeviceMemoryBudgetPropertiesEXT>(VkPhysicalDeviceMemoryProperties2*, VkPhysicalDeviceMemoryBudgetPropertiesEXT*)
000000000012f598 t appAndroidInitKeyTable()
000000000012f8dc t appAndroidMainEventsFn(int, int, void*)
000000000013024c t appAndroidMainThreadFn(void*)
00000000001127a4 t cgltf_calc_index_bound(cgltf_buffer_view*, unsigned long, cgltf_component_type, unsigned long)
00000000001231d8 t cgltf_fill_float_array(float*, int, float)
0000000000110c30 t cgltf_load_buffer_file(cgltf_options const*, unsigned long, char const*, char const*, void**)
000000000011eca0 t cgltf_parse_json_array(cgltf_options*, jsmntok_t const*, int, unsigned char const*, unsigned long, void**, unsigned long*)
000000000011d1e8 t cgltf_parse_json_asset(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_asset*)
0000000000125234 t cgltf_parse_json_image(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_image*)
00000000001286e4 t cgltf_parse_json_light(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_light*)
000000000011de44 t cgltf_parse_json_nodes(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
00000000001277c0 t cgltf_parse_json_scene(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_scene*)
0000000000124824 t cgltf_parse_json_sheen(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_sheen*)
000000000011dc6c t cgltf_parse_json_skins(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
0000000000160148 t engineDispatchLogEntry(LogEntry const&)
00000000002479a0 t gfxCreateShaderStageVk(GfxShaderStageInfo const&, VkShaderModule_T*)
0000000000242634 t gfxCreateWindowSurface(void*)
000000000024231c t gfxDebugUtilsMessageFn(VkDebugUtilsMessageSeverityFlagBitsEXT, unsigned int, VkDebugUtilsMessengerCallbackDataEXT const*, void*)
000000000024c520 t gfxFindSupportedFormat(VkFormat const*, unsigned int, VkImageTiling, unsigned int)
000000000023eff4 t gfxGetNewCommandBuffer()
0000000000129670 t modelCalculateTangents(ModelMesh*, ModelGeometryLayout const&)
000000000012937c t modelLayoutHasTangents(ModelGeometryLayout const&)
0000000000107f70 t stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int)
00000000001051d8 t stbi__bmp_parse_header(stbi__context*, stbi__bmp_data*)
00000000000fea18 t stbi__check_png_header(stbi__context*)
0000000000100708 t stbi__convert_format16(unsigned short*, int, int, unsigned int, unsigned int)
0000000000101308 t stbi__create_png_image(stbi__png*, unsigned char*, unsigned int, int, int, int, int)
0000000000100ed8 t stbi__get_chunk_header(stbi__context*)
000000000010cc9c t stbi__jpeg_huff_decode(stbi__jpeg*, stbi__huffman*)
000000000010acb8 t stbi__resample_row_h_2(unsigned char*, unsigned char*, unsigned char*, int, int)
000000000010ac34 t stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int)
00000000001dd394 t stbtt_GetGlyphHMetrics(stbtt_fontinfo const*, int, int*, int*)
00000000001deffc t stbtt__GetGlyphShapeT2(stbtt_fontinfo const*, int, stbtt_vertex**)
00000000001de20c t stbtt__GetGlyphShapeTT(stbtt_fontinfo const*, int, stbtt_vertex**)
00000000001dd164 t stbtt__cff_index_count(stbtt__buf*)
00000000001dfcec t stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int)
00000000001dfb14 t stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int)
00000000002263c0 t volkGenLoadDeviceTable(VolkDeviceTable*, void*, void (* (*)(void*, char const*))())
00000000001953c8 t AddRootWindowToDrawData(ImGuiWindow*)
00000000001aae38 t DockNodeSetupHostWindow(ImGuiDockNode*, ImGuiWindow*)
0000000000182af0 t ImTextCharToUtf8_inline(char*, int, unsigned int)
00000000001f9d88 t ShrinkWidthItemComparer(void const*, void const*)
00000000001b3b2c t StartLockWheelingWindow(ImGuiWindow*)
0000000000130f2c t appAndroidDispatchEvent(AppEventType)
0000000000131014 t appAndroidEventsEnabled()
000000000013062c t appAndroidInputEventsFn(int, int, void*)
00000000000f08fc t assetGetCurrentPlatform()
0000000000142894 t block_trim_free_leading(control_t*, block_header_t*, unsigned long)
000000000010ffec t cgltf_default_file_read(cgltf_memory_options const*, cgltf_file_options const*, char const*, unsigned long*, void**)
0000000000115860 t cgltf_element_read_uint(unsigned char const*, cgltf_type, cgltf_component_type, unsigned int*, unsigned long)
00000000001149cc t cgltf_free_texture_view(cgltf_data*, cgltf_texture_view*)
0000000000122474 t cgltf_parse_json_buffer(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_buffer*)
0000000000126304 t cgltf_parse_json_camera(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_camera*)
000000000011e200 t cgltf_parse_json_extras(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_extras*)
000000000011d9b0 t cgltf_parse_json_images(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011e3dc t cgltf_parse_json_lights(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011d514 t cgltf_parse_json_meshes(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011df30 t cgltf_parse_json_scenes(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011e9c0 t cgltf_parse_json_string(cgltf_options*, jsmntok_t const*, int, unsigned char const*, char**)
000000000012459c t cgltf_parse_json_volume(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_volume*)
000000000017d4d0 t frameInfoEventsCallback(AppEvent const&, void*)
00000000002c0c60 b gJniAttachedThreadCount
0000000000246758 t gfxCmdCopyBufferToImage(VkBuffer_T*, VkImage_T*, unsigned int, unsigned int, unsigned int, unsigned int const*)
0000000000247ad8 t gfxCreatePipelineLayout(GfxShader const&, Handle<GfxDescriptorSetLayoutT> const*, unsigned int, GfxPushConstantDesc const*, unsigned int, VkPipelineLayout_T**)
00000000002479e8 t gfxCreateShaderModuleVk(char const*, unsigned char const*, unsigned int)
00000000002464e0 t gfxFormatIsDepthStencil(GfxFormat)
00000000002636f0 t imguiInitializeSettings()
0000000000264f2c t imguiSettingSetInternal(char const*, char const*)
0000000000117a3c t modelGatherDependencies(Model const*, AssetLoadParams const&, MemTempAllocator*, unsigned int*)
000000000010a9bc t stbi__decode_jpeg_image(stbi__jpeg*)
000000000009abf8 r stbi__depth_scale_table
000000000010c0f0 t stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned short*)
0000000000102238 t stbi__parse_zlib_header(stbi__zbuf*)
0000000000108140 t stbi__resample_row_hv_2(unsigned char*, unsigned char*, unsigned char*, int, int)
000000000009ad21 r stbi__zdefault_distance
0000000000172804 t stbsp__raise_to_power10(double*, double*, double, int)
00000000001dd500 t stbtt_GetGlyphBitmapBox(stbtt_fontinfo const*, int, float, float, int*, int*, int*, int*)
00000000001da5f0 t stbtt_InitFont_internal(stbtt_fontinfo*, unsigned char*, int)
00000000001db70c t stbtt__cff_skip_operand(stbtt__buf*)
00000000001dcb38 t stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float)
00000000001dd344 t stbtt__oversample_shift(int)
000000000013d7e0 t vfsReleaseRemoteManager()
000000000022634c t vkGetDeviceProcAddrStub(void*, char const*)
00000000001bbf80 t DockNodeIsDropAllowedOne(ImGuiWindow*, ImGuiWindow*)
00000000001a6250 t GetWindowForTitleDisplay(ImGuiWindow*)
0000000000207648 t InputTextFilterCharacter(unsigned int*, int, int (*)(ImGuiInputTextCallbackData*), void*, ImGuiInputSource)
000000000019538c t IsWindowActiveAndVisible(ImGuiWindow*)
0000000000188960 t IsWindowContentHoverable(ImGuiWindow*, int)
00000000001fb6d0 t Items_SingleStringGetter(void*, int, char const**)
00000000001b4f34 t NavScoreItemDistInterval(float, float, float, float)
0000000000216394 t TabItemComparerBySection(void const*, void const*)
000000000023af18 t VmaAddDetailedStatistics(VmaDetailedStatistics&, VmaDetailedStatistics const&)
0000000000130f70 t appAndroidFreeSavedState()
0000000000131914 t appAndroidIsOnForeground()
0000000000115034 t cgltf_element_read_float(unsigned char const*, cgltf_type, cgltf_component_type, int, float*, unsigned long)
000000000011d7d8 t cgltf_parse_json_buffers(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011dd58 t cgltf_parse_json_cameras(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
0000000000125b1c t cgltf_parse_json_sampler(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_sampler*)
0000000000125554 t cgltf_parse_json_texture(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_texture*)
0000000000128ccc t cgltf_parse_json_variant(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_material_variant*)
000000000017e408 t engineRemoteDisconnected(char const*, bool, SocketErrorCode)
000000000024401c t gfxDestroyPipelineLayout(Handle<GfxPipelineLayoutT>)
00000000001075a4 t stbi__decode_jpeg_header(stbi__jpeg*, int)
0000000000101d74 t stbi__expand_png_palette(stbi__png*, unsigned char*, int, int)
000000000010c3f0 t stbi__grow_buffer_unsafe(stbi__jpeg*)
00000000001065f4 t stbi__process_gif_raster(stbi__context*, stbi__gif*)
00000000001dcea0 t stbtt__csctx_close_shape(stbtt__csctx*)
000000000013cc48 t vfsInitializeDiskManager()
000000000013e084 t vfsPackageBundleReadFile(char const*, VfsFlags, Allocator*)
00000000001b1034 t RenderViewportsThumbnails()
000000000024cd34 t VmaSuballocation* VmaBinaryFindFirstNotLess<VmaSuballocationOffsetLess, VmaSuballocation*, VmaSuballocation>(VmaSuballocation*, VmaSuballocation*, VmaSuballocation const&, VmaSuballocationOffsetLess const&)
000000000024cea4 t VmaSuballocation const* VmaBinaryFindFirstNotLess<VmaSuballocationOffsetLess, VmaSuballocation const*, VmaSuballocation>(VmaSuballocation const*, VmaSuballocation const*, VmaSuballocation const&, VmaSuballocationOffsetLess const&)
000000000024cdec t VmaSuballocation* VmaBinaryFindFirstNotLess<VmaSuballocationOffsetGreater, VmaSuballocation*, VmaSuballocation>(VmaSuballocation*, VmaSuballocation*, VmaSuballocation const&, VmaSuballocationOffsetGreater const&)
000000000024cf5c t VmaSuballocation const* VmaBinaryFindFirstNotLess<VmaSuballocationOffsetGreater, VmaSuballocation const*, VmaSuballocation>(VmaSuballocation const*, VmaSuballocation const*, VmaSuballocation const&, VmaSuballocationOffsetGreater const&)
00000000000f81ac t assetImageHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)
00000000000f8090 t assetImageHandlerServerFn(unsigned int, Blob const&, Blob*, void*, char*)
0000000000118eac t cgltf_component_read_uint(void const*, cgltf_component_type)
0000000000120780 t cgltf_parse_json_accessor(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_accessor*)
0000000000122738 t cgltf_parse_json_material(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_material*)
000000000011db88 t cgltf_parse_json_samplers(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
0000000000124140 t cgltf_parse_json_specular(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_specular*)
000000000011da9c t cgltf_parse_json_textures(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011e5ac t cgltf_parse_json_variants(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
0000000000244bd8 t gfxSubmitDeferredCommands()
0000000000102c90 t stbi__parse_huffman_block(stbi__zbuf*)
000000000010d498 t stbi__pnm_skip_whitespace(stbi__context*, char*)
000000000010af4c t stbi__process_scan_header(stbi__jpeg*)
00000000001e233c t stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*)
00000000001d94f4 t stbtt_ScaleForPixelHeight(stbtt_fontinfo const*, float)
000000000013d4e8 t vfsMonitorChangesClientFn(unsigned int, Blob const&, void*, bool, char const*)
000000000013d3c4 t vfsMonitorChangesServerFn(unsigned int, Blob const&, Blob*, void*, char*)
000000000013e89c t vfsRemoteReadFileComplete(char const*, Blob const&, void*)
00000000002225a0 t vkGetInstanceProcAddrStub(void*, char const*)
00000000001852d4 t GetSkipItemForListClipping()
000000000020ba78 t RenderArrowsForVerticalBar(ImDrawList*, ImVec2, ImVec2, float, float)
00000000001bb5e4 t TabItemComparerByDockOrder(void const*, void const*)
00000000001ef2a8 t TableSettingsCalcChunkSize(int)
0000000000230b10 t VmaClearDetailedStatistics(VmaDetailedStatistics&)
0000000000131208 t appAndroidSetActivityState(AppAndroidCmd)
0000000000131a94 t appAndroidUpdateDimensions(ANativeWindow*)
00000000000efc24 t assetLoadCacheHashDatabase()
00000000000f31b8 t assetSaveCacheHashDatabase()
0000000000118cd4 t cgltf_component_read_float(void const*, cgltf_component_type, int)
00000000001156f8 t cgltf_component_read_index(void const*, cgltf_component_type)
00000000001101d8 t cgltf_default_file_release(cgltf_memory_options const*, cgltf_file_options const*, void*)
000000000012000c t cgltf_parse_attribute_type(char const*, cgltf_attribute_type*, int*)
000000000011d600 t cgltf_parse_json_accessors(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
0000000000127ab0 t cgltf_parse_json_animation(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_animation*)
0000000000123cdc t cgltf_parse_json_clearcoat(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_clearcoat*)
000000000011d8c4 t cgltf_parse_json_materials(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011f2b0 t cgltf_parse_json_primitive(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_primitive*)
0000000000101944 t stbi__compute_transparency(stbi__png*, unsigned char*, int)
0000000000103594 t stbi__create_png_image_raw(stbi__png*, unsigned char*, unsigned int, int, unsigned int, unsigned int, int, int)
0000000000109990 t stbi__free_jpeg_components(stbi__jpeg*, int, int)
0000000000106538 t stbi__gif_parse_colortable(stbi__context*, unsigned char (*) [4], int, int)
0000000000108a94 t stbi__process_frame_header(stbi__jpeg*, int)
000000000010ae78 t stbi__resample_row_generic(unsigned char*, unsigned char*, unsigned char*, int, int)
00000000001dcc20 t stbtt__cid_get_glyph_subrs(stbtt_fontinfo const*, int)
00000000001e16c8 t stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float)
00000000001e0854 t stbtt__sort_edges_ins_sort(stbtt__edge*, int)
000000000013cce8 t vfsInitializeRemoteManager()
000000000013ce10 t vfsReadFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)
000000000013cd40 t vfsReadFileHandlerServerFn(unsigned int, Blob const&, Blob*, void*, char*)
000000000013ebe4 t vfsRemoteWriteFileComplete(char const*, unsigned long, Blob const&, void*)
00000000001fec04 t PatchFormatStringFloatToInt(char const*)
00000000002112a0 t TabItemComparerByBeginOrder(void const*, void const*)
00000000002c7950 b VmaEmptyAllocationCallbacks
00000000000f9b44 t assetImageConvertFormatSRGB(GfxFormat)
000000000011e114 t cgltf_parse_json_animations(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000015b8d0 t cj5__skip_multiline_comment(cj5__parser*, char const*, int)
00000000002458a0 t gfxEndDeferredCommandBuffer()
0000000000152d00 t ini_internal_property_index(ini_t const*, int, int)
0000000000158508 t jobsSetFiberToCurrentThread(JobsFiber*)
000000000012a96c t modelConvertVertexAttribute(cgltf_attribute_type, unsigned int)
000000000016a704 t settingsLoadFromINIInternal(Blob const&)
0000000000139848 t settingsParseEngineLogLevel(char const*)
00000000001058dc t stbi__bmp_set_mask_defaults(stbi__bmp_data*, int)
0000000000102904 t stbi__compute_huffman_codes(stbi__zbuf*)
00000000002be7ac b stbi__de_iphone_flag_global
0000000000170774 t stbsp__count_clamp_callback(char const*, void*, int)
00000000001d8da8 t stbtt_GetFontOffsetForIndex(unsigned char const*, int)
00000000001e04c0 t stbtt__sort_edges_quicksort(stbtt__edge*, int)
000000000013e598 t vfsLocalDiskManagerThreadFn(void*)
000000000013d1d4 t vfsWriteFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)
000000000013d080 t vfsWriteFileHandlerServerFn(unsigned int, Blob const&, Blob*, void*, char*)
00000000001b8b68 t FixLargeWindowsWhenUndocking(ImVec2 const&, ImGuiViewport*)
00000000001b4380 t GetWindowBgColorIdxFromFlags(int)
0000000000182e70 t ImTextCountUtf8BytesFromChar(unsigned int)
0000000000197f94 t SetWindowConditionAllowFlags(ImGuiWindow*, int, bool)
0000000000118dfc t cgltf_component_read_integer(void const*, cgltf_component_type)
0000000000121034 t cgltf_json_to_component_type(jsmntok_t const*, unsigned char const*)
0000000000121938 t cgltf_parse_json_buffer_view(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_buffer_view*)
000000000011f8f4 t cgltf_parse_json_float_array(jsmntok_t const*, int, unsigned char const*, float*, int)
0000000000124c20 t cgltf_parse_json_iridescence(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_iridescence*)
00000000002981dc t demangling_terminate_handler()
0000000000176368 t get_elf_hwcap_from_getauxval(int)
00000000000a3ff0 r kCousineFont_compressed_data
00000000001017c8 t stbi__compute_transparency16(stbi__png*, unsigned short*, int)
00000000001e1f1c t stbrp__skyline_find_best_pos(stbrp_context*, int, int)
00000000001dd2ec t stbrp_setup_allow_out_of_mem(stbrp_context*, int)
00000000001e0b3c t stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float)
0000000000197850 t CalcWindowSizeAfterConstraint(ImGuiWindow*, ImVec2 const&)
00000000001ef9e8 t TableSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
00000000001ef568 t TableSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
00000000001ef6c0 t TableSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
00000000001ef604 t TableSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
00000000001efa80 t TableSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
000000000011d6ec t cgltf_parse_json_buffer_views(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_data*)
000000000011e8b8 t cgltf_parse_json_string_array(cgltf_options*, jsmntok_t const*, int, unsigned char const*, char***, unsigned long*)
00000000001234fc t cgltf_parse_json_texture_view(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_texture_view*)
00000000001243cc t cgltf_parse_json_transmission(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_transmission*)
000000000015c134 t cj5_factory_default_create_fn(void*)
000000000015c194 t cj5_factory_default_getall_fn(void*)
0000000000298300 t demangling_unexpected_handler()
0000000000245738 t gfxBeginDeferredCommandBuffer()
00000000001e1bd8 t stbrp__skyline_pack_rectangle(stbrp_context*, int, int)
00000000001dd564 t stbtt_MakeGlyphBitmapSubpixel(stbtt_fontinfo const*, unsigned char*, int, int, int, float, float, float, float, int)
00000000001e0080 t stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*)
00000000001b4060 t CalcResizePosSizeFromAnyCorner(ImGuiWindow*, ImVec2 const&, ImVec2 const&, ImVec2*, ImVec2*)
00000000001ab9d8 t DockNodeComparerDepthMostFirst(void const*, void const*)
000000000018061c t GetClipboardTextFn_DefaultImpl(void*)
00000000001b3df0 t GetWindowForTitleAndMenuHeight(ImGuiWindow*)
0000000000180680 t SetClipboardTextFn_DefaultImpl(void*, char const*)
00000000001d941c t UnpackBitVectorToFlatIndexList(ImBitVector const*, ImVector<int>*)
0000000000193394 t WindowSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
00000000001930b0 t WindowSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
00000000001931a4 t WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
0000000000193130 t WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
000000000019342c t WindowSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
000000000012ac28 t modelGetVertexAttributePointer(ModelMesh*, ModelGeometryLayout const&, char const*, unsigned int, unsigned int*)
000000000010b340 t stbi__parse_entropy_coded_data(stbi__jpeg*)
00000000001023a4 t stbi__parse_uncompressed_block(stbi__zbuf*)
0000000000103450 t stbi__zhuffman_decode_slowpath(stbi__zbuf*, stbi__zhuffman*)
00000000001fa7ec t CalcMaxPopupHeightFromItemCount(int)
00000000001b3bf4 t FindFrontMostVisibleChildWindow(ImGuiWindow*)
00000000001d3510 t ImFontAtlasBuildWithStbTruetype(ImFontAtlas*)
00000000001ce3f8 t PathBezierCubicCurveToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, float, float, int)
000000000011fa10 t cgltf_parse_json_attribute_list(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_attribute**, unsigned long*)
0000000000248078 t gfxSavePipelineBinaryProperties(char const*, VkPipeline_T*)
000000000010c6ac t stbi__jpeg_decode_block_prog_ac(stbi__jpeg*, short*, stbi__huffman*, short*)
000000000010c514 t stbi__jpeg_decode_block_prog_dc(stbi__jpeg*, short*, stbi__huffman*, int)
00000000000f9ca0 t stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int)
00000000001d95c4 t stbtt_GetGlyphBitmapBoxSubpixel(stbtt_fontinfo const*, int, float, float, float, float, int*, int*, int*, int*)
00000000001d9570 t stbtt_ScaleForMappingEmToPixels(stbtt_fontinfo const*, float)
0000000000216c64 t GetMinimumStepAtDecimalPrecision(int)
0000000000207d78 t InputTextCalcTextLenAndLineCount(char const*, char const**)
00000000001ede58 t TableGetColumnAvailSortDirection(ImGuiTableColumn*, int)
0000000000121168 t cgltf_parse_json_accessor_sparse(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_accessor_sparse*)
00000000001293f4 t modelMapVertexAttributesToBuffer(ModelMesh*, ModelGeometryLayout const&, cgltf_attribute*, unsigned int)
00000000001f0950 t DebugNodeTableGetSizingPolicyDesc(int)
00000000001b6524 t NavUpdateWindowingHighlightWindow(int)
00000000002c10b0 b FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
000000000009fff0 r FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS
00000000001d55a4 t ImFontAtlasBuildRenderLinesTexData(ImFontAtlas*)
000000000018486c t ImGuiListClipper_SeekCursorForItem(ImGuiListClipper*, int)
00000000001853c8 t ImGuiListClipper_SortAndFuseRanges(ImVector<ImGuiListClipperRange>&, int)
000000000022980c t VmaAddDetailedStatisticsAllocation(VmaDetailedStatistics&, unsigned long)
00000000000f8474 t assetUpdateImageDescriptorSetCache(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*)
0000000000128200 t cgltf_parse_json_animation_channel(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_animation_channel*)
0000000000127e74 t cgltf_parse_json_animation_sampler(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_animation_sampler*)
0000000000124a94 t cgltf_parse_json_emissive_strength(jsmntok_t const*, int, unsigned char const*, cgltf_emissive_strength*)
000000000011fe10 t cgltf_parse_json_material_mappings(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_primitive*)
0000000000124fa4 t cgltf_parse_json_texture_transform(jsmntok_t const*, int, unsigned char const*, cgltf_texture_transform*)
000000000014e26c t debugFiberScopeProtector_IsInFiber()
000000000012dec0 t shaderCompileShaderHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)
000000000012dda4 t shaderCompileShaderHandlerServerFn(unsigned int, Blob const&, Blob*, void*, char*)
00000000002be7b0 b stbi__unpremultiply_on_load_global
00000000001b4e68 t NavClampRectToVisibleAreaForMoveDir(int, ImRect&, ImRect const&)
00000000001ce810 t PathBezierQuadraticCurveToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, int)
00000000001d6158 t UnpackAccumulativeOffsetsIntoRanges(int, short const*, int, unsigned short*)
000000000022b7a8 t VmaAddDetailedStatisticsUnusedRange(VmaDetailedStatistics&, unsigned long)
0000000000229f7c t VmaIsBufferImageGranularityConflict(VmaSuballocationType, VmaSuballocationType)
00000000001d9944 t stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context*, stbtt_fontinfo const*, stbtt_pack_range*, int, stbrp_rect*)
00000000001d5284 t ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*)
00000000001275f0 t cgltf_parse_json_mesh_gpu_instancing(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_mesh_gpu_instancing*)
0000000000121f38 t cgltf_parse_json_meshopt_compression(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_meshopt_compression*)
00000000002be7a8 b stbi__vertically_flip_on_load_global
00000000001da244 t stbtt_GetFontOffsetForIndex_internal(unsigned char*, int)
00000000001d243c t GetDefaultCompressedFontDataTTFBase85()
00000000001b6fe0 t GetFallbackWindowNameForWindowingList(ImGuiWindow*)
00000000001b1240 t ViewportComparerByFrontMostStampCount(void const*, void const*)
000000000019a958 t CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow*)
00000000001bc6ec t DockSettingsHandler_DockNodeToSettings(ImGuiDockContext*, ImGuiDockNode*, int)
0000000000181160 t ImBezierCubicClosestPointCasteljauStep(ImVec2 const&, ImVec2&, ImVec2&, float&, float, float, float, float, float, float, float, float, float, int)
000000000012024c t cgltf_parse_json_material_mapping_data(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_material_mapping*, unsigned long*)
000000000011e690 t cgltf_parse_json_unprocessed_extension(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_extension*)
0000000000248624 t gfxDuplicateGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo const&)
000000000011fc40 t cgltf_parse_json_draco_mesh_compression(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_draco_mesh_compression*)
0000000000123224 t cgltf_parse_json_pbr_metallic_roughness(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_pbr_metallic_roughness*)
000000000011eaf4 t cgltf_parse_json_unprocessed_extensions(cgltf_options*, jsmntok_t const*, int, unsigned char const*, unsigned long*, cgltf_extension**)
000000000024aa78 t gfxTransformRectangleBasedOnOrientation(int, int, int, int, bool)
00000000000a0b55 r proggy_clean_ttf_compressed_data_base85
00000000002c7980 b gVk
0000000000123a1c t cgltf_parse_json_pbr_specular_glossiness(cgltf_options*, jsmntok_t const*, int, unsigned char const*, cgltf_pbr_specular_glossiness*)
00000000002c05f8 b gDebugCaptureStacktraceForFiberProtector
000000000023c034 t VmaFillGpuDefragmentationBufferCreateInfo(VkBufferCreateInfo&)
00000000001ac5dc t DockNodeHideWindowDuringHostWindowCreation(ImGuiWindow*)
00000000001bb000 t DockNodeTreeUpdateSplitterFindTouchingNode(ImGuiDockNode*, ImGuiAxis, int, ImVector<ImGuiDockNode*>*)
00000000001b735c t FindHoveredViewportFromPlatformWindowStack(ImVec2)
00000000001b389c t ImGuiListClipper_SeekCursorAndSetupPrevLine(float, float)
0000000000101194 t stbi_zlib_decode_malloc_guesssize_headerflag(char const*, int, int, int*, int)
00000000002beb40 b gApp
00000000002c0e98 b gEng
00000000002c0b40 b gLog
00000000002bffc0 b gVfs
0000000000217050 t ImAbs(double)
00000000001ce078 t ImAbs(float)
0000000000216d10 t ImAbs(float)
0000000000271df0 t ImAbs(float)
00000000001cd9d4 t ImAbs(int)
00000000001d1648 t ImDot(ImVec2 const&, ImVec2 const&)
0000000000217068 t ImLog(double)
0000000000216d28 t ImLog(float)
00000000001ee1d8 t signed char ImMax<signed char>(signed char, signed char)
0000000000186a28 t float ImMax<float>(float, float)
00000000001ca43c t float ImMax<float>(float, float)
00000000001e6ad8 t float ImMax<float>(float, float)
00000000001f47e4 t float ImMax<float>(float, float)
0000000000185328 t int ImMax<int>(int, int)
00000000001ce03c t int ImMax<int>(int, int)
00000000001ff984 t int ImMax<int>(int, int)
000000000020f09c t unsigned int ImMax<unsigned int>(unsigned int, unsigned int)
000000000020f060 t unsigned short ImMax<unsigned short>(unsigned short, unsigned short)
000000000018b74c t ImMax(ImVec2 const&, ImVec2 const&)
00000000001d17a0 t ImMax(ImVec2 const&, ImVec2 const&)
00000000001f22b4 t ImMax(ImVec2 const&, ImVec2 const&)
00000000001fab84 t ImMax(ImVec2 const&, ImVec2 const&)
00000000002174dc t double ImMin<double>(double, double)
00000000001819c4 t float ImMin<float>(float, float)
00000000001ca658 t float ImMin<float>(float, float)
00000000001e6b70 t float ImMin<float>(float, float)
00000000001f7edc t float ImMin<float>(float, float)
00000000001828c0 t int ImMin<int>(int, int)
00000000001eca78 t int ImMin<int>(int, int)
00000000001ff948 t int ImMin<int>(int, int)
0000000000216f34 t unsigned int ImMin<unsigned int>(unsigned int, unsigned int)
0000000000201418 t unsigned long ImMin<unsigned long>(unsigned long, unsigned long)
00000000002170c8 t long long ImMin<long long>(long long, long long)
0000000000217304 t unsigned long long ImMin<unsigned long long>(unsigned long long, unsigned long long)
00000000001b3a2c t ImMin(ImVec2 const&, ImVec2 const&)
00000000001d16f0 t ImMin(ImVec2 const&, ImVec2 const&)
00000000001f2364 t ImMin(ImVec2 const&, ImVec2 const&)
00000000002162a0 t ImMin(ImVec2 const&, ImVec2 const&)
00000000001d1958 t ImMul(ImVec2 const&, ImVec2 const&)
0000000000217104 t ImPow(double, double)
0000000000216ce4 t ImPow(float, float)
00000000002be290 d cause
00000000002c0700 b gJobs
0000000000217554 t char const* ImAtoi<double>(char const*, double*)
0000000000217384 t char const* ImAtoi<float>(char const*, float*)
00000000002015c4 t char const* ImAtoi<int>(char const*, int*)
0000000000217174 t char const* ImAtoi<long long>(char const*, long long*)
000000000021751c t double ImLerp<double>(double, double, float)
00000000001a0dcc t float ImLerp<float>(float, float, float)
00000000001d8598 t float ImLerp<float>(float, float, float)
00000000001f0da0 t float ImLerp<float>(float, float, float)
00000000001f78fc t float ImLerp<float>(float, float, float)
0000000000182fa8 t int ImLerp<int>(int, int, float)
0000000000216d88 t int ImLerp<int>(int, int, float)
0000000000216f70 t unsigned int ImLerp<unsigned int>(unsigned int, unsigned int, float)
0000000000217130 t long long ImLerp<long long>(long long, long long, float)
0000000000217340 t unsigned long long ImLerp<unsigned long long>(unsigned long long, unsigned long long, float)
00000000001b3fd4 t ImLerp(ImVec2 const&, ImVec2 const&, ImVec2 const&)
000000000020e9d4 t ImLerp(ImVec2 const&, ImVec2 const&, ImVec2 const&)
00000000002722cc t ImLerp(ImVec2 const&, ImVec2 const&, ImVec2 const&)
000000000020b9f4 t ImLerp(ImVec2 const&, ImVec2 const&, float)
00000000001c8c78 t ImLerp(ImVec4 const&, ImVec4 const&, float)
00000000001b39d8 t void ImSwap<ImGuiListClipperRange>(ImGuiListClipperRange&, ImGuiListClipperRange&)
00000000002052ac t void ImSwap<void const*>(void const*&, void const*&)
00000000001ecab4 t void ImSwap<signed char>(signed char&, signed char&)
000000000021708c t void ImSwap<double>(double&, double&)
00000000001832dc t void ImSwap<float>(float&, float&)
00000000001d855c t void ImSwap<float>(float&, float&)
0000000000216d4c t void ImSwap<float>(float&, float&)
000000000020756c t void ImSwap<int>(int&, int&)
0000000000216ef8 t void ImSwap<unsigned int>(unsigned int&, unsigned int&)
0000000000217014 t void ImSwap<long long>(long long&, long long&)
00000000002172c8 t void ImSwap<unsigned long long>(unsigned long long&, unsigned long long&)
00000000002c0c70 b gTimer
00000000002c0c50 b g_once
00000000001da5b0 t ttLONG(unsigned char*)
0000000000217474 t double ImClamp<double>(double, double, double)
00000000001b3b8c t float ImClamp<float>(float, float, float)
00000000001d1688 t float ImClamp<float>(float, float, float)
00000000001e9178 t float ImClamp<float>(float, float, float)
00000000001f7894 t float ImClamp<float>(float, float, float)
0000000000185364 t int ImClamp<int>(int, int, int)
00000000001ca5f4 t int ImClamp<int>(int, int, int)
00000000001fce60 t int ImClamp<int>(int, int, int)
0000000000216e94 t unsigned int ImClamp<unsigned int>(unsigned int, unsigned int, unsigned int)
0000000000216fb0 t long long ImClamp<long long>(long long, long long, long long)
0000000000217264 t unsigned long long ImClamp<unsigned long long>(unsigned long long, unsigned long long, unsigned long long)
00000000001a2794 t ImClamp(ImVec2 const&, ImVec2 const&, ImVec2)
00000000001d1850 t ImClamp(ImVec2 const&, ImVec2 const&, ImVec2)
00000000001f2414 t ImClamp(ImVec2 const&, ImVec2 const&, ImVec2)
000000000018021c t ImFloor(ImVec2 const&)
00000000001f6b84 t ImFloor(ImVec2 const&)
00000000001802b8 t ImFloor(float)
00000000001d68ec t ImFloor(float)
00000000001e8fc4 t ImFloor(float)
00000000001f9df8 t ImFloor(float)
00000000001cce44 t ImRsqrt(float)
000000000024d148 t VmaFree(VmaAllocator_T*, void*)
000000000024c14c t VmaFree(VkAllocationCallbacks const*, void*)
0000000000168168 t mat3Abs(Mat3 const&)
0000000000181a98 t toupper(int)
00000000001db7d0 t ttSHORT(unsigned char*)
00000000001da570 t ttULONG(unsigned char*)
00000000001d2d00 t Decode85(unsigned char const*, unsigned char*)
00000000001d85cc t ImAcos01(float)
000000000020b978 t ImRotate(ImVec2 const&, float, float)
00000000001a4684 t LogTextV(ImGuiContext&, char const*, std::__va_list)
00000000001b3884 t _toupper(int)
00000000001459b4 t align_up(unsigned long, unsigned long)
00000000002c98a0 b gConsole
00000000002c05c0 b gMemBase
00000000002c0500 b gMemTemp
00000000002c0cc0 b gVMStats
00000000002c0c68 b g_inited
0000000000154c80 t mco_free(void*, void*)
0000000000173ff8 t pathJoin(char*, unsigned long, char const*, char const*, char const*)
0000000000278e50 t snprintf(char*, unsigned long pass_object_size1, char const*, ...)
000000000028d324 t snprintf(char*, unsigned long pass_object_size1, char const*, ...)
00000000001e2c78 t stb__lit(unsigned char const*, unsigned int)
000000000014d850 t strcat_s(char*, unsigned long, char const*)
000000000014d7c4 t strcpy_s(char*, unsigned long, char const*)
00000000001db3b4 t ttUSHORT(unsigned char*)
000000000014d6f0 t RandomCtx()
000000000024d110 t VmaMalloc(VmaAllocator_T*, unsigned long, unsigned long)
000000000024c004 t VmaMalloc(VkAllocationCallbacks const*, unsigned long, unsigned long)
00000000001580cc t _mco_main(mco_coro*)
0000000000142824 t align_ptr(void const*, unsigned long)
00000000002be300 b gAssetMgr
00000000002be5c0 b gImageMgr
00000000002be7c0 b gModelCtx
00000000002c0bd0 b gSettings
0000000000264a4c t imguiVec4(Float4)
00000000001194a8 t jsmn_init(jsmn_parser*)
000000000009ba30 r kCrcTable
0000000000176224 t read_file(char const*, char*, unsigned long)
00000000002c67c8 b stb__dout
00000000000fe9dc t stbi__err(char const*)
00000000000f30bc t timerDiff(unsigned long, unsigned long)
00000000000f98e8 t timerDiff(unsigned long, unsigned long)
000000000012b398 t timerDiff(unsigned long, unsigned long)
0000000000131a50 t timerDiff(unsigned long, unsigned long)
0000000000174228 t timerDiff(unsigned long, unsigned long)
000000000017eab4 t timerDiff(unsigned long, unsigned long)
000000000024c64c t timerDiff(unsigned long, unsigned long)
00000000000f3098 t timerToMS(unsigned long)
00000000000f98c4 t timerToMS(unsigned long)
000000000012b374 t timerToMS(unsigned long)
000000000017e618 t timerToMS(unsigned long)
000000000024c628 t timerToMS(unsigned long)
00000000000f5020 W AtomicLock::AtomicLock()
0000000000276398 W ConContext::ConContext()
0000000000255cd8 W GfxContext::GfxContext()
00000000002568ac W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::GetMemoryRequirement(unsigned int)
0000000000258180 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Add(GfxBufferData const&, GfxBufferData*)
0000000000257458 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Data(Handle<GfxBufferT>)
0000000000257e00 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Free()
0000000000260900 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Grow()
000000000025832c W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Remove(Handle<GfxBufferT>)
0000000000259708 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::IsValid(Handle<GfxBufferT>)
00000000002568e8 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Reserve(unsigned int, void*, unsigned long)
00000000002573e8 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::HandleAt(unsigned int)
000000000025a35c W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::HandlePool(Allocator*)
000000000025a224 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::HandlePool()
00000000000f36b4 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::GetMemoryRequirement(unsigned int)
00000000000f5b58 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Add(Asset const&, Asset*)
00000000000f3c10 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::end()
00000000000f4424 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Data(Handle<AssetHandleT>)
00000000000f7340 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Data(unsigned int)
00000000000f6128 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Grow()
00000000000f3bdc W HandlePool<Handle<AssetHandleT>, Asset, 32u>::begin()
00000000000f47fc W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Remove(Handle<AssetHandleT>)
00000000000f7438 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::IsValid(Handle<AssetHandleT>)
00000000000f36f0 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Reserve(unsigned int, void*, unsigned long)
00000000000f56cc W HandlePool<Handle<AssetHandleT>, Asset, 32u>::HandleAt(unsigned int)
00000000000f7314 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Iterator::Iterator(HandlePool<Handle<AssetHandleT>, Asset, 32u>*, unsigned int)
00000000000f3ca0 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Iterator::operator*()
00000000000f3c70 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Iterator::operator!=(HandlePool<Handle<AssetHandleT>, Asset, 32u>::Iterator)
00000000000f3e2c W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Iterator::operator++()
00000000000f5064 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::HandlePool(Allocator*)
00000000000f4ef8 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::HandlePool()
0000000000256dec W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::GetMemoryRequirement(unsigned int)
0000000000258720 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Add(GfxPipelineData const&, GfxPipelineData*)
00000000002578fc W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Data(Handle<GfxPipelineT>)
0000000000257f14 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Free()
0000000000260f90 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Grow()
0000000000258ccc W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Remove(Handle<GfxPipelineT>)
000000000025ffa8 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::IsValid(Handle<GfxPipelineT>)
0000000000256e28 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025788c W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::HandleAt(unsigned int)
000000000025a494 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::HandlePool(Allocator*)
000000000025a2c0 W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::HandlePool()
00000000000f3804 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::GetMemoryRequirement(unsigned int)
00000000000f4900 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::Add(Signal const&, Signal*)
00000000000f467c W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::Data(Handle<AssetBarrierT>)
00000000000f7964 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::Grow()
00000000000f4bf8 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::Remove(Handle<AssetBarrierT>)
00000000000f74c8 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::IsValid(Handle<AssetBarrierT>)
00000000000f3840 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::Reserve(unsigned int, void*, unsigned long)
00000000000f50cc W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::HandlePool(Allocator*)
00000000000f4f2c W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::HandlePool()
0000000000256b4c W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::GetMemoryRequirement(unsigned int)
000000000025910c W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Add(GfxDescriptorSetData const&, GfxDescriptorSetData*)
0000000000257a88 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Data(Handle<GfxDescriptorSetT>)
0000000000257f70 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Free()
000000000026190c W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Grow()
000000000025937c W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Remove(Handle<GfxDescriptorSetT>)
0000000000260104 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::IsValid(Handle<GfxDescriptorSetT>)
0000000000256b88 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Reserve(unsigned int, void*, unsigned long)
0000000000257a18 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::HandleAt(unsigned int)
000000000025a4fc W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::HandlePool(Allocator*)
000000000025a2f4 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::HandlePool()
0000000000256f3c W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::GetMemoryRequirement(unsigned int)
000000000025b5a4 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Add(GfxPipelineLayoutData const&, GfxPipelineLayoutData*)
0000000000257770 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Data(Handle<GfxPipelineLayoutT>)
0000000000257eb8 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Free()
000000000025b838 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Grow()
000000000024cb90 t Handle<GfxPipelineLayoutT> HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::FindIf<gfxCreatePipelineLayout(GfxShader const&, Handle<GfxDescriptorSetLayoutT> const*, unsigned int, GfxPushConstantDesc const*, unsigned int, VkPipelineLayout_T**)::$_5>(gfxCreatePipelineLayout(GfxShader const&, Handle<GfxDescriptorSetLayoutT> const*, unsigned int, GfxPushConstantDesc const*, unsigned int, VkPipelineLayout_T**)::$_5)
000000000025ae20 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Remove(Handle<GfxPipelineLayoutT>)
000000000025f54c W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::IsValid(Handle<GfxPipelineLayoutT>)
0000000000256f78 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Reserve(unsigned int, void*, unsigned long)
0000000000257700 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::HandleAt(unsigned int)
000000000025a42c W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::HandlePool(Allocator*)
000000000025a28c W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::HandlePool()
00000000001380d8 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::GetMemoryRequirement(unsigned int)
0000000000138690 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::Add(ClipboardVar const&, ClipboardVar*)
00000000001384d4 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::Data(Handle<ClipboardVarHandleT>)
0000000000138d60 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::Grow()
0000000000138460 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::IsValid(Handle<ClipboardVarHandleT>)
0000000000138114 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::Reserve(unsigned int, void*, unsigned long)
0000000000138b34 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::HandlePool(Allocator*)
0000000000138b00 W HandlePool<Handle<ClipboardVarHandleT>, ClipboardVar, 32u>::HandlePool()
0000000000256c9c W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::GetMemoryRequirement(unsigned int)
0000000000258ed8 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Add(GfxDescriptorSetLayoutData const&, GfxDescriptorSetLayoutData*)
0000000000257d24 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::end()
0000000000257c14 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Data(Handle<GfxDescriptorSetLayoutT>)
000000000026028c W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Data(unsigned int)
0000000000257fcc W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Free()
00000000002615c0 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Grow()
0000000000257cf0 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::begin()
0000000000249930 t Handle<GfxDescriptorSetLayoutT> HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::FindIf<gfxCreateDescriptorSetLayout(GfxShader const&, GfxDescriptorSetLayoutBinding const*, unsigned int)::$_3>(gfxCreateDescriptorSetLayout(GfxShader const&, GfxDescriptorSetLayoutBinding const*, unsigned int)::$_3)
0000000000259084 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Remove(Handle<GfxDescriptorSetLayoutT>)
0000000000259308 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::IsValid(Handle<GfxDescriptorSetLayoutT>)
0000000000256cd8 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Reserve(unsigned int, void*, unsigned long)
0000000000257ba4 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::HandleAt(unsigned int)
0000000000260260 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Iterator::Iterator(HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>*, unsigned int)
0000000000257db4 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Iterator::operator*()
0000000000257d84 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Iterator::operator!=(HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Iterator)
0000000000257de0 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Iterator::operator++()
000000000025a564 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::HandlePool(Allocator*)
000000000025a328 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::HandlePool()
00000000002569fc W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::GetMemoryRequirement(unsigned int)
000000000025839c W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Add(GfxImageData const&, GfxImageData*)
00000000002575e4 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Data(Handle<GfxImageT>)
0000000000257e5c W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Free()
0000000000260c4c W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Grow()
0000000000258548 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Remove(Handle<GfxImageT>)
000000000025f6a4 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::IsValid(Handle<GfxImageT>)
0000000000256a38 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Reserve(unsigned int, void*, unsigned long)
0000000000257574 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::HandleAt(unsigned int)
000000000025a3c4 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::HandlePool(Allocator*)
000000000025a258 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::HandlePool()
00000000001f2e94 W ImBitArray<132>::SetBitRange(int, int)
00000000001f3d00 W ImBitArray<132>::ClearAllBits()
00000000001f2e18 W ImBitArray<132>::SetBit(int)
00000000001f2ec8 W ImBitArray<132>::ClearBit(int)
00000000001f2e70 W ImBitArray<132>::ImBitArray()
00000000001d12f8 T ImDrawData::ScaleClipRects(ImVec2 const&)
00000000001d11a8 T ImDrawData::DeIndexAllBuffers()
00000000001bf274 W ImDrawData::Clear()
00000000001c3e1c W ImDrawData::ImDrawData()
00000000001ca950 T ImDrawList::AddDrawCmd()
00000000001c455c W ImDrawList::PathLineTo(ImVec2 const&)
00000000001c4750 W ImDrawList::PathStroke(unsigned int, int, float)
00000000001cb664 T ImDrawList::PrimQuadUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00000000001cb4a4 T ImDrawList::PrimRectUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00000000001caa50 T ImDrawList::AddCallback(void (*)(ImDrawList const*, ImDrawCmd const*), void*)
00000000001cb7d8 T ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, int, float)
00000000001cf334 T ImDrawList::AddTriangle(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float)
00000000001cb074 T ImDrawList::PopClipRect()
00000000001cb1a0 T ImDrawList::PrimReserve(int, int)
00000000001cda10 T ImDrawList::_PathArcToN(ImVec2 const&, float, float, float, int)
00000000001d0588 T ImDrawList::AddImageQuad(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00000000001cb134 T ImDrawList::PopTextureID()
00000000001e35c0 W ImDrawList::PrimWriteIdx(unsigned short)
00000000001e35f0 W ImDrawList::PrimWriteVtx(ImVec2 const&, ImVec2 const&, unsigned int)
00000000001caee8 T ImDrawList::PushClipRect(ImVec2, ImVec2, bool)
00000000001cf70c T ImDrawList::AddNgonFilled(ImVec2 const&, float, unsigned int, int)
00000000001cf2b0 T ImDrawList::AddQuadFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00000000001cf008 T ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
00000000001c52e0 W ImDrawList::ChannelsMerge()
00000000001c51dc W ImDrawList::ChannelsSplit(int)
00000000001cdb54 T ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
00000000001cb294 T ImDrawList::PrimUnreserve(int, int)
00000000001cb0ec T ImDrawList::PushTextureID(void*)
00000000001cf7b8 T ImDrawList::AddBezierCubic(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float, int)
00000000001c458c W ImDrawList::PathFillConvex(unsigned int)
00000000001cf544 T ImDrawList::AddCircleFilled(ImVec2 const&, float, unsigned int, int)
00000000001d067c T ImDrawList::AddImageRounded(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float, int)
00000000001ca770 T ImDrawList::_ClearFreeMemory()
00000000001cd5e4 T ImDrawList::_PathArcToFastEx(ImVec2 const&, float, int, int, int)
00000000001cf3b4 T ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00000000001ca9e4 T ImDrawList::_PopUnusedDrawCmd()
00000000001ca698 T ImDrawList::_ResetForNewFrame()
00000000001cab08 T ImDrawList::_TryMergeDrawCmds()
00000000001cf840 T ImDrawList::AddBezierQuadratic(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float, int)
00000000001c5210 W ImDrawList::ChannelsSetCurrent(int)
00000000001cab9c T ImDrawList::_OnChangedClipRect()
00000000001ccf64 T ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int)
00000000001cac94 T ImDrawList::_OnChangedTextureID()
00000000001cad8c T ImDrawList::_OnChangedVtxOffset()
00000000001ce2d0 T ImDrawList::PathBezierCubicCurveTo(ImVec2 const&, ImVec2 const&, ImVec2 const&, int)
00000000001caffc T ImDrawList::PushClipRectFullScreen()
00000000001cf0b8 T ImDrawList::AddRectFilledMultiColor(ImVec2 const&, ImVec2 const&, unsigned int, unsigned int, unsigned int, unsigned int)
00000000001ce708 T ImDrawList::PathBezierQuadraticCurveTo(ImVec2 const&, ImVec2 const&, int)
00000000001cedb0 T ImDrawList::AddLine(ImVec2 const&, ImVec2 const&, unsigned int, float)
00000000001cf644 T ImDrawList::AddNgon(ImVec2 const&, float, unsigned int, int, float)
00000000001cf220 T ImDrawList::AddQuad(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float)
00000000001cee84 T ImDrawList::AddRect(ImVec2 const&, ImVec2 const&, unsigned int, float, int, float)
00000000001cf8c0 T ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
00000000001d0478 T ImDrawList::AddText(ImVec2 const&, unsigned int, char const*, char const*)
000000000021d7fc W ImDrawList::PrimVtx(ImVec2 const&, ImVec2 const&, unsigned int)
00000000001d04cc T ImDrawList::AddImage(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00000000001ce9e8 T ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
00000000001cb318 T ImDrawList::PrimRect(ImVec2 const&, ImVec2 const&, unsigned int)
00000000001cf428 T ImDrawList::AddCircle(ImVec2 const&, float, unsigned int, int, float)
00000000001cdbdc T ImDrawList::PathArcTo(ImVec2 const&, float, float, float, int)
00000000001bdb10 W ImDrawList::ImDrawList(ImDrawListSharedData const*)
00000000001bdcc0 W ImDrawList::~ImDrawList()
00000000002653b8 W ImGuiState::ImGuiState()
000000000017fec0 T ImGuiStyle::ScaleAllSizes(float)
000000000017fba0 T ImGuiStyle::ImGuiStyle()
000000000017fba0 T ImGuiStyle::ImGuiStyle()
00000000001f37a4 W ImGuiTable::ImGuiTable()
00000000001c7b20 W ImGuiTable::~ImGuiTable()
00000000001543ac T IniContext::Destroy()
00000000002657d0 W IniContext::IniContext()
0000000000154448 T IniSection::GetProperty(unsigned int)
00000000001544e4 T IniSection::NewProperty(char const*, char const*)
00000000001545bc T IniSection::FindProperty(char const*)
0000000000154480 T IniSection::GetPropertyName(unsigned int)
00000000001543ec T IniSection::GetPropertyCount()
0000000000154744 T IniSection::Delete()
00000000001546e8 T IniSection::GetName()
0000000000154660 T IniSection::SetName(char const*)
0000000000157ad4 T JobsSignal::WaitOnCondition(bool (*)(int, int), int)
0000000000157c30 T JobsSignal::Set(int)
0000000000157a98 T JobsSignal::Wait()
000000000015793c T JobsSignal::Raise()
0000000000157d94 T JobsSignal::Decrement()
0000000000157ef4 T JobsSignal::Increment()
0000000000157914 T JobsSignal::JobsSignal()
0000000000157914 T JobsSignal::JobsSignal()
0000000000160d10 W LogContext::LogContext()
00000000000f43f0 W MutexScope::MutexScope(Mutex&)
00000000000f4500 W MutexScope::~MutexScope()
000000000013fa74 W VfsManager::VfsManager()
0000000000140514 W VfsRequest::VfsRequest(VfsRequest const&)
00000000001402f4 W VfsRequest::VfsRequest()
0000000000140370 W VfsRequest::operator=(VfsRequest&&)
0000000000140578 W VfsRequest::operator=(VfsRequest const&)
0000000000259a1c W VmaRWMutex::UnlockRead()
0000000000259aac W VmaRWMutex::UnlockWrite()
00000000002599d4 W VmaRWMutex::LockRead()
0000000000259a64 W VmaRWMutex::LockWrite()
00000000002543e8 W VmaRWMutex::VmaRWMutex()
000000000025334c W VmaRWMutex::~VmaRWMutex()
0000000000299198 t __cxxabiv1::(anonymous namespace)::DtorsManager::~DtorsManager()
00000000002c9be8 b __cxxabiv1::(anonymous namespace)::GlobalStatic<__cxxabiv1::(anonymous namespace)::LibcppMutex>::instance
00000000002c9c10 b __cxxabiv1::(anonymous namespace)::GlobalStatic<__cxxabiv1::(anonymous namespace)::LibcppCondVar>::instance
00000000002c9c58 b __cxxabiv1::(anonymous namespace)::dtors_key
0000000000299220 t __cxxabiv1::(anonymous namespace)::run_dtors(void*)
00000000002996a0 t __cxxabiv1::__enum_type_info::~__enum_type_info()
00000000002995fc t __cxxabiv1::__enum_type_info::~__enum_type_info()
00000000002995fc t __cxxabiv1::__enum_type_info::~__enum_type_info()
0000000000299604 t __cxxabiv1::__shim_type_info::~__shim_type_info()
00000000002995fc t __cxxabiv1::__shim_type_info::~__shim_type_info()
00000000002995fc t __cxxabiv1::__shim_type_info::~__shim_type_info()
0000000000299648 t __cxxabiv1::__array_type_info::~__array_type_info()
00000000002995fc t __cxxabiv1::__array_type_info::~__array_type_info()
00000000002995fc t __cxxabiv1::__array_type_info::~__array_type_info()
00000000002996cc t __cxxabiv1::__class_type_info::~__class_type_info()
00000000002995fc t __cxxabiv1::__class_type_info::~__class_type_info()
00000000002995fc t __cxxabiv1::__class_type_info::~__class_type_info()
0000000000299750 t __cxxabiv1::__pbase_type_info::~__pbase_type_info()
00000000002995fc t __cxxabiv1::__pbase_type_info::~__pbase_type_info()
00000000002995fc t __cxxabiv1::__pbase_type_info::~__pbase_type_info()
0000000000297504 t __cxxabiv1::__getExceptionClass(_Unwind_Exception const*)
000000000029977c t __cxxabiv1::__pointer_type_info::~__pointer_type_info()
00000000002995fc t __cxxabiv1::__pointer_type_info::~__pointer_type_info()
00000000002995fc t __cxxabiv1::__pointer_type_info::~__pointer_type_info()
00000000002974f8 t __cxxabiv1::__setExceptionClass(_Unwind_Exception*, unsigned long)
00000000002995d0 t __cxxabiv1::__free_with_fallback(void*)
0000000000299674 t __cxxabiv1::__function_type_info::~__function_type_info()
00000000002995fc t __cxxabiv1::__function_type_info::~__function_type_info()
00000000002995fc t __cxxabiv1::__function_type_info::~__function_type_info()
00000000002996f8 t __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000002995fc t __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000002995fc t __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000297510 t __cxxabiv1::__isOurExceptionClass(_Unwind_Exception const*)
0000000000299724 t __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000002995fc t __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000002995fc t __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0000000000299438 t __cxxabiv1::__calloc_with_fallback(unsigned long, unsigned long)
000000000029961c t __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
00000000002995fc t __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
00000000002995fc t __cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
000000000029949c t __cxxabiv1::__aligned_free_with_fallback(void*)
00000000002997a8 t __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
00000000002995fc t __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
00000000002995fc t __cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
00000000002992d0 t __cxxabiv1::__aligned_malloc_with_fallback(unsigned long)
0000000000298548 t __cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Exception*, _Unwind_Context*)
00000000002976f8 t __cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
0000000000298b30 t __cxxabiv1::call_terminate(bool, _Unwind_Exception*)
0000000000298ed0 t __cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char)
0000000000297670 t __cxxabiv1::setOurExceptionClass(_Unwind_Exception*)
000000000029768c t __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*)
0000000000297c04 t __cxxabiv1::dependent_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
0000000000136e70 T CameraOrbit::SetViewMat(Mat4 const&)
0000000000136d48 T CameraOrbit::RotateOrbit(float)
0000000000136e9c T CameraOrbit::HandleRotationMouse(AppEvent const&, float, float)
00000000001364d0 T CameraOrbit::SetLookAt(Float3, Float3, Float3)
0000000000273b60 W CameraOrbit::CameraOrbit()
00000000001e4b1c W ImBitVector::Clear()
00000000001e49dc W ImBitVector::Create(int)
00000000001e4ab8 W ImBitVector::SetBit(int)
00000000001e52e0 W ImBitVector::~ImBitVector()
00000000001d1dc8 T ImFontAtlas::ClearFonts()
00000000001d1d40 T ImFontAtlas::ClearTexData()
00000000001d2284 T ImFontAtlas::AddFontDefault(ImFontConfig const*)
00000000001d1b94 T ImFontAtlas::ClearInputData()
00000000001d24f8 T ImFontAtlas::AddFontFromFileTTF(char const*, float, ImFontConfig const*, unsigned short const*)
00000000001d6278 T ImFontAtlas::GetGlyphRangesThai()
00000000001d1e24 T ImFontAtlas::GetTexDataAsAlpha8(unsigned char**, int*, int*, int*)
00000000001d1f4c T ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*)
00000000001d2e18 T ImFontAtlas::AddCustomRectRegular(int, int)
00000000001d2758 T ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, ImFontConfig const*, unsigned short const*)
00000000001e41e8 W ImFontAtlas::GetCustomRectByIndex(int)
00000000001d60b0 T ImFontAtlas::GetGlyphRangesKorean()
00000000001d2448 T ImFontAtlas::GetGlyphRangesDefault()
00000000001d3118 T ImFontAtlas::GetMouseCursorTexData(int, ImVec2*, ImVec2*, ImVec2*, ImVec2*)
00000000001d2edc T ImFontAtlas::AddCustomRectFontGlyph(ImFont*, unsigned short, int, int, float, ImVec2 const&)
00000000001d6260 T ImFontAtlas::GetGlyphRangesCyrillic()
00000000001d61e8 T ImFontAtlas::GetGlyphRangesJapanese()
00000000001d6290 T ImFontAtlas::GetGlyphRangesVietnamese()
00000000001d60c8 T ImFontAtlas::GetGlyphRangesChineseFull()
00000000001d2900 T ImFontAtlas::AddFontFromMemoryCompressedTTF(void const*, int, float, ImFontConfig const*, unsigned short const*)
00000000001d2460 T ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(char const*, float, ImFontConfig const*, unsigned short const*)
00000000001d60e0 T ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()
00000000001d1ebc T ImFontAtlas::Build()
00000000001d1b5c T ImFontAtlas::Clear()
00000000001d208c T ImFontAtlas::AddFont(ImFontConfig const*)
00000000002655fc W ImFontAtlas::SetTexID(void*)
00000000001d1a2c T ImFontAtlas::ImFontAtlas()
00000000001d1a2c T ImFontAtlas::ImFontAtlas()
00000000001d1ae8 T ImFontAtlas::~ImFontAtlas()
00000000001d1ae8 T ImFontAtlas::~ImFontAtlas()
0000000000210cac T ImGuiTabBar::ImGuiTabBar()
0000000000210cac T ImGuiTabBar::ImGuiTabBar()
00000000001c7a24 W ImGuiTabBar::~ImGuiTabBar()
0000000000187fb0 T ImGuiWindow::GetIDNoKeepAlive(char const*, char const*)
0000000000188064 T ImGuiWindow::GetIDNoKeepAlive(void const*)
00000000001880f4 T ImGuiWindow::GetIDNoKeepAlive(int)
0000000000188184 T ImGuiWindow::GetIDFromRectangle(ImRect const&)
000000000018793c T ImGuiWindow::GetID(char const*, char const*)
0000000000187e80 T ImGuiWindow::GetID(void const*)
0000000000187f18 T ImGuiWindow::GetID(int)
00000000001875ac T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
00000000001875ac T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
00000000001879f8 T ImGuiWindow::~ImGuiWindow()
00000000001879f8 T ImGuiWindow::~ImGuiWindow()
0000000000154988 T IniProperty::Delete()
00000000001548c8 T IniProperty::GetName()
00000000001547a0 T IniProperty::SetName(char const*)
0000000000154928 T IniProperty::GetValue()
0000000000154834 T IniProperty::SetValue(char const*)
0000000000159314 W JobsContext::JobsContext()
000000000014c1a4 W MemTempData::MemTempData()
000000000014c21c W MemTempData::~MemTempData()
0000000000117c30 T ModelLoader::LoadRemote(Handle<AssetHandleT>, AssetLoadParams const&, unsigned int, void*, void (*)(Handle<AssetHandleT>, AssetResult const&, void*))
00000000001184b0 T ModelLoader::ReloadSync(Handle<AssetHandleT>, void*)
0000000000117e24 T ModelLoader::InitializeSystemResources(void*, AssetLoadParams const&)
0000000000117794 T ModelLoader::Load(Handle<AssetHandleT>, AssetLoadParams const&, unsigned int, Allocator*)
0000000000118354 T ModelLoader::Release(void*, Allocator*)
000000000012d790 W RelativePtr<ModelSubmesh>::Set(ModelSubmesh const*)
000000000012ba64 W RelativePtr<ModelSubmesh>::operator=(ModelSubmesh*)
000000000012bb08 W RelativePtr<ModelSubmesh>::operator[](unsigned int)
000000000012d91c W RelativePtr<ModelMaterial>::Set(ModelMaterial const*)
000000000012bd7c W RelativePtr<ModelMaterial>::operator=(ModelMaterial*)
000000000025864c W RelativePtr<GfxShaderVertexAttributeInfo>::operator[](unsigned int)
000000000012d70c W RelativePtr<ModelMesh>::Set(ModelMesh const*)
000000000012b92c W RelativePtr<ModelMesh>::operator=(ModelMesh*)
000000000012b960 W RelativePtr<ModelMesh>::operator[](unsigned int)
000000000012d9a0 W RelativePtr<ModelNode>::Set(ModelNode const*)
000000000012bdf0 W RelativePtr<ModelNode>::operator=(ModelNode*)
000000000012be24 W RelativePtr<ModelNode>::operator[](unsigned int)
000000000012d898 W RelativePtr<RelativePtr<ModelMaterial> >::Set(RelativePtr<ModelMaterial> const*)
000000000012bc28 W RelativePtr<RelativePtr<ModelMaterial> >::operator=(RelativePtr<ModelMaterial>*)
000000000012bd4c W RelativePtr<RelativePtr<ModelMaterial> >::operator[](unsigned int)
000000000012c5b0 W RelativePtr<char>::Set(char const*)
000000000012c460 W RelativePtr<char>::RelativePtr()
000000000012c538 W RelativePtr<char>::operator=(char*)
00000000000f60a4 W RelativePtr<unsigned char>::Set(unsigned char const*)
000000000010dbac W RelativePtr<unsigned char>::RelativePtr()
00000000000f5ad0 W RelativePtr<unsigned char>::operator=(unsigned char*)
000000000012d814 W RelativePtr<unsigned int>::Set(unsigned int const*)
000000000012bbb8 W RelativePtr<unsigned int>::operator=(unsigned int*)
000000000012bf4c W RelativePtr<unsigned int>::operator[](unsigned int)
0000000000139bd8 W SettingsApp::SettingsApp()
00000000000f550c W StaticArray<AssetMetaKeyValue, 64u>::Add(AssetMetaKeyValue const&)
00000000000f439c W StaticArray<AssetMetaKeyValue, 64u>::Ptr()
00000000000f4138 W StaticArray<AssetMetaKeyValue, 64u>::StaticArray()
000000000025abc0 W StaticArray<VkAttachmentDescription, 2u>::Add(VkAttachmentDescription const&)
000000000025ac80 W StaticArray<VkAttachmentDescription, 2u>::Ptr()
000000000025aba8 W StaticArray<VkAttachmentDescription, 2u>::StaticArray()
0000000000256444 W StaticArray<VkDeviceQueueCreateInfo, 4u>::Add(VkDeviceQueueCreateInfo const&)
0000000000256500 W StaticArray<VkDeviceQueueCreateInfo, 4u>::Ptr()
0000000000256418 W StaticArray<VkDeviceQueueCreateInfo, 4u>::StaticArray()
0000000000256198 W StaticArray<VkValidationFeatureEnableEXT, 5u>::Add(VkValidationFeatureEnableEXT const&)
0000000000256238 W StaticArray<VkValidationFeatureEnableEXT, 5u>::Ptr()
0000000000256180 W StaticArray<VkValidationFeatureEnableEXT, 5u>::StaticArray()
000000000014e774 W StaticArray<Pair<bool (*)(void*), void*>, 4u>::Add(Pair<bool (*)(void*), void*> const&)
000000000014eb94 W StaticArray<Pair<bool (*)(void*), void*>, 4u>::end()
000000000014eb64 W StaticArray<Pair<bool (*)(void*), void*>, 4u>::begin()
000000000014e104 t unsigned int StaticArray<Pair<bool (*)(void*), void*>, 4u>::FindIf<debugFiberScopeProtector_RegisterCallback(bool (*)(void*), void*)::$_0>(debugFiberScopeProtector_RegisterCallback(bool (*)(void*), void*)::$_0)
000000000014ec30 W StaticArray<Pair<bool (*)(void*), void*>, 4u>::Iterator::Iterator(Pair<bool (*)(void*), void*>*)
000000000014ebf8 W StaticArray<Pair<bool (*)(void*), void*>, 4u>::Iterator::operator*()
000000000014ebcc W StaticArray<Pair<bool (*)(void*), void*>, 4u>::Iterator::operator!=(StaticArray<Pair<bool (*)(void*), void*>, 4u>::Iterator)
000000000014ec10 W StaticArray<Pair<bool (*)(void*), void*>, 4u>::Iterator::operator++()
000000000014eb4c W StaticArray<Pair<bool (*)(void*), void*>, 4u>::StaticArray()
0000000000160e00 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::RemoveAndSwap(unsigned int)
0000000000160d44 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::Add(Pair<void (*)(LogEntry const&, void*), void*> const&)
0000000000160ef4 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::end()
0000000000160ec4 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::begin()
00000000001608fc t unsigned int StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::FindIf<logRegisterCallback(void (*)(LogEntry const&, void*), void*)::$_0>(logRegisterCallback(void (*)(LogEntry const&, void*), void*)::$_0)
00000000001609d8 t unsigned int StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::FindIf<logUnregisterCallback(void (*)(LogEntry const&, void*))::$_1>(logUnregisterCallback(void (*)(LogEntry const&, void*))::$_1)
0000000000160f90 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::Iterator::Iterator(Pair<void (*)(LogEntry const&, void*), void*>*)
0000000000160f58 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::Iterator::operator*()
0000000000160f2c W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::Iterator::operator!=(StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::Iterator)
0000000000160f70 W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::Iterator::operator++()
0000000000160eac W StaticArray<Pair<void (*)(LogEntry const&, void*), void*>, 8u>::StaticArray()
00000000001594e8 W StaticArray<Pair<void*, unsigned int>, 7u>::Add(Pair<void*, unsigned int> const&)
0000000000159830 W StaticArray<Pair<void*, unsigned int>, 7u>::end()
0000000000159800 W StaticArray<Pair<void*, unsigned int>, 7u>::begin()
000000000015abd8 W StaticArray<Pair<void*, unsigned int>, 7u>::Iterator::Iterator(Pair<void*, unsigned int>*)
0000000000159894 W StaticArray<Pair<void*, unsigned int>, 7u>::Iterator::operator*()
0000000000159868 W StaticArray<Pair<void*, unsigned int>, 7u>::Iterator::operator!=(StaticArray<Pair<void*, unsigned int>, 7u>::Iterator)
00000000001598ac W StaticArray<Pair<void*, unsigned int>, 7u>::Iterator::operator++()
0000000000159918 W StaticArray<Pair<void*, unsigned int>, 7u>::StaticArray()
0000000000255e3c W StaticArray<VkCommandBuffer_T*, 32u>::Add(VkCommandBuffer_T* const&)
00000000002580bc W StaticArray<VkCommandBuffer_T*, 32u>::Ptr()
00000000002580ec W StaticArray<VkCommandBuffer_T*, 32u>::Clear()
000000000025a160 W StaticArray<VkCommandBuffer_T*, 32u>::StaticArray()
000000000016c04c W StaticArray<SettingsCustomCallbacks*, 8u>::RemoveAndSwap(unsigned int)
000000000016bfc0 W StaticArray<SettingsCustomCallbacks*, 8u>::Add(SettingsCustomCallbacks* const&)
000000000016c128 W StaticArray<SettingsCustomCallbacks*, 8u>::end()
000000000016bf44 W StaticArray<SettingsCustomCallbacks*, 8u>::Find(SettingsCustomCallbacks* const&)
000000000016c0f8 W StaticArray<SettingsCustomCallbacks*, 8u>::begin()
000000000016c5a8 W StaticArray<SettingsCustomCallbacks*, 8u>::Iterator::Iterator(SettingsCustomCallbacks**)
000000000016c18c W StaticArray<SettingsCustomCallbacks*, 8u>::Iterator::operator*()
000000000016c160 W StaticArray<SettingsCustomCallbacks*, 8u>::Iterator::operator!=(StaticArray<SettingsCustomCallbacks*, 8u>::Iterator)
000000000016c32c W StaticArray<SettingsCustomCallbacks*, 8u>::Iterator::operator++()
000000000016c554 W StaticArray<SettingsCustomCallbacks*, 8u>::StaticArray()
000000000016c3a0 W StaticArray<SettingsCustomCallbacks*, 8u>::operator[](unsigned int)
000000000025a6b0 W StaticArray<GfxCommandBufferThreadData*, 32u>::Add(GfxCommandBufferThreadData* const&)
00000000002571fc W StaticArray<GfxCommandBufferThreadData*, 32u>::end()
00000000002571cc W StaticArray<GfxCommandBufferThreadData*, 32u>::begin()
000000000025fe80 W StaticArray<GfxCommandBufferThreadData*, 32u>::Iterator::Iterator(GfxCommandBufferThreadData**)
0000000000257260 W StaticArray<GfxCommandBufferThreadData*, 32u>::Iterator::operator*()
0000000000257234 W StaticArray<GfxCommandBufferThreadData*, 32u>::Iterator::operator!=(StaticArray<GfxCommandBufferThreadData*, 32u>::Iterator)
0000000000257300 W StaticArray<GfxCommandBufferThreadData*, 32u>::Iterator::operator++()
000000000025a1e0 W StaticArray<GfxCommandBufferThreadData*, 32u>::StaticArray()
00000000002560f4 W StaticArray<char const*, 32u>::Add(char const* const&)
0000000000256268 W StaticArray<char const*, 32u>::Ptr()
000000000025637c W StaticArray<char const*, 32u>::end()
000000000025634c W StaticArray<char const*, 32u>::begin()
000000000025f7f8 W StaticArray<char const*, 32u>::Iterator::Iterator(char const**)
00000000002563e0 W StaticArray<char const*, 32u>::Iterator::operator*()
00000000002563b4 W StaticArray<char const*, 32u>::Iterator::operator!=(StaticArray<char const*, 32u>::Iterator)
00000000002563f8 W StaticArray<char const*, 32u>::Iterator::operator++()
00000000002560dc W StaticArray<char const*, 32u>::StaticArray()
0000000000256020 W StaticArray<char const*, 4u>::Add(char const* const&)
00000000002560c4 W StaticArray<char const*, 4u>::Ptr()
00000000002562b0 W StaticArray<char const*, 4u>::end()
0000000000256280 W StaticArray<char const*, 4u>::begin()
000000000025f7d8 W StaticArray<char const*, 4u>::Iterator::Iterator(char const**)
0000000000256314 W StaticArray<char const*, 4u>::Iterator::operator*()
00000000002562e8 W StaticArray<char const*, 4u>::Iterator::operator!=(StaticArray<char const*, 4u>::Iterator)
000000000025632c W StaticArray<char const*, 4u>::Iterator::operator++()
0000000000256008 W StaticArray<char const*, 4u>::StaticArray()
000000000014f464 W StaticArray<void*, 16u>::Add(void* const&)
000000000014eff8 t unsigned int StaticArray<void*, 16u>::FindIf<debugUnwindCallback(_Unwind_Context*, void*)::$_0>(debugUnwindCallback(_Unwind_Context*, void*)::$_0)
000000000014f30c t unsigned int StaticArray<void*, 16u>::FindIf<debugStacktraceSaveStopPoint(void*)::$_1>(debugStacktraceSaveStopPoint(void*)::$_1)
000000000014f41c W StaticArray<void*, 16u>::StaticArray()
00000000002657e8 W StaticArray<unsigned short, 128u>::Add(unsigned short const&)
00000000002656b8 W StaticArray<unsigned short, 128u>::Clear()
0000000000265760 W StaticArray<unsigned short, 128u>::StaticArray()
0000000000265648 W StaticArray<unsigned short, 128u>::operator[](unsigned int)
0000000000273a70 W AppCallbacks::AppCallbacks()
00000000000f350c W AssetManager::AssetManager()
0000000000137f30 T ClipboardVar::SetPointer(void*)
0000000000137bd0 T ClipboardVar::SetInt(long)
0000000000137ae4 T ClipboardVar::SetBool(bool)
0000000000137b60 T ClipboardVar::SetFloat(double)
0000000000137db4 T ClipboardVar::SetBuffer(void const*, unsigned int)
0000000000137c40 T ClipboardVar::SetString(char const*, unsigned int)
0000000000276a3c W ConCustomVar::operator=(ConCustomVar const&)
000000000025a064 W GfxSwapchain::GfxSwapchain()
00000000001d19b0 T ImFontConfig::ImFontConfig()
00000000001d19b0 T ImFontConfig::ImFontConfig()
00000000001be1b8 W ImGuiContext::ImGuiContext(ImFontAtlas*)
00000000001c6888 W ImGuiContext::~ImGuiContext()
00000000001c15b0 W ImGuiPayload::Clear()
00000000001c3860 W ImGuiPayload::ImGuiPayload()
0000000000183920 T ImGuiStorage::GetBoolRef(unsigned int, bool)
0000000000183c48 T ImGuiStorage::SetVoidPtr(unsigned int, void*)
0000000000183968 T ImGuiStorage::GetFloatRef(unsigned int, float)
0000000000183a0c T ImGuiStorage::GetVoidPtrRef(unsigned int, void*)
0000000000183524 T ImGuiStorage::BuildSortByKey()
00000000001bcc10 W ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair(unsigned int, void*)
00000000001bcbe4 W ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair(unsigned int, float)
00000000001bcbb8 W ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair(unsigned int, int)
00000000001bf99c W ImGuiStorage::Clear()
0000000000183ab0 T ImGuiStorage::SetInt(unsigned int, int)
0000000000183b58 T ImGuiStorage::SetBool(unsigned int, bool)
0000000000183ba0 T ImGuiStorage::SetFloat(unsigned int, float)
000000000018387c T ImGuiStorage::GetIntRef(unsigned int, int)
0000000000183cf0 T ImGuiStorage::SetAllInt(int)
00000000001bdacc W ImGuiStorage::ImGuiStorage()
00000000001bdd70 W ImGuiStorage::~ImGuiStorage()
000000000021db58 W ImGuiTabItem::ImGuiTabItem()
000000000012b754 W ModelContext::ModelContext()
000000000012ed70 W ShaderDefine::ShaderDefine(ShaderDefine const&)
000000000012e320 T ShaderLoader::LoadRemote(Handle<AssetHandleT>, AssetLoadParams const&, unsigned int, void*, void (*)(Handle<AssetHandleT>, AssetResult const&, void*))
000000000012e560 T ShaderLoader::ReloadSync(Handle<AssetHandleT>, void*)
000000000012eb68 W ShaderLoader::InitializeSystemResources(void*, AssetLoadParams const&)
000000000012e2c4 T ShaderLoader::Load(Handle<AssetHandleT>, AssetLoadParams const&, unsigned int, Allocator*)
000000000012e714 T ShaderLoader::Release(void*, Allocator*)
000000000012e8a4 W ShaderLoader::ShaderLoader()
0000000000254594 W VmaMutexLock::VmaMutexLock(VmaMutex&, bool)
0000000000254708 W VmaMutexLock::~VmaMutexLock()
00000000002c9c5c b (anonymous namespace)::heap_mutex
00000000002994c8 t (anonymous namespace)::fallback_free(void*)
0000000000299344 t (anonymous namespace)::fallback_malloc(unsigned long)
0000000000293d34 t (anonymous namespace)::itanium_demangle::AbiTagAttr::~AbiTagAttr()
000000000028fcac t (anonymous namespace)::itanium_demangle::BinaryExpr::~BinaryExpr()
00000000002928ac t (anonymous namespace)::itanium_demangle::BracedExpr::~BracedExpr()
00000000002904d8 t (anonymous namespace)::itanium_demangle::DeleteExpr::~DeleteExpr()
000000000028ed68 t (anonymous namespace)::itanium_demangle::LambdaExpr::~LambdaExpr()
00000000002924c8 t (anonymous namespace)::itanium_demangle::MemberExpr::~MemberExpr()
0000000000288668 t (anonymous namespace)::itanium_demangle::NestedName::~NestedName()
000000000028fe28 t (anonymous namespace)::itanium_demangle::PrefixExpr::~PrefixExpr()
00000000002937bc t (anonymous namespace)::itanium_demangle::UUIDOfExpr::~UUIDOfExpr()
0000000000296588 t (anonymous namespace)::itanium_demangle::VectorType::~VectorType()
0000000000296ffc t (anonymous namespace)::itanium_demangle::PointerType::~PointerType()
0000000000292d9c t (anonymous namespace)::itanium_demangle::PostfixExpr::~PostfixExpr()
0000000000287094 t (anonymous namespace)::itanium_demangle::SpecialName::~SpecialName()
0000000000293bd4 t (anonymous namespace)::itanium_demangle::CtorDtorName::~CtorDtorName()
0000000000294830 t (anonymous namespace)::itanium_demangle::EnableIfAttr::~EnableIfAttr()
0000000000295e5c t (anonymous namespace)::itanium_demangle::FunctionType::~FunctionType()
0000000000292c24 t (anonymous namespace)::itanium_demangle::InitListExpr::~InitListExpr()
0000000000295944 t (anonymous namespace)::itanium_demangle::NoexceptSpec::~NoexceptSpec()
0000000000294574 t (anonymous namespace)::itanium_demangle::TemplateArgs::~TemplateArgs()
0000000000293228 t (anonymous namespace)::itanium_demangle::EnclosingExpr::~EnclosingExpr()
000000000028efd8 t (anonymous namespace)::itanium_demangle::FunctionParam::~FunctionParam()
00000000002935c4 t (anonymous namespace)::itanium_demangle::NodeArrayNode::~NodeArrayNode()
0000000000295fd0 t (anonymous namespace)::itanium_demangle::ObjCProtoName::~ObjCProtoName()
0000000000294434 t (anonymous namespace)::itanium_demangle::ParameterPack::~ParameterPack()
0000000000290b24 t (anonymous namespace)::itanium_demangle::QualifiedName::~QualifiedName()
0000000000297440 t (anonymous namespace)::itanium_demangle::ReferenceType::~ReferenceType()
000000000028da24 t (anonymous namespace)::itanium_demangle::StringLiteral::~StringLiteral()
0000000000290340 t (anonymous namespace)::itanium_demangle::ConversionExpr::~ConversionExpr()
000000000028d068 t (anonymous namespace)::itanium_demangle::IntegerLiteral::~IntegerLiteral()
0000000000286c9c t (anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 32ul>::push_back((anonymous namespace)::itanium_demangle::Node* const&)
000000000028e0cc t (anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>::push_back((anonymous namespace)::itanium_demangle::Node* const&)
0000000000288670 t (anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>*, 4ul>::push_back((anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>* const&)
0000000000292b08 t (anonymous namespace)::itanium_demangle::BracedRangeExpr::~BracedRangeExpr()
000000000028ead8 t (anonymous namespace)::itanium_demangle::ClosureTypeName::~ClosureTypeName()
000000000029346c t (anonymous namespace)::itanium_demangle::ConditionalExpr::~ConditionalExpr()
000000000028eee0 t (anonymous namespace)::itanium_demangle::IntegerCastExpr::~IntegerCastExpr()
00000000002922d0 t (anonymous namespace)::itanium_demangle::LiteralOperator::~LiteralOperator()
0000000000296430 t (anonymous namespace)::itanium_demangle::PixelVectorType::~PixelVectorType()
000000000028e0c4 t (anonymous namespace)::itanium_demangle::UnnamedTypeName::~UnnamedTypeName()
000000000028d680 t (anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>::~FloatLiteralImpl()
000000000028d918 t (anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>::~FloatLiteralImpl()
000000000028d31c t (anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>::~FloatLiteralImpl()
0000000000294c88 t (anonymous namespace)::itanium_demangle::FunctionEncoding::~FunctionEncoding()
0000000000294728 t (anonymous namespace)::itanium_demangle::StdQualifiedName::~StdQualifiedName()
00000000002960f4 t (anonymous namespace)::itanium_demangle::VendorExtQualType::~VendorExtQualType()
0000000000292664 t (anonymous namespace)::itanium_demangle::ArraySubscriptExpr::~ArraySubscriptExpr()
00000000002923ac t (anonymous namespace)::itanium_demangle::GlobalQualifiedName::~GlobalQualifiedName()
0000000000296a14 t (anonymous namespace)::itanium_demangle::PointerToMemberType::~PointerToMemberType()
00000000002935b0 t (anonymous namespace)::itanium_demangle::SizeofParamPackExpr::~SizeofParamPackExpr()
0000000000294210 t (anonymous namespace)::itanium_demangle::SpecialSubstitution::~SpecialSubstitution()
0000000000295a30 t (anonymous namespace)::itanium_demangle::DynamicExceptionSpec::~DynamicExceptionSpec()
000000000029463c t (anonymous namespace)::itanium_demangle::NameWithTemplateArgs::~NameWithTemplateArgs()
00000000002974f0 t (anonymous namespace)::itanium_demangle::PostfixQualifiedType::~PostfixQualifiedType()
000000000029473c t (anonymous namespace)::itanium_demangle::TemplateArgumentPack::~TemplateArgumentPack()
0000000000287208 t (anonymous namespace)::itanium_demangle::CtorVtableSpecialName::~CtorVtableSpecialName()
0000000000293e0c t (anonymous namespace)::itanium_demangle::StructuredBindingName::~StructuredBindingName()
000000000028e97c t (anonymous namespace)::itanium_demangle::TemplateParamPackDecl::~TemplateParamPackDecl()
000000000028e50c t (anonymous namespace)::itanium_demangle::TypeTemplateParamDecl::~TypeTemplateParamDecl()
0000000000288154 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseAbiTags((anonymous namespace)::itanium_demangle::Node*)
0000000000290108 t (anonymous namespace)::itanium_demangle::NodeArray (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::makeNodeArray<(anonymous namespace)::itanium_demangle::Node**>((anonymous namespace)::itanium_demangle::Node**, (anonymous namespace)::itanium_demangle::Node**)
0000000000287dc4 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseDecltype()
0000000000283aac t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseEncoding()
000000000028b70c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFoldExpr()
000000000028bd14 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseBinaryExpr((anonymous namespace)::itanium_demangle::StringView)
000000000028c408 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseBracedExpr()
0000000000286d60 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseCallOffset()
0000000000290810 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSourceName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)
000000000028a96c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseExprPrimary()
0000000000286aac t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateArg()
0000000000287eec t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseCtorDtorName((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)
0000000000294e04 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFunctionType()
0000000000290b2c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseOperatorName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)
0000000000287210 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSubstitution()
00000000002875ac t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateArgs(bool)
00000000002956cc t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseClassEnumType()
000000000028b44c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFunctionParam()
000000000029530c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseQualifiedType()
0000000000287a1c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateParam()
000000000028c640 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseIntegerLiteral((anonymous namespace)::itanium_demangle::StringView)
000000000028bdcc t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnresolvedName()
00000000002904e0 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnresolvedType()
000000000028c7a8 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnnamedTypeName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)
00000000002882cc t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnqualifiedName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)
000000000028da2c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateParamDecl()
00000000002905a0 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseBaseUnresolvedName()
000000000028899c t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseExpr()
0000000000285f64 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)
0000000000284760 t (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseType()
00000000002921f0 t (anonymous namespace)::itanium_demangle::ConversionOperatorType::~ConversionOperatorType()
0000000000296b4c t (anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType::~ElaboratedTypeSpefType()
000000000028f93c t (anonymous namespace)::itanium_demangle::ParameterPackExpansion::~ParameterPackExpansion()
0000000000288994 t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::~ForwardTemplateReference()
000000000028e63c t (anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl::~NonTypeTemplateParamDecl()
000000000028e7ac t (anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl::~TemplateTemplateParamDecl()
000000000028e414 t (anonymous namespace)::itanium_demangle::SyntheticTemplateParamName::~SyntheticTemplateParamName()
0000000000293acc t (anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution::~ExpandedSpecialSubstitution()
000000000028efd0 t (anonymous namespace)::itanium_demangle::Node::~Node()
00000000002930ec t (anonymous namespace)::itanium_demangle::NewExpr::~NewExpr()
000000000028d128 t (anonymous namespace)::itanium_demangle::BoolExpr::~BoolExpr()
0000000000290100 t (anonymous namespace)::itanium_demangle::CallExpr::~CallExpr()
000000000028ffe4 t (anonymous namespace)::itanium_demangle::CastExpr::~CastExpr()
0000000000292114 t (anonymous namespace)::itanium_demangle::DtorName::~DtorName()
000000000028f740 t (anonymous namespace)::itanium_demangle::FoldExpr::~FoldExpr()
000000000028854c t (anonymous namespace)::itanium_demangle::NameType::~NameType()
0000000000296310 t (anonymous namespace)::itanium_demangle::QualType::~QualType()
0000000000296748 t (anonymous namespace)::itanium_demangle::ArrayType::~ArrayType()
0000000000294dfc t (anonymous namespace)::itanium_demangle::DotSuffix::~DotSuffix()
0000000000293f14 t (anonymous namespace)::itanium_demangle::LocalName::~LocalName()
000000000029369c t (anonymous namespace)::itanium_demangle::ThrowExpr::~ThrowExpr()
00000000002c9c90 b (anonymous namespace)::heap
00000000002c9c88 b (anonymous namespace)::freelist
000000000017f5a4 W EngineContext::EngineContext()
00000000001c81f0 W ImChunkStream<ImGuiTableSettings>::chunk_size(ImGuiTableSettings const*)
00000000001c2764 W ImChunkStream<ImGuiTableSettings>::next_chunk(ImGuiTableSettings*)
00000000001f2fd8 W ImChunkStream<ImGuiTableSettings>::alloc_chunk(unsigned long)
00000000001f30d4 W ImChunkStream<ImGuiTableSettings>::offset_from_ptr(ImGuiTableSettings const*)
00000000001f3064 W ImChunkStream<ImGuiTableSettings>::ptr_from_offset(int)
00000000001c81d0 W ImChunkStream<ImGuiTableSettings>::end()
00000000001f3214 W ImChunkStream<ImGuiTableSettings>::swap(ImChunkStream<ImGuiTableSettings>&)
00000000001c271c W ImChunkStream<ImGuiTableSettings>::begin()
00000000001f3654 W ImChunkStream<ImGuiTableSettings>::clear()
00000000001c3b2c W ImChunkStream<ImGuiTableSettings>::ImChunkStream()
00000000001c6b78 W ImChunkStream<ImGuiTableSettings>::~ImChunkStream()
00000000001c7f70 W ImChunkStream<ImGuiWindowSettings>::chunk_size(ImGuiWindowSettings const*)
00000000001c18c4 W ImChunkStream<ImGuiWindowSettings>::next_chunk(ImGuiWindowSettings*)
00000000001c177c W ImChunkStream<ImGuiWindowSettings>::alloc_chunk(unsigned long)
00000000001c4134 W ImChunkStream<ImGuiWindowSettings>::offset_from_ptr(ImGuiWindowSettings const*)
00000000001c4ad4 W ImChunkStream<ImGuiWindowSettings>::ptr_from_offset(int)
00000000001c4218 W ImChunkStream<ImGuiWindowSettings>::end()
00000000001c187c W ImChunkStream<ImGuiWindowSettings>::begin()
00000000001bfec4 W ImChunkStream<ImGuiWindowSettings>::clear()
00000000001c3b08 W ImChunkStream<ImGuiWindowSettings>::ImChunkStream()
00000000001c6b9c W ImChunkStream<ImGuiWindowSettings>::~ImChunkStream()
00000000001e37ac W ImDrawChannel::ImDrawChannel()
00000000001bd490 W ImGuiColorMod::ImGuiColorMod()
00000000001c2084 W ImGuiDockNode::SetLocalFlags(int)
00000000001c4fe4 W ImGuiDockNode::UpdateMergedFlags()
00000000001aa0e0 T ImGuiDockNode::ImGuiDockNode(unsigned int)
00000000001aa0e0 T ImGuiDockNode::ImGuiDockNode(unsigned int)
00000000001aa3b4 T ImGuiDockNode::~ImGuiDockNode()
00000000001aa3b4 T ImGuiDockNode::~ImGuiDockNode()
00000000001bd6e0 W ImGuiStyleMod::ImGuiStyleMod(int, ImVec2)
00000000001bd6b4 W ImGuiStyleMod::ImGuiStyleMod(int, float)
00000000001c3dbc W ImGuiViewport::ImGuiViewport()
00000000001c4df0 W ImGuiViewport::~ImGuiViewport()
0000000000139cc4 W SettingsDebug::SettingsDebug()
0000000000140cdc W VfsMountPoint::operator=(VfsMountPoint const&)
000000000010e2c8 W AssetCallbacks::AssetCallbacks()
0000000000241e98 T GfxObjectPools::Initialize()
0000000000243638 T GfxObjectPools::DetectAndReleaseLeaks()
0000000000243bc8 T GfxObjectPools::Release()
000000000025a0c0 W GfxObjectPools::GfxObjectPools()
00000000001c1424 W ImGuiPopupData::ImGuiPopupData()
00000000001c3bb0 W ImGuiStackTool::ImGuiStackTool()
00000000001c6af4 W ImGuiStackTool::~ImGuiStackTool()
00000000001bed8c W ImGuiViewportP::UpdateWorkRect()
00000000001c1b44 W ImGuiViewportP::ClearRequestFlags()
00000000001bf6b4 W ImGuiViewportP::ImGuiViewportP()
00000000001c4d08 W ImGuiViewportP::~ImGuiViewportP()
0000000000159930 W JobsAtomicPool<JobsInstance, 512u>::New()
00000000001595b0 W JobsAtomicPool<JobsInstance, 512u>::Create(Allocator*)
0000000000159360 W JobsAtomicPool<JobsInstance, 512u>::Delete(JobsInstance*)
00000000001597a8 W JobsAtomicPool<JobsInstance, 512u>::Destroy(JobsAtomicPool<JobsInstance, 512u>*, Allocator*)
0000000000159bcc W JobsAtomicPool<JobsFiberProperties, 4096u>::New()
00000000001596a0 W JobsAtomicPool<JobsFiberProperties, 4096u>::Create(Allocator*)
0000000000159dd4 W JobsAtomicPool<JobsFiberProperties, 4096u>::Delete(JobsFiberProperties*)
00000000001597d4 W JobsAtomicPool<JobsFiberProperties, 4096u>::Destroy(JobsAtomicPool<JobsFiberProperties, 4096u>*, Allocator*)
00000000001598cc W JobsInitParams::JobsInitParams()
000000000014dd88 W MemBaseContext::MemBaseContext()
000000000014ca68 W MemTempContext::MemTempContext()
0000000000143bdc T MemTempContext::~MemTempContext()
0000000000143bdc T MemTempContext::~MemTempContext()
0000000000139bf0 W SettingsEngine::SettingsEngine()
0000000000139ce0 W SettingsEngine::operator=(SettingsEngine const&)
00000000000f650c W TimerStopWatch::TimerStopWatch()
00000000002c8c40 b VkExtensionApi::vkResetQueryPoolEXT
00000000002c8c48 b VkExtensionApi::vkEnumerateInstanceVersion
00000000002c8c60 b VkExtensionApi::vkCreateDebugReportCallbackEXT
00000000002c8c50 b VkExtensionApi::vkCreateDebugUtilsMessengerEXT
00000000002c8c68 b VkExtensionApi::vkDestroyDebugReportCallbackEXT
00000000002c8c58 b VkExtensionApi::vkDestroyDebugUtilsMessengerEXT
00000000002c8c70 b VkExtensionApi::vkGetPhysicalDeviceProperties2KHR
00000000002c8c78 b VkExtensionApi::vkGetPipelineExecutablePropertiesKHR
00000000002c8c80 b VkExtensionApi::vkGetPipelineExecutableStatisticsKHR
00000000002c8c88 b VkExtensionApi::vkGetPipelineExecutableInternalRepresentationsKHR
000000000023b060 T VmaAllocator_T::CreatePool(VmaPoolCreateInfo const*, VmaPool_T**)
000000000023a990 T VmaAllocator_T::FreeMemory(unsigned long, VmaAllocation_T* const*)
000000000023b2d8 T VmaAllocator_T::DestroyPool(VmaPool_T*)
000000000023a638 T VmaAllocator_T::AllocateMemory(VkMemoryRequirements const&, bool, bool, VkBuffer_T*, VkImage_T*, unsigned int, VmaAllocationCreateInfo const&, VmaSuballocationType, unsigned long, VmaAllocation_T**)
000000000023c0b4 T VmaAllocator_T::FillAllocation(VmaAllocation_T*, unsigned char)
00000000002338ac T VmaAllocator_T::GetHeapBudgets(VmaBudget*, unsigned int, unsigned int)
000000000023b858 T VmaAllocator_T::BindImageMemory(VmaAllocation_T*, unsigned long, VkImage_T*, void const*)
0000000000231994 T VmaAllocator_T::BindVulkanImage(VkDeviceMemory_T*, unsigned long, VkImage_T*, void const*)
000000000023b450 T VmaAllocator_T::CheckCorruption(unsigned int)
000000000023b76c T VmaAllocator_T::BindBufferMemory(VmaAllocation_T*, unsigned long, VkBuffer_T*, void const*)
0000000000231794 T VmaAllocator_T::BindVulkanBuffer(VkDeviceMemory_T*, unsigned long, VkBuffer_T*, void const*)
0000000000230edc T VmaAllocator_T::FreeVulkanMemory(unsigned int, unsigned long, VkDeviceMemory_T*)
0000000000239400 T VmaAllocator_T::CalcMemTypeParams(VmaAllocationCreateInfo&, unsigned int, unsigned long, unsigned long)
000000000023afcc T VmaAllocator_T::GetAllocationInfo(VmaAllocation_T*, VmaAllocationInfo*)
000000000023b348 T VmaAllocator_T::GetPoolStatistics(VmaPool_T*, VmaStatistics*)
0000000000237d7c T VmaAllocator_T::UpdateVulkanBudget()
000000000023ac08 T VmaAllocator_T::CalculateStatistics(VmaTotalStatistics*)
000000000023b428 T VmaAllocator_T::CheckPoolCorruption(VmaPool_T*)
000000000023aadc T VmaAllocator_T::FreeDedicatedMemory(VmaAllocation_T*)
0000000000238e0c T VmaAllocator_T::AllocateMemoryOfType(VmaPool_T*, unsigned long, unsigned long, bool, VkBuffer_T*, VkImage_T*, unsigned int, VmaAllocationCreateInfo const&, unsigned int, VmaSuballocationType, VmaDedicatedAllocationList&, VmaBlockVector&, unsigned long, VmaAllocation_T**)
0000000000234370 T VmaAllocator_T::AllocateVulkanMemory(VkMemoryAllocateInfo const*, VkDeviceMemory_T**)
000000000023a424 T VmaAllocator_T::CalcAllocationParams(VmaAllocationCreateInfo&, bool, bool)
000000000023b3d8 T VmaAllocator_T::SetCurrentFrameIndex(unsigned int)
0000000000237b64 T VmaAllocator_T::ImportVulkanFunctions(VmaVulkanFunctions const*)
0000000000237c74 T VmaAllocator_T::CalcPreferredBlockSize(unsigned int)
00000000002394ec T VmaAllocator_T::AllocateDedicatedMemory(VmaPool_T*, unsigned long, VmaSuballocationType, VmaDedicatedAllocationList&, unsigned int, bool, bool, bool, bool, void*, float, VkBuffer_T*, VkImage_T*, unsigned int, unsigned long, VmaAllocation_T**, void const*)
000000000023b390 T VmaAllocator_T::CalculatePoolStatistics(VmaPool_T*, VmaDetailedStatistics*)
0000000000238a24 T VmaAllocator_T::ValidateVulkanFunctions()
000000000023997c T VmaAllocator_T::AllocateDedicatedMemoryPage(VmaPool_T*, unsigned long, VmaSuballocationType, unsigned int, VkMemoryAllocateInfo const&, bool, bool, bool, void*, VmaAllocation_T**)
000000000023b944 T VmaAllocator_T::FlushOrInvalidateAllocation(VmaAllocation_T*, unsigned long, unsigned long, VMA_CACHE_OPERATION)
000000000023bd14 T VmaAllocator_T::FlushOrInvalidateAllocations(unsigned int, VmaAllocation_T* const*, unsigned long const*, unsigned long const*, VMA_CACHE_OPERATION)
0000000000238170 T VmaAllocator_T::ImportVulkanFunctions_Custom(VmaVulkanFunctions const*)
0000000000238490 T VmaAllocator_T::ImportVulkanFunctions_Dynamic()
000000000023c0cc T VmaAllocator_T::GetGpuDefragmentationMemoryTypeBits()
000000000023b5e0 T VmaAllocator_T::Map(VmaAllocation_T*, void**)
0000000000237d3c T VmaAllocator_T::Init(VmaAllocatorCreateInfo const*)
000000000023b6d0 T VmaAllocator_T::Unmap(VmaAllocation_T*)
00000000002374f0 T VmaAllocator_T::VmaAllocator_T(VmaAllocatorCreateInfo const*)
00000000002374f0 T VmaAllocator_T::VmaAllocator_T(VmaAllocatorCreateInfo const*)
0000000000238018 T VmaAllocator_T::~VmaAllocator_T()
0000000000238018 T VmaAllocator_T::~VmaAllocator_T()
000000000023284c T VmaBlockVector::CreateBlock(unsigned long, unsigned long*)
0000000000232de8 T VmaBlockVector::AllocatePage(unsigned long, unsigned long, VmaAllocationCreateInfo const&, VmaSuballocationType, VmaAllocation_T**)
0000000000232a78 T VmaBlockVector::AddStatistics(VmaStatistics&)
0000000000233e54 T VmaBlockVector::HasEmptyBlock()
0000000000233fd8 T VmaBlockVector::SortByFreeSize()
00000000002345e0 T VmaBlockVector::CheckCorruption()
00000000002327d0 T VmaBlockVector::CreateMinBlocks()
0000000000233bbc T VmaBlockVector::AllocateFromBlock(VmaDeviceMemoryBlock*, unsigned long, unsigned long, unsigned int, void*, VmaSuballocationType, unsigned int, VmaAllocation_T**)
0000000000254ef4 W VmaBlockVector::SetIncrementalSort(bool)
0000000000232b48 T VmaBlockVector::AddDetailedStatistics(VmaDetailedStatistics&)
00000000002340c4 T VmaBlockVector::CommitAllocationRequest(VmaAllocationRequest&, VmaDeviceMemoryBlock*, unsigned long, unsigned int, void*, VmaSuballocationType, VmaAllocation_T**)
0000000000233cac T VmaBlockVector::IncrementallySortBlocks()
00000000002335d0 T VmaBlockVector::Free(VmaAllocation_T*)
0000000000233efc T VmaBlockVector::Remove(VmaDeviceMemoryBlock*)
0000000000232c18 T VmaBlockVector::IsEmpty()
0000000000232c9c T VmaBlockVector::Allocate(unsigned long, unsigned long, VmaAllocationCreateInfo const&, VmaSuballocationType, unsigned long, VmaAllocation_T**)
0000000000254fd4 W VmaBlockVector::GetMutex()
00000000002325cc T VmaBlockVector::VmaBlockVector(VmaAllocator_T*, VmaPool_T*, unsigned int, unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned int, float, unsigned long, void*)
00000000002325cc T VmaBlockVector::VmaBlockVector(VmaAllocator_T*, VmaPool_T*, unsigned int, unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned int, float, unsigned long, void*)
00000000002326e4 T VmaBlockVector::~VmaBlockVector()
00000000002326e4 T VmaBlockVector::~VmaBlockVector()
0000000000255a44 W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::data()
000000000025f1a8 W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::resize(unsigned long, bool)
0000000000255990 W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::push_back(VkMappedMemoryRange const&)
000000000025595c W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::VmaSmallVector(VmaStlAllocator<VkMappedMemoryRange> const&)
0000000000255a98 W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::~VmaSmallVector()
0000000000131d20 W AppAndroidState::AppAndroidState()
000000000012ce20 W AssetDependency::operator=(AssetDependency&&)
000000000013824c W AtomicLockScope::AtomicLockScope(AtomicLock&)
00000000001385b0 W AtomicLockScope::~AtomicLockScope()
00000000001c32cc W ImDrawCmdHeader::ImDrawCmdHeader()
00000000001f32c8 W ImGuiOldColumns::ImGuiOldColumns()
00000000001c675c W ImGuiOldColumns::~ImGuiOldColumns()
00000000001c3578 W ImGuiPlatformIO::ImGuiPlatformIO()
00000000001c6fcc W ImGuiPlatformIO::~ImGuiPlatformIO()
000000000021df20 W ImGuiPtrOrIndex::ImGuiPtrOrIndex(void*)
000000000021defc W ImGuiPtrOrIndex::ImGuiPtrOrIndex(int)
000000000019887c T ImGuiStackSizes::SetToCurrentState()
000000000019c280 T ImGuiStackSizes::CompareWithCurrentState()
00000000001c43e8 W ImGuiStackSizes::ImGuiStackSizes()
00000000002c0fb8 B ImGuiTextBuffer::EmptyString
00000000001bff30 W ImGuiTextBuffer::clear()
0000000000184280 T ImGuiTextBuffer::append(char const*, char const*)
00000000001843bc T ImGuiTextBuffer::appendf(char const*, ...)
00000000001c4b44 W ImGuiTextBuffer::reserve(int)
000000000018446c T ImGuiTextBuffer::appendfv(char const*, std::__va_list)
00000000001c3ac4 W ImGuiTextBuffer::ImGuiTextBuffer()
00000000001c6b1c W ImGuiTextBuffer::~ImGuiTextBuffer()
00000000001bcd9c W ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange(char const*, char const*)
0000000000183f44 T ImGuiTextFilter::Draw(char const*, float)
0000000000183dbc T ImGuiTextFilter::Build()
0000000000183d5c T ImGuiTextFilter::ImGuiTextFilter(char const*)
0000000000183d5c T ImGuiTextFilter::ImGuiTextFilter(char const*)
00000000001f3c1c W ImSpanAllocator<3>::GetSpanPtrEnd(int)
00000000001f3ba0 W ImSpanAllocator<3>::GetSpanPtrBegin(int)
00000000001f2b6c W ImSpanAllocator<3>::SetArenaBasePtr(void*)
00000000001f2b54 W ImSpanAllocator<3>::GetArenaSizeInBytes()
00000000001f2b8c W void ImSpanAllocator<3>::GetSpan<ImGuiTableColumn>(int, ImSpan<ImGuiTableColumn>*)
00000000001f2c4c W void ImSpanAllocator<3>::GetSpan<ImGuiTableCellData>(int, ImSpan<ImGuiTableCellData>*)
00000000001f2bec W void ImSpanAllocator<3>::GetSpan<signed char>(int, ImSpan<signed char>*)
00000000001f2a88 W ImSpanAllocator<3>::Reserve(int, unsigned long, int)
00000000001f2a5c W ImSpanAllocator<3>::ImSpanAllocator()
000000000010e5bc W ImageLoadParams::ImageLoadParams()
000000000012c1fc W ModelLoadParams::ModelLoadParams(ModelLoadParams const&)
000000000012d144 W ModelLoadParams::ModelLoadParams()
000000000012d32c W ModelLoadParams::operator=(ModelLoadParams const&)
000000000016bf10 W SettingsContext::SettingsContext()
0000000000139ca4 W SettingsTooling::SettingsTooling()
0000000000254df8 W VmaAllocation_T::SetUserData(VmaAllocator_T*, void*)
0000000000232214 T VmaAllocation_T::BlockAllocMap()
00000000002322c0 T VmaAllocation_T::BlockAllocUnmap()
000000000023234c T VmaAllocation_T::DedicatedAllocMap(VmaAllocator_T*, void**)
00000000002324b8 T VmaAllocation_T::DedicatedAllocUnmap(VmaAllocator_T*)
0000000000231b5c T VmaAllocation_T::InitBlockAllocation(VmaDeviceMemoryBlock*, VmaAllocHandle_T*, unsigned long, unsigned long, unsigned int, VmaSuballocationType, bool)
0000000000231eb4 T VmaAllocation_T::SwapBlockAllocation(VmaAllocator_T*, VmaAllocation_T*)
0000000000231c64 T VmaAllocation_T::InitDedicatedAllocation(VmaPool_T*, unsigned int, VkDeviceMemory_T*, VmaSuballocationType, void*, unsigned long)
0000000000231d6c T VmaAllocation_T::SetName(VmaAllocator_T*, char const*)
0000000000231df8 T VmaAllocation_T::FreeName(VmaAllocator_T*)
0000000000231a88 T VmaAllocation_T::VmaAllocation_T(bool)
0000000000231a88 T VmaAllocation_T::VmaAllocation_T(bool)
0000000000231af0 T VmaAllocation_T::~VmaAllocation_T()
0000000000231af0 T VmaAllocation_T::~VmaAllocation_T()
000000000025379c W VmaStlAllocator<VmaSuballocation>::VmaStlAllocator(VkAllocationCallbacks const*)
000000000025593c W VmaStlAllocator<VkMappedMemoryRange>::VmaStlAllocator(VkAllocationCallbacks const*)
0000000000254ea4 W VmaStlAllocator<VmaDefragmentationMove>::VmaStlAllocator(VkAllocationCallbacks const*)
0000000000259cac W VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock>::VmaStlAllocator(VkAllocationCallbacks const*)
000000000025d964 W VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock>::VmaStlAllocator(VkAllocationCallbacks const*)
0000000000255090 W VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock>::VmaStlAllocator(VkAllocationCallbacks const*)
0000000000254b34 W VmaStlAllocator<VmaDeviceMemoryBlock*>::VmaStlAllocator(VkAllocationCallbacks const*)
00000000002541d8 W VmaStlAllocator<VmaBlockMetadata_TLSF::Block*>::VmaStlAllocator(VkAllocationCallbacks const*)
000000000012d120 W AssetHandleImage::AssetHandleImage()
0000000000273a94 W AssetHandleModel::AssetHandleModel()
00000000000f77ac W AssetTypeManager::operator=(AssetTypeManager const&)
00000000001599dc W AtomicALockScope::AtomicALockScope(AtomicALock&)
0000000000159c78 W AtomicALockScope::~AtomicALockScope()
0000000000137fd0 W ClipboardContext::ClipboardContext()
000000000017d5bc W FrameInfoContext::FrameInfoContext()
0000000000241e7c T GfxHeapAllocator::vkInternalFreeFn(void*, unsigned long, VkInternalAllocationType, VkSystemAllocationScope)
0000000000241e60 T GfxHeapAllocator::vkInternalAllocFn(void*, unsigned long, VkInternalAllocationType, VkSystemAllocationScope)
000000000024b778 T GfxHeapAllocator::Free(void*, unsigned int)
000000000024b6d8 T GfxHeapAllocator::Malloc(unsigned long, unsigned int)
0000000000241dfc T GfxHeapAllocator::vkFree(void*, void*)
000000000024b720 T GfxHeapAllocator::Realloc(void*, unsigned long, unsigned int)
0000000000241cdc T GfxHeapAllocator::vkAlloc(void*, unsigned long, unsigned long, VkSystemAllocationScope)
0000000000241d64 T GfxHeapAllocator::vkRealloc(void*, void*, unsigned long, unsigned long, VkSystemAllocationScope)
000000000025a020 W GfxHeapAllocator::GfxHeapAllocator()
00000000001c3a74 W ImGuiDockContext::ImGuiDockContext()
00000000001c6bf8 W ImGuiDockContext::~ImGuiDockContext()
00000000001c1d60 W ImGuiDockRequest::ImGuiDockRequest()
00000000001848d8 T ImGuiListClipper::ForceDisplayRangeByIndices(int, int)
0000000000184628 T ImGuiListClipper::End()
00000000001849a8 T ImGuiListClipper::Step()
0000000000184738 T ImGuiListClipper::Begin(int, float)
00000000001845dc T ImGuiListClipper::ImGuiListClipper()
00000000001845dc T ImGuiListClipper::ImGuiListClipper()
0000000000184604 T ImGuiListClipper::~ImGuiListClipper()
0000000000184604 T ImGuiListClipper::~ImGuiListClipper()
000000000020efa8 T ImGuiMenuColumns::DeclColumns(float, float, float, float)
000000000020ee88 T ImGuiMenuColumns::CalcNextTotalWidth(bool)
000000000020ee14 T ImGuiMenuColumns::Update(float, bool)
00000000001c31c8 W ImGuiMenuColumns::ImGuiMenuColumns()
00000000001c1540 W ImGuiNavItemData::Clear()
00000000001c382c W ImGuiNavItemData::ImGuiNavItemData()
00000000001f295c W ImGuiTableColumn::ImGuiTableColumn()
00000000001bd944 W ImGuiWindowClass::ImGuiWindowClass()
000000000014df44 W MemHeapAllocator::Free(void*, unsigned int)
000000000014ddb8 W MemHeapAllocator::Malloc(unsigned long, unsigned int)
000000000014de88 W MemHeapAllocator::Realloc(void*, unsigned long, unsigned int)
000000000014dfac W MemHeapAllocator::MemHeapAllocator()
000000000010f1d0 W AssetImage* MemTempAllocator::MallocTyped<AssetImage>(unsigned int, unsigned int)
0000000000259520 W VkViewport* MemTempAllocator::MallocTyped<VkViewport>(unsigned int, unsigned int)
0000000000259590 W GfxPipelineData* MemTempAllocator::MallocTyped<GfxPipelineData>(unsigned int, unsigned int)
000000000025b4f4 W VkPushConstantRange* MemTempAllocator::MallocTyped<VkPushConstantRange>(unsigned int, unsigned int)
00000000002593ec W VkWriteDescriptorSet* MemTempAllocator::MallocTyped<VkWriteDescriptorSet>(unsigned int, unsigned int)
0000000000259468 W VkDescriptorImageInfo* MemTempAllocator::MallocTyped<VkDescriptorImageInfo>(unsigned int, unsigned int)
0000000000259428 W VkDescriptorBufferInfo* MemTempAllocator::MallocTyped<VkDescriptorBufferInfo>(unsigned int, unsigned int)
0000000000258d3c W VkDescriptorSetLayoutBinding* MemTempAllocator::MallocTyped<VkDescriptorSetLayoutBinding>(unsigned int, unsigned int)
00000000002585d0 W VkVertexInputBindingDescription* MemTempAllocator::MallocTyped<VkVertexInputBindingDescription>(unsigned int, unsigned int)
0000000000258610 W VkVertexInputAttributeDescription* MemTempAllocator::MallocTyped<VkVertexInputAttributeDescription>(unsigned int, unsigned int)
00000000002586bc W VkPipelineColorBlendAttachmentState* MemTempAllocator::MallocTyped<VkPipelineColorBlendAttachmentState>(unsigned int, unsigned int)
00000000002594e4 W VkRect2D* MemTempAllocator::MallocTyped<VkRect2D>(unsigned int, unsigned int)
000000000017c794 W DebugDrawContext::Vertex* MemTempAllocator::MallocTyped<DebugDrawContext::Vertex>(unsigned int, unsigned int)
00000000002594a8 W VkDescriptorSet_T** MemTempAllocator::MallocTyped<VkDescriptorSet_T*>(unsigned int, unsigned int)
000000000025b4b8 W VkDescriptorSetLayout_T** MemTempAllocator::MallocTyped<VkDescriptorSetLayout_T*>(unsigned int, unsigned int)
0000000000258d7c W char const** MemTempAllocator::MallocTyped<char const*>(unsigned int, unsigned int)
00000000001549e8 W char* MemTempAllocator::MallocTyped<char>(unsigned int, unsigned int)
000000000017d7ec W float* MemTempAllocator::MallocTyped<float>(unsigned int, unsigned int)
000000000012bb40 W unsigned char* MemTempAllocator::MallocTyped<unsigned char>(unsigned int, unsigned int)
000000000012bb7c W unsigned int* MemTempAllocator::MallocTyped<unsigned int>(unsigned int, unsigned int)
000000000025977c W unsigned long* MemTempAllocator::MallocTyped<unsigned long>(unsigned int, unsigned int)
000000000012bbec W RelativePtr<ModelMaterial>* MemTempAllocator::MallocZeroTyped<RelativePtr<ModelMaterial> >(unsigned int, unsigned int)
000000000012ba24 W ModelSubmesh* MemTempAllocator::MallocZeroTyped<ModelSubmesh>(unsigned int, unsigned int)
000000000012b834 W Model* MemTempAllocator::MallocZeroTyped<Model>(unsigned int, unsigned int)
000000000012c77c W Float3* MemTempAllocator::MallocZeroTyped<Float3>(unsigned int, unsigned int)
000000000012b8f0 W ModelMesh* MemTempAllocator::MallocZeroTyped<ModelMesh>(unsigned int, unsigned int)
000000000012bdb0 W ModelNode* MemTempAllocator::MallocZeroTyped<ModelNode>(unsigned int, unsigned int)
000000000012bf10 W unsigned int* MemTempAllocator::MallocZeroTyped<unsigned int>(unsigned int, unsigned int)
0000000000144c50 T MemTempAllocator::Free(void*, unsigned int)
0000000000144bd8 T MemTempAllocator::Malloc(unsigned long, unsigned int)
0000000000144c10 T MemTempAllocator::Realloc(void*, unsigned long, unsigned int)
0000000000144b1c T MemTempAllocator::MemTempAllocator(unsigned int)
0000000000144ab0 T MemTempAllocator::MemTempAllocator()
0000000000144b1c T MemTempAllocator::MemTempAllocator(unsigned int)
0000000000144ab0 T MemTempAllocator::MemTempAllocator()
0000000000144b84 T MemTempAllocator::~MemTempAllocator()
0000000000144b84 T MemTempAllocator::~MemTempAllocator()
0000000000144d7c T MemTlsfAllocator::Initialize(unsigned long, void*, unsigned long, bool)
0000000000144d30 T MemTlsfAllocator::GetMemoryRequirement(unsigned long)
00000000001451f8 T MemTlsfAllocator::CalculateFragmentation()
00000000001450c4 T MemTlsfAllocator::Free(void*, unsigned int)
0000000000144e74 T MemTlsfAllocator::Malloc(unsigned long, unsigned int)
0000000000144fa4 T MemTlsfAllocator::Realloc(void*, unsigned long, unsigned int)
0000000000144e3c T MemTlsfAllocator::Release()
0000000000145174 T MemTlsfAllocator::Validate()
00000000000f4e70 W MemTlsfAllocator::MemTlsfAllocator()
000000000012d3bc W ModelLoadRequest::ModelLoadRequest(ModelLoadRequest const&)
000000000012d1f0 W ModelLoadRequest::operator=(ModelLoadRequest const&)
0000000000139c50 W SettingsGraphics::SettingsGraphics()
0000000000139b5c W SettingsJunkyard::SettingsJunkyard()
0000000000139a9c W SettingsJunkyard::operator=(SettingsJunkyard const&)
000000000016c6ec W SettingsKeyValue::operator=(SettingsKeyValue const&)
000000000017537c W TimerInitializer::TimerInitializer()
00000000002537ec W VmaBlockMetadata::Init(unsigned long)
0000000000229a6c T VmaBlockMetadata::VmaBlockMetadata(VkAllocationCallbacks const*, unsigned long, bool)
0000000000259964 W VmaBlockMetadata::~VmaBlockMetadata()
0000000000259954 W VmaBlockMetadata::~VmaBlockMetadata()
0000000000253388 W VmaMutexLockRead::VmaMutexLockRead(VmaRWMutex&, bool)
0000000000253434 W VmaMutexLockRead::~VmaMutexLockRead()
000000000025e718 W VmaPoolAllocator<VmaAllocation_T>::CreateNewBlock()
0000000000254604 W VmaPoolAllocator<VmaAllocation_T>::Free(VmaAllocation_T*)
000000000025e5c0 W VmaAllocation_T* VmaPoolAllocator<VmaAllocation_T>::Alloc<bool const&>(bool const&)
000000000025eb0c W VmaAllocation_T* VmaPoolAllocator<VmaAllocation_T>::Alloc<bool&>(bool&)
0000000000259c24 W VmaPoolAllocator<VmaAllocation_T>::VmaPoolAllocator(VkAllocationCallbacks const*, unsigned int)
0000000000259da0 W VmaPoolAllocator<VmaAllocation_T>::~VmaPoolAllocator()
000000000025db64 W VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::CreateNewBlock()
00000000002542f4 W VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::Free(VmaBlockMetadata_TLSF::Block*)
0000000000254064 W VmaBlockMetadata_TLSF::Block* VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::Alloc<>()
0000000000253f20 W VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::VmaPoolAllocator(VkAllocationCallbacks const*, unsigned int)
0000000000253fc0 W VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::~VmaPoolAllocator()
000000000017c820 W AssetBarrierScope::AssetBarrierScope()
000000000017c880 W AssetBarrierScope::~AssetBarrierScope()
0000000000265778 W AssetHandleShader::AssetHandleShader()
000000000010db5c W AssetImageManager::AssetImageManager()
00000000000f5460 W AssetMetaKeyValue::AssetMetaKeyValue()
00000000000f55ac W AssetMetaKeyValue::operator=(AssetMetaKeyValue const&)
0000000000193a94 T ImDrawDataBuilder::FlattenIntoSingleLayer()
00000000001c0290 W ImDrawDataBuilder::Clear()
00000000001c3e68 W ImDrawDataBuilder::ImDrawDataBuilder()
00000000001c4da0 W ImDrawDataBuilder::~ImDrawDataBuilder()
00000000001c3600 W ImGuiLastItemData::ImGuiLastItemData()
000000000021d7e4 W ImGuiNextItemData::ClearFlags()
00000000001c35e0 W ImGuiNextItemData::ImGuiNextItemData()
000000000014dff0 W RandomContextCtor::RandomContextCtor()
000000000012e978 W ShaderCompileDesc::ShaderCompileDesc(ShaderCompileDesc const&)
0000000000253484 W VmaMutexLockWrite::VmaMutexLockWrite(VmaRWMutex&, bool)
0000000000253594 W VmaMutexLockWrite::~VmaMutexLockWrite()
00000000002308c8 T VmaVirtualBlock_T::GetAllocationInfo(VmaVirtualAllocation_T*, VmaVirtualAllocationInfo&)
0000000000255c48 W VmaVirtualBlock_T::SetAllocationUserData(VmaVirtualAllocation_T*, void*)
0000000000255be0 W VmaVirtualBlock_T::Free(VmaVirtualAllocation_T*)
0000000000255b98 W VmaVirtualBlock_T::Init()
0000000000255c18 W VmaVirtualBlock_T::Clear()
0000000000230908 T VmaVirtualBlock_T::Allocate(VmaVirtualAllocationCreateInfo const&, VmaVirtualAllocation_T*&, unsigned long*)
0000000000230614 T VmaVirtualBlock_T::VmaVirtualBlock_T(VmaVirtualBlockCreateInfo const&)
0000000000230614 T VmaVirtualBlock_T::VmaVirtualBlock_T(VmaVirtualBlockCreateInfo const&)
00000000002307fc T VmaVirtualBlock_T::~VmaVirtualBlock_T()
00000000002307fc T VmaVirtualBlock_T::~VmaVirtualBlock_T()
00000000001ca7f0 T ImDrawListSplitter::ClearFreeMemory()
00000000001d100c T ImDrawListSplitter::SetCurrentChannel(ImDrawList*, int)
00000000001e2f38 W ImDrawListSplitter::Clear()
00000000001d0ba8 T ImDrawListSplitter::Merge(ImDrawList*)
00000000001d0a44 T ImDrawListSplitter::Split(ImDrawList*, int)
00000000001c32f0 W ImDrawListSplitter::ImDrawListSplitter()
00000000001c334c W ImDrawListSplitter::~ImDrawListSplitter()
00000000001e5260 W ImFontBuildSrcData::~ImFontBuildSrcData()
00000000001c3b70 W ImGuiMetricsConfig::ImGuiMetricsConfig()
00000000001f348c W ImGuiOldColumnData::ImGuiOldColumnData()
000000000021df48 W ImGuiTabBarSection::ImGuiTabBarSection()
00000000001f3168 W ImGuiTableSettings::GetColumnSettings()
00000000001f35e4 W ImGuiTableSettings::ImGuiTableSettings()
00000000001f279c W ImGuiTableTempData::ImGuiTableTempData()
00000000001c7be4 W ImGuiTableTempData::~ImGuiTableTempData()
0000000000144a20 T MemBumpAllocatorVM::BackendCommit(void*, unsigned long)
0000000000144a80 T MemBumpAllocatorVM::BackendRelease(void*, unsigned long)
00000000001449f4 T MemBumpAllocatorVM::BackendReserve(unsigned long)
0000000000144a50 T MemBumpAllocatorVM::BackendDecommit(void*, unsigned long)
000000000017f7c4 W MemBumpAllocatorVM::MemBumpAllocatorVM()
00000000000f8e8c T AssetImageCallbacks::LoadRemote(Handle<AssetHandleT>, AssetLoadParams const&, unsigned int, void*, void (*)(Handle<AssetHandleT>, AssetResult const&, void*))
00000000000f9180 T AssetImageCallbacks::ReloadSync(Handle<AssetHandleT>, void*)
00000000000f9084 T AssetImageCallbacks::InitializeSystemResources(void*, AssetLoadParams const&)
00000000000f8740 T AssetImageCallbacks::Load(Handle<AssetHandleT>, AssetLoadParams const&, unsigned int, Allocator*)
00000000000f934c T AssetImageCallbacks::Release(void*, Allocator*)
000000000010e204 W AssetImageCallbacks::AssetImageCallbacks()
000000000013716c W CameraFrustumPoints::operator[](unsigned int)
000000000014e750 W DebugFiberProtector::DebugFiberProtector()
000000000021d5e0 W ImGuiInputTextState::CursorClamp()
0000000000205eb4 T ImGuiInputTextState::OnKeyPressed(int)
000000000021d760 W ImGuiInputTextState::ClearSelection()
00000000001bfe80 W ImGuiInputTextState::ClearFreeMemory()
000000000021d56c W ImGuiInputTextState::CursorAnimReset()
000000000021d6b0 W ImGuiInputTextState::SelectAll()
00000000001c39a4 W ImGuiInputTextState::ImGuiInputTextState()
00000000001c6c70 W ImGuiInputTextState::~ImGuiInputTextState()
00000000001c0d48 W ImGuiNextWindowData::ClearFlags()
00000000001c3654 W ImGuiNextWindowData::ImGuiNextWindowData()
00000000001c2e54 W ImGuiStackLevelInfo::ImGuiStackLevelInfo()
00000000001f3a44 W ImGuiTableSortSpecs::ImGuiTableSortSpecs()
00000000001c1864 W ImGuiWindowSettings::GetName()
00000000001c1808 W ImGuiWindowSettings::ImGuiWindowSettings()
00000000001bd998 W ImGuiWindowTempData::ImGuiWindowTempData()
00000000001bdd94 W ImGuiWindowTempData::~ImGuiWindowTempData()
000000000015f840 W MemSingleShotMalloc<JsonContext, 8u>& MemSingleShotMalloc<JsonContext, 8u>::AddMemberField<cj5_token>(unsigned int, unsigned long, bool, unsigned int)
000000000015fa60 W MemSingleShotMalloc<JsonContext, 8u>::Free(JsonContext*, Allocator*)
000000000015f980 W MemSingleShotMalloc<JsonContext, 8u>::Calloc(Allocator*)
000000000015fcd8 W MemSingleShotMalloc<JsonContext, 8u>::Calloc(void*, unsigned long)
000000000015f80c W MemSingleShotMalloc<JsonContext, 8u>::MemSingleShotMalloc()
0000000000159ebc W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>& MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::AddMemberField<JobsInstance*>(unsigned int, unsigned long, bool, unsigned int)
0000000000159ffc W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>& MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::AddMemberField<JobsInstance>(unsigned int, unsigned long, bool, unsigned int)
000000000015aa70 W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::Free(JobsAtomicPool<JobsInstance, 512u>*, Allocator*)
000000000015a13c W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::Calloc(Allocator*)
000000000015a21c W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::Calloc(void*, unsigned long)
0000000000159e88 W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::MemSingleShotMalloc()
000000000015a4b0 W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>& MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::AddMemberField<JobsFiberProperties*>(unsigned int, unsigned long, bool, unsigned int)
000000000015a5f0 W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>& MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::AddMemberField<JobsFiberProperties>(unsigned int, unsigned long, bool, unsigned int)
000000000015ab24 W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::Free(JobsAtomicPool<JobsFiberProperties, 4096u>*, Allocator*)
000000000015a730 W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::Calloc(Allocator*)
000000000015a810 W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::Calloc(void*, unsigned long)
000000000015a47c W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::MemSingleShotMalloc()
00000000000f575c W MemSingleShotMalloc<AssetLoadParams, 8u>& MemSingleShotMalloc<AssetLoadParams, 8u>::AddMemberField<char>(unsigned int, unsigned long, bool, unsigned int)
00000000000f589c W MemSingleShotMalloc<AssetLoadParams, 8u>& MemSingleShotMalloc<AssetLoadParams, 8u>::AddExternalPointerField<unsigned char>(unsigned char**, unsigned long, unsigned int)
00000000000f3d78 W MemSingleShotMalloc<AssetLoadParams, 8u>::Free(AssetLoadParams*, Allocator*)
00000000000f59f0 W MemSingleShotMalloc<AssetLoadParams, 8u>::Calloc(Allocator*)
00000000000f5e44 W MemSingleShotMalloc<AssetLoadParams, 8u>::Calloc(void*, unsigned long)
00000000000f3d44 W MemSingleShotMalloc<AssetLoadParams, 8u>::MemSingleShotMalloc()
000000000025c120 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberField<VkPipelineShaderStageCreateInfo>(unsigned int, unsigned long, bool, unsigned int)
000000000025c4e8 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberField<VkPipelineViewportStateCreateInfo>(unsigned int, unsigned long, bool, unsigned int)
000000000025c768 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberField<VkPipelineMultisampleStateCreateInfo>(unsigned int, unsigned long, bool, unsigned int)
000000000025c8a8 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberField<VkPipelineDepthStencilStateCreateInfo>(unsigned int, unsigned long, bool, unsigned int)
000000000025c3a8 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberField<VkPipelineInputAssemblyStateCreateInfo>(unsigned int, unsigned long, bool, unsigned int)
000000000025c628 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberField<VkPipelineRasterizationStateCreateInfo>(unsigned int, unsigned long, bool, unsigned int)
000000000025cb30 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberChildPODField<MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u> >(MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u> const&, unsigned int, unsigned long, bool, unsigned int)
000000000025c9e8 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberChildPODField<MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u> >(MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u> const&, unsigned int, unsigned long, bool, unsigned int)
000000000025c260 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>& MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::AddMemberChildPODField<MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u> >(MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u> const&, unsigned int, unsigned long, bool, unsigned int)
0000000000258c18 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::Free(VkGraphicsPipelineCreateInfo*, Allocator*)
000000000025cc78 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::Calloc(Allocator*)
000000000025d478 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::Calloc(void*, unsigned long)
0000000000258be4 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::MemSingleShotMalloc()
000000000010e928 W MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>& MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>::AddMemberField<GfxDescriptorBindingDesc>(unsigned int, unsigned long, bool, unsigned int)
000000000010de00 W MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>::Free(AssetDescriptorUpdateCacheItem*, Allocator*)
000000000010ea68 W MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>::Calloc(Allocator*)
000000000010eb90 W MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>::Calloc(void*, unsigned long)
000000000010dd20 W MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>::MemSingleShotMalloc()
000000000025bfe0 W MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u>& MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u>::AddMemberField<VkDynamicState>(unsigned int, unsigned long, bool, unsigned int)
000000000025d1e8 W MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u>::Calloc(void*, unsigned long)
000000000025bfac W MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u>::MemSingleShotMalloc()
000000000025be6c W MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u>& MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u>::AddMemberField<VkPipelineColorBlendAttachmentState>(unsigned int, unsigned long, bool, unsigned int)
000000000025cfa0 W MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u>::Calloc(void*, unsigned long)
000000000025be38 W MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u>::MemSingleShotMalloc()
000000000025bbb8 W MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>& MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>::AddMemberField<VkVertexInputBindingDescription>(unsigned int, unsigned long, bool, unsigned int)
000000000025bcf8 W MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>& MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>::AddMemberField<VkVertexInputAttributeDescription>(unsigned int, unsigned long, bool, unsigned int)
000000000025cd58 W MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>::Calloc(void*, unsigned long)
000000000025bb84 W MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>::MemSingleShotMalloc()
0000000000151068 W MemSingleShotMalloc<_private::HashTableData, 8u>& MemSingleShotMalloc<_private::HashTableData, 8u>::AddMemberField<unsigned char>(unsigned int, unsigned long, bool, unsigned int)
0000000000150f28 W MemSingleShotMalloc<_private::HashTableData, 8u>& MemSingleShotMalloc<_private::HashTableData, 8u>::AddMemberField<unsigned int>(unsigned int, unsigned long, bool, unsigned int)
00000000001512a0 W MemSingleShotMalloc<_private::HashTableData, 8u>::Free(_private::HashTableData*, Allocator*)
00000000001511a8 W MemSingleShotMalloc<_private::HashTableData, 8u>::Calloc(Allocator*)
0000000000151354 W MemSingleShotMalloc<_private::HashTableData, 8u>::Calloc(void*, unsigned long)
0000000000150ef4 W MemSingleShotMalloc<_private::HashTableData, 8u>::MemSingleShotMalloc()
0000000000169448 W MemSingleShotMalloc<_private::HandlePoolTable, 8u>& MemSingleShotMalloc<_private::HandlePoolTable, 8u>::AddMemberField<unsigned int>(unsigned int, unsigned long, bool, unsigned int)
0000000000169668 W MemSingleShotMalloc<_private::HandlePoolTable, 8u>::Free(_private::HandlePoolTable*, Allocator*)
0000000000169588 W MemSingleShotMalloc<_private::HandlePoolTable, 8u>::Calloc(Allocator*)
00000000001697f0 W MemSingleShotMalloc<_private::HandlePoolTable, 8u>::Calloc(void*, unsigned long)
0000000000169414 W MemSingleShotMalloc<_private::HandlePoolTable, 8u>::MemSingleShotMalloc()
000000000012d00c W ModelGeometryLayout::ModelGeometryLayout(ModelGeometryLayout const&)
000000000012c2c8 W ModelGeometryLayout::ModelGeometryLayout()
000000000012b874 W ModelGeometryLayout::operator=(ModelGeometryLayout const&)
00000000001400f4 W VfsLocalDiskManager::VfsLocalDiskManager()
00000000002592e4 W GfxDescriptorSetData::GfxDescriptorSetData()
00000000001ca47c T ImDrawListSharedData::SetCircleTessellationMaxError(float)
00000000001ca2e4 T ImDrawListSharedData::ImDrawListSharedData()
00000000001ca2e4 T ImDrawListSharedData::ImDrawListSharedData()
00000000001c1e44 W ImGuiDockPreviewData::ImGuiDockPreviewData()
00000000001c1fcc W ImGuiDockPreviewData::~ImGuiDockPreviewData()
00000000001bd1d0 W ImGuiListClipperData::Reset(ImGuiListClipper*)
00000000001bd100 W ImGuiListClipperData::ImGuiListClipperData()
00000000001bd13c W ImGuiListClipperData::~ImGuiListClipperData()
00000000001c37a4 W ImGuiPlatformMonitor::ImGuiPlatformMonitor()
00000000001bf600 W ImGuiSettingsHandler::ImGuiSettingsHandler()
00000000001c0730 W ImGuiWindowStackData::ImGuiWindowStackData()
00000000001442a8 T MemBumpAllocatorBase::Initialize(unsigned long, unsigned long, bool)
00000000001448f8 T MemBumpAllocatorBase::Free(void*, unsigned int)
0000000000144910 T MemBumpAllocatorBase::Reset()
00000000001445b8 T MemBumpAllocatorBase::Malloc(unsigned long, unsigned int)
00000000001445f0 T MemBumpAllocatorBase::Realloc(void*, unsigned long, unsigned int)
0000000000144420 T MemBumpAllocatorBase::Release()
0000000000144564 T MemBumpAllocatorBase::CommitAll()
000000000017f83c W MemBumpAllocatorBase::MemBumpAllocatorBase()
0000000000230490 T VmaCurrentBudgetData::AddAllocation(unsigned int, unsigned long)
00000000002304f0 T VmaCurrentBudgetData::RemoveAllocation(unsigned int, unsigned long)
000000000023039c T VmaCurrentBudgetData::VmaCurrentBudgetData()
000000000023039c T VmaCurrentBudgetData::VmaCurrentBudgetData()
0000000000255478 W VmaCurrentBudgetData::~VmaCurrentBudgetData()
0000000000231888 T VmaDeviceMemoryBlock::BindImageMemory(VmaAllocator_T*, VmaAllocation_T*, unsigned long, VkImage_T*, void const*)
0000000000231194 T VmaDeviceMemoryBlock::CheckCorruption(VmaAllocator_T*)
00000000002315f8 T VmaDeviceMemoryBlock::BindBufferMemory(VmaAllocator_T*, VmaAllocation_T*, unsigned long, VkBuffer_T*, void const*)
0000000000231488 T VmaDeviceMemoryBlock::WriteMagicValueAfterAllocation(VmaAllocator_T*, unsigned long, unsigned long)
000000000023153c T VmaDeviceMemoryBlock::ValidateMagicValueAfterAllocation(VmaAllocator_T*, unsigned long, unsigned long)
0000000000231224 T VmaDeviceMemoryBlock::Map(VmaAllocator_T*, unsigned int, void**)
0000000000230c34 T VmaDeviceMemoryBlock::Init(VmaAllocator_T*, VmaPool_T*, unsigned int, VkDeviceMemory_T*, unsigned long, unsigned int, unsigned int, unsigned long)
0000000000231390 T VmaDeviceMemoryBlock::Unmap(VmaAllocator_T*, unsigned int)
0000000000230de8 T VmaDeviceMemoryBlock::Destroy(VmaAllocator_T*)
0000000000231054 T VmaDeviceMemoryBlock::PostFree(VmaAllocator_T*)
0000000000230ffc T VmaDeviceMemoryBlock::PostAlloc(VmaAllocator_T*)
0000000000230b60 T VmaDeviceMemoryBlock::VmaDeviceMemoryBlock(VmaAllocator_T*)
0000000000230b60 T VmaDeviceMemoryBlock::VmaDeviceMemoryBlock(VmaAllocator_T*)
0000000000230bbc T VmaDeviceMemoryBlock::~VmaDeviceMemoryBlock()
0000000000230bbc T VmaDeviceMemoryBlock::~VmaDeviceMemoryBlock()
0000000000259b9c W VmaMappingHysteresis::PostMinorCounter()
0000000000254928 W VmaMappingHysteresis::PostMap()
0000000000254850 W VmaMappingHysteresis::PostFree()
0000000000254804 W VmaMappingHysteresis::PostAlloc()
00000000002549b4 W VmaMappingHysteresis::PostUnmap()
0000000000254784 W VmaMappingHysteresis::VmaMappingHysteresis()
0000000000140128 W vfsRemoteDiskManager::vfsRemoteDiskManager()
000000000025b54c W GfxPipelineLayoutData::GfxPipelineLayoutData()
00000000001e40d0 W ImFontAtlasCustomRect::ImFontAtlasCustomRect()
00000000001c39f8 W ImGuiComboPreviewData::ImGuiComboPreviewData()
00000000001c5ab8 W ImGuiDockNodeSettings::ImGuiDockNodeSettings()
00000000001c530c W ImGuiDockNodeTreeInfo::ImGuiDockNodeTreeInfo()
00000000001bd29c W ImGuiListClipperRange::FromIndices(int, int)
00000000001bd3a8 W ImGuiListClipperRange::FromPositions(float, float, int, int)
00000000001c40f0 W ImGuiSizeCallbackData::ImGuiSizeCallbackData()
000000000013b910 W RemoteServicesContext::RemoteServicesContext()
000000000022ee58 T VmaBlockMetadata_TLSF::CheckBlock(VmaBlockMetadata_TLSF::Block&, unsigned int, unsigned long, unsigned long, VmaSuballocationType, VmaAllocationRequest*)
000000000022fdb4 T VmaBlockMetadata_TLSF::MergeBlock(VmaBlockMetadata_TLSF::Block*, VmaBlockMetadata_TLSF::Block*)
000000000022f210 T VmaBlockMetadata_TLSF::CheckCorruption(void const*)
000000000022fa4c T VmaBlockMetadata_TLSF::InsertFreeBlock(VmaBlockMetadata_TLSF::Block*)
000000000022f824 T VmaBlockMetadata_TLSF::RemoveFreeBlock(VmaBlockMetadata_TLSF::Block*)
000000000022fe94 T VmaBlockMetadata_TLSF::GetAllocationInfo(VmaAllocHandle_T*, VmaVirtualAllocationInfo&)
00000000002301fc T VmaBlockMetadata_TLSF::SetAllocationUserData(VmaAllocHandle_T*, void*)
000000000022e6a0 T VmaBlockMetadata_TLSF::CreateAllocationRequest(unsigned long, unsigned long, bool, VmaSuballocationType, unsigned int, VmaAllocationRequest*)
000000000022fc1c T VmaBlockMetadata_TLSF::Free(VmaAllocHandle_T*)
000000000022db00 T VmaBlockMetadata_TLSF::Init(unsigned long)
000000000022f2b0 T VmaBlockMetadata_TLSF::Alloc(VmaAllocationRequest const&, VmaSuballocationType, void*)
000000000025416c W VmaBlockMetadata_TLSF::Block::MarkFree()
0000000000254184 W VmaBlockMetadata_TLSF::Block::NextFree()
000000000025419c W VmaBlockMetadata_TLSF::Block::PrevFree()
00000000002542dc W VmaBlockMetadata_TLSF::Block::UserData()
00000000002542c4 W VmaBlockMetadata_TLSF::Block::MarkTaken()
000000000023012c T VmaBlockMetadata_TLSF::Clear()
000000000022d928 T VmaBlockMetadata_TLSF::VmaBlockMetadata_TLSF(VkAllocationCallbacks const*, unsigned long, bool)
000000000022d928 T VmaBlockMetadata_TLSF::VmaBlockMetadata_TLSF(VkAllocationCallbacks const*, unsigned long, bool)
000000000022dac8 T VmaBlockMetadata_TLSF::~VmaBlockMetadata_TLSF()
000000000022d9d8 T VmaBlockMetadata_TLSF::~VmaBlockMetadata_TLSF()
000000000022d9d8 T VmaBlockMetadata_TLSF::~VmaBlockMetadata_TLSF()
000000000025ec94 W VmaPoolListItemTraits::AccessNext(VmaPool_T*)
000000000025ec7c W VmaPoolListItemTraits::AccessPrev(VmaPool_T*)
000000000025ec64 W VmaPoolListItemTraits::GetNext(VmaPool_T const*)
000000000025ecac W VmaPoolListItemTraits::GetPrev(VmaPool_T const*)
0000000000145634 T MemThreadSafeAllocator::SetAllocator(Allocator*)
0000000000145784 T MemThreadSafeAllocator::Free(void*, unsigned int)
0000000000145654 T MemThreadSafeAllocator::Malloc(unsigned long, unsigned int)
00000000001456e8 T MemThreadSafeAllocator::Realloc(void*, unsigned long, unsigned int)
00000000001455d8 T MemThreadSafeAllocator::MemThreadSafeAllocator(Allocator*)
00000000001455d8 T MemThreadSafeAllocator::MemThreadSafeAllocator(Allocator*)
00000000000f4e1c W MemThreadSafeAllocator::MemThreadSafeAllocator()
00000000001390c4 T SettingsJunkyardParser::ParseSetting(unsigned int, char const*, char const*)
0000000000139b00 W SettingsJunkyardParser::SaveCategory(unsigned int, Array<SettingsKeyValue, 8u>&)
0000000000139b18 W SettingsJunkyardParser::SettingsJunkyardParser()
000000000025560c W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::Front()
0000000000255740 W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::Remove(VmaPool_T*)
0000000000255624 W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::GetNext(VmaPool_T const*)
00000000002556a0 W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::PushBack(VmaPool_T*)
00000000002553bc W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::VmaIntrusiveLinkedList()
0000000000255468 W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::~VmaIntrusiveLinkedList()
00000000002533f8 W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::Front()
00000000002535cc W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::Remove(VmaAllocation_T*)
0000000000253410 W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::GetNext(VmaAllocation_T const*)
00000000002534f4 W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::PushBack(VmaAllocation_T*)
0000000000259c04 W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::VmaIntrusiveLinkedList()
000000000025333c W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::~VmaIntrusiveLinkedList()
000000000024be54 T GfxDynamicUniformBuffer::Flush(GfxDyanmicUniformBufferRange const*, unsigned int)
0000000000150278 T HashMurmur32Incremental::AddCStringArray(char const**, unsigned int)
000000000012c4f4 W HashMurmur32Incremental& HashMurmur32Incremental::Add<ModelMaterial>(ModelMaterial const*, unsigned int)
000000000012c56c W HashMurmur32Incremental& HashMurmur32Incremental::Add<ImageLoadParams>(ImageLoadParams const*, unsigned int)
000000000025b474 W HashMurmur32Incremental& HashMurmur32Incremental::Add<GfxPushConstantDesc>(GfxPushConstantDesc const*, unsigned int)
000000000010e8e4 W HashMurmur32Incremental& HashMurmur32Incremental::Add<GfxDescriptorBindingDesc>(GfxDescriptorBindingDesc const*, unsigned int)
0000000000258db8 W HashMurmur32Incremental& HashMurmur32Incremental::Add<VkDescriptorSetLayoutBinding>(VkDescriptorSetLayoutBinding const*, unsigned int)
000000000010e8a0 W HashMurmur32Incremental& HashMurmur32Incremental::Add<Handle<GfxDescriptorSetT> >(Handle<GfxDescriptorSetT> const*, unsigned int)
000000000025b430 W HashMurmur32Incremental& HashMurmur32Incremental::Add<Handle<GfxDescriptorSetLayoutT> >(Handle<GfxDescriptorSetLayoutT> const*, unsigned int)
00000000000f3e4c W HashMurmur32Incremental& HashMurmur32Incremental::Add<char>(char const*, unsigned int)
00000000000f4584 W HashMurmur32Incremental& HashMurmur32Incremental::Add<unsigned int>(unsigned int const*, unsigned int)
00000000000f3e90 W HashMurmur32Incremental& HashMurmur32Incremental::Add<unsigned long>(unsigned long const*, unsigned int)
0000000000150320 T HashMurmur32Incremental::Hash()
0000000000150000 T HashMurmur32Incremental::AddAny(void const*, unsigned int)
000000000014ffd4 T HashMurmur32Incremental::HashMurmur32Incremental(unsigned int)
000000000014ffd4 T HashMurmur32Incremental::HashMurmur32Incremental(unsigned int)
0000000000139bb4 W SettingsCustomCallbacks::SettingsCustomCallbacks()
0000000000139a14 W SettingsJunkyardContext::SettingsJunkyardContext()
000000000022c690 T VmaBlockMetadata_Linear::CheckCorruption(void const*)
000000000022cee4 T VmaBlockMetadata_Linear::CleanupAfterFree()
000000000022d2d0 T VmaBlockMetadata_Linear::GetAllocationInfo(VmaAllocHandle_T*, VmaVirtualAllocationInfo&)
000000000022d640 T VmaBlockMetadata_Linear::SetAllocationUserData(VmaAllocHandle_T*, void*)
0000000000253958 W VmaBlockMetadata_Linear::AccessSuballocations1st()
00000000002539bc W VmaBlockMetadata_Linear::AccessSuballocations2nd()
000000000022bc54 T VmaBlockMetadata_Linear::CreateAllocationRequest(unsigned long, unsigned long, bool, VmaSuballocationType, unsigned int, VmaAllocationRequest*)
000000000022c0c0 T VmaBlockMetadata_Linear::CreateAllocationRequest_LowerAddress(unsigned long, unsigned long, VmaSuballocationType, unsigned int, VmaAllocationRequest*)
000000000022bd58 T VmaBlockMetadata_Linear::CreateAllocationRequest_UpperAddress(unsigned long, unsigned long, VmaSuballocationType, unsigned int, VmaAllocationRequest*)
000000000022cb44 T VmaBlockMetadata_Linear::Free(VmaAllocHandle_T*)
000000000022a7c0 T VmaBlockMetadata_Linear::Init(unsigned long)
000000000022c840 T VmaBlockMetadata_Linear::Alloc(VmaAllocationRequest const&, VmaSuballocationType, void*)
000000000022d5e8 T VmaBlockMetadata_Linear::Clear()
000000000022a6f0 T VmaBlockMetadata_Linear::VmaBlockMetadata_Linear(VkAllocationCallbacks const*, unsigned long, bool)
000000000022a6f0 T VmaBlockMetadata_Linear::VmaBlockMetadata_Linear(VkAllocationCallbacks const*, unsigned long, bool)
0000000000259808 W VmaBlockMetadata_Linear::~VmaBlockMetadata_Linear()
00000000002597b8 W VmaBlockMetadata_Linear::~VmaBlockMetadata_Linear()
00000000001d63d0 T ImFontGlyphRangesBuilder::BuildRanges(ImVector<unsigned short>*)
00000000001e5304 W ImFontGlyphRangesBuilder::SetBit(unsigned long)
00000000001e43ec W ImFontGlyphRangesBuilder::AddChar(unsigned short)
00000000001d62a8 T ImFontGlyphRangesBuilder::AddText(char const*, char const*)
00000000001d6350 T ImFontGlyphRangesBuilder::AddRanges(unsigned short const*)
000000000021d848 W ImGuiPlotArrayGetterData::ImGuiPlotArrayGetterData(float const*, int)
00000000001f3600 W ImGuiTableColumnSettings::ImGuiTableColumnSettings()
00000000001f3a08 W ImGuiTableColumnSortSpecs::ImGuiTableColumnSortSpecs()
0000000000255da4 W GfxCommandBufferThreadData::GfxCommandBufferThreadData()
0000000000206ef8 T ImGuiInputTextCallbackData::DeleteChars(int, int)
000000000020703c T ImGuiInputTextCallbackData::InsertChars(int, char const*, char const*)
0000000000206ecc T ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()
0000000000206ecc T ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()
0000000000229a14 T VmaDedicatedAllocationList::Unregister(VmaAllocation_T*)
0000000000229880 T VmaDedicatedAllocationList::AddStatistics(VmaStatistics&)
0000000000229778 T VmaDedicatedAllocationList::AddDetailedStatistics(VmaDetailedStatistics&)
000000000022995c T VmaDedicatedAllocationList::IsEmpty()
00000000002299bc T VmaDedicatedAllocationList::Register(VmaAllocation_T*)
0000000000229694 T VmaDedicatedAllocationList::Validate()
0000000000255310 W VmaDedicatedAllocationList::VmaDedicatedAllocationList()
0000000000229634 T VmaDedicatedAllocationList::~VmaDedicatedAllocationList()
0000000000229634 T VmaDedicatedAllocationList::~VmaDedicatedAllocationList()
000000000012d08c W GfxVertexInputAttributeDesc::GfxVertexInputAttributeDesc(GfxVertexInputAttributeDesc const&)
000000000012c350 W GfxVertexInputAttributeDesc::GfxVertexInputAttributeDesc()
000000000012c634 W GfxVertexInputAttributeDesc::operator=(GfxVertexInputAttributeDesc const&)
0000000000236c44 T VmaDefragmentationContext_T::GetMoveData(VmaAllocHandle_T*, VmaBlockMetadata*)
0000000000236d00 T VmaDefragmentationContext_T::CheckCounters(unsigned long)
0000000000254f38 W VmaDefragmentationContext_T::StateBalanced::StateBalanced()
0000000000254f84 W VmaDefragmentationContext_T::StateExtensive::StateExtensive()
0000000000236e3c T VmaDefragmentationContext_T::AllocInOtherBlock(unsigned long, unsigned long, VmaDefragmentationContext_T::MoveAllocationData&, VmaBlockVector&)
00000000002350f4 T VmaDefragmentationContext_T::DefragmentPassEnd(VmaDefragmentationPassMoveInfo&)
0000000000236d74 T VmaDefragmentationContext_T::IncrementCounters(unsigned long)
00000000002551f8 W VmaDefragmentationContext_T::MoveAllocationData::MoveAllocationData()
0000000000234ee0 T VmaDefragmentationContext_T::ReallocWithinBlock(VmaBlockVector&, VmaDeviceMemoryBlock*)
0000000000234b84 T VmaDefragmentationContext_T::DefragmentPassBegin(VmaDefragmentationPassMoveInfo&)
0000000000237084 T VmaDefragmentationContext_T::MoveDataToFreeBlocks(VmaSuballocationType, VmaBlockVector&, unsigned long, bool&, bool&, bool&)
0000000000234df0 T VmaDefragmentationContext_T::ComputeDefragmentation(VmaBlockVector&, unsigned long)
0000000000236f5c T VmaDefragmentationContext_T::UpdateVectorStatistics(VmaBlockVector&, VmaDefragmentationContext_T::StateBalanced&)
0000000000235dcc T VmaDefragmentationContext_T::ComputeDefragmentation_Fast(VmaBlockVector&)
0000000000236360 T VmaDefragmentationContext_T::ComputeDefragmentation_Full(VmaBlockVector&)
0000000000235f40 T VmaDefragmentationContext_T::ComputeDefragmentation_Balanced(VmaBlockVector&, unsigned long, bool)
0000000000236614 T VmaDefragmentationContext_T::ComputeDefragmentation_Extensive(VmaBlockVector&, unsigned long)
0000000000255b6c W VmaDefragmentationContext_T::GetStats(VmaDefragmentationStats&)
00000000002346ec T VmaDefragmentationContext_T::VmaDefragmentationContext_T(VmaAllocator_T*, VmaDefragmentationInfo const&)
00000000002346ec T VmaDefragmentationContext_T::VmaDefragmentationContext_T(VmaAllocator_T*, VmaDefragmentationInfo const&)
00000000002349b8 T VmaDefragmentationContext_T::~VmaDefragmentationContext_T()
00000000002349b8 T VmaDefragmentationContext_T::~VmaDefragmentationContext_T()
00000000002558ec W AtomicTransactionalIncrement<unsigned int>::Commit()
000000000025586c W AtomicTransactionalIncrement<unsigned int>::Increment(std::__ndk1::atomic<unsigned int>*)
0000000000255854 W AtomicTransactionalIncrement<unsigned int>::AtomicTransactionalIncrement()
0000000000255904 W AtomicTransactionalIncrement<unsigned int>::~AtomicTransactionalIncrement()
00000000002305c0 T VmaAllocationObjectAllocator::Free(VmaAllocation_T*)
0000000000254d88 W VmaAllocation_T* VmaAllocationObjectAllocator::Allocate<bool const&>(bool const&)
0000000000255530 W VmaAllocation_T* VmaAllocationObjectAllocator::Allocate<bool&>(bool&)
0000000000255350 W VmaAllocationObjectAllocator::VmaAllocationObjectAllocator(VkAllocationCallbacks const*)
00000000002554a0 W VmaAllocationObjectAllocator::~VmaAllocationObjectAllocator()
00000000001c58fc W ImGuiDockContextPruneNodeData::ImGuiDockContextPruneNodeData()
000000000022a0d4 T VmaBlockBufferImageGranularity::AllocPages(unsigned char, unsigned long, unsigned long)
0000000000229bac T VmaBlockBufferImageGranularity::Init(VkAllocationCallbacks const*, unsigned long)
000000000022a2c8 T VmaBlockBufferImageGranularity::Clear()
0000000000229c8c T VmaBlockBufferImageGranularity::Destroy(VkAllocationCallbacks const*)
000000000022a174 T VmaBlockBufferImageGranularity::AllocPage(VmaBlockBufferImageGranularity::RegionInfo&, unsigned char)
000000000022a1d0 T VmaBlockBufferImageGranularity::FreePages(unsigned long, unsigned long)
0000000000229b3c T VmaBlockBufferImageGranularity::VmaBlockBufferImageGranularity(unsigned long)
0000000000229b3c T VmaBlockBufferImageGranularity::VmaBlockBufferImageGranularity(unsigned long)
0000000000229b64 T VmaBlockBufferImageGranularity::~VmaBlockBufferImageGranularity()
0000000000229b64 T VmaBlockBufferImageGranularity::~VmaBlockBufferImageGranularity()
000000000014ec50 W DebugFiberProtectorThreadContext::DebugFiberProtectorThreadContext()
000000000014ec78 W DebugFiberProtectorThreadContext::~DebugFiberProtectorThreadContext()
000000000025d808 W VmaDedicatedAllocationListItemTraits::AccessNext(VmaAllocation_T*)
000000000025d7f0 W VmaDedicatedAllocationListItemTraits::AccessPrev(VmaAllocation_T*)
000000000025d7d8 W VmaDedicatedAllocationListItemTraits::GetNext(VmaAllocation_T const*)
000000000025d820 W VmaDedicatedAllocationListItemTraits::GetPrev(VmaAllocation_T const*)
000000000012c7bc W AABB::AABB(Float3, Float3)
000000000012c800 W AABB::AABB(float const*, float const*)
000000000017c738 W AABB::AABB(float, float, float, float, float, float)
000000000013fd4c W Blob::SetAllocator(Allocator*)
00000000000f69e0 W Blob::SetGrowPolicy(Blob::GrowPolicy, unsigned int)
000000000010dfcc W Blob::WriteStringBinary(char const*, unsigned int)
00000000000f4258 W Blob::Free()
000000000025b004 W Blob::Reset()
00000000000f6a80 W Blob::Write(void const*, unsigned long)
000000000012c23c W unsigned long Blob::Write<ModelLoadParams>(ModelLoadParams const&)
000000000013fda4 W unsigned long Blob::Write<VfsFlags>(VfsFlags const&)
000000000025b040 W unsigned long Blob::Write<VkBuffer_T*>(VkBuffer_T* const&)
000000000025b33c W unsigned long Blob::Write<VkImage_T*>(VkImage_T* const&)
0000000000140998 W unsigned long Blob::Write<char>(char const&)
00000000000f6a4c W unsigned long Blob::Write<unsigned int>(unsigned int const&)
0000000000140778 W unsigned long Blob::Write<unsigned long>(unsigned long const&)
000000000010f10c W Blob::Attach(void*, unsigned long, Allocator*)
00000000000f5160 W Blob::Detach(void**, unsigned long*)
00000000001406a8 W Blob::Reserve(void*, unsigned long)
000000000010e418 W Blob::Reserve(unsigned long)
000000000010e55c W Blob::SetSize(unsigned long)
000000000025af6c W Blob::SetOffset(unsigned long)
00000000000f699c W Blob::Blob(Allocator*)
000000000010e360 W Blob::Blob()
000000000017888c T File::Open(char const*, FileOpenFlags)
0000000000178b80 T File::Read(void*, unsigned long)
0000000000176810 W unsigned int File::Read<char>(char*, unsigned int)
0000000000178d48 T File::Seek(unsigned long, FileSeekMode)
0000000000178b34 T File::Close()
0000000000178c84 T File::Write(void const*, unsigned long)
0000000000154a24 W unsigned int File::Write<char>(char*, unsigned int)
0000000000178850 T File::File()
0000000000178850 T File::File()
000000000025d710 W Int2::Int2(int, int)
00000000001689a4 W Mat3::Mat3(Float3, Float3, Float3)
0000000000168ad4 W Mat3::Mat3(float const*, float const*, float const*)
0000000000168878 W Mat3::Mat3(float, float, float, float, float, float, float, float, float)
00000000001371cc W Mat4::Mat4(Float4, Float4, Float4, Float4)
0000000000137308 W Mat4::Mat4(float const*, float const*, float const*, float const*)
0000000000137078 W Mat4::Mat4(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)
000000000025d73c W Pair<Int2, Int2>::Pair(Int2 const&, Int2 const&)
000000000010f394 W Pair<AssetImage*, unsigned int>::Pair(AssetImage* const&, unsigned int const&)
000000000014e7fc W Pair<bool (*)(void*), void*>::Pair(bool (* const&)(void*), void* const&)
0000000000160dcc W Pair<void (*)(LogEntry const&, void*), void*>::Pair(void (* const&)(LogEntry const&, void*), void* const&)
000000000015957c W Pair<void*, unsigned int>::Pair(void* const&, unsigned int const&)
000000000013fadc W Path::GetAbsolute()
00000000000f3fb0 W Path::GetFileName()
00000000000f3f58 W Path::GetDirectory()
000000000013fb34 W Path::ConvertToUnix()
00000000000f3f00 W Path::JoinUnix(Path const&, Path const&)
00000000000f3ed4 W Path::Path(char const*)
0000000000140b40 W Path::Path(String<260u> const&)
000000000012edb4 W Path::Path(Path const&)
00000000000f540c W Path::Path()
000000000012cf00 W Path::operator=(Path&&)
00000000001405e0 W Path::operator=(Path const&)
000000000012be74 W Quat::Quat(float const*)
000000000013746c W Quat::Quat(float, float, float, float)
000000000012c098 W Span<Model>::Ptr()
000000000012c06c W Span<Model>::Span(Model*, unsigned int)
000000000012b78c W Span<Model>::Span()
0000000000173a74 W Span<char*>::Span(char**, unsigned int)
000000000025ad08 W Array<GfxGarbage, 8u>::RemoveAndSwap(unsigned int)
00000000002567a8 W Array<GfxGarbage, 8u>::GetMemoryRequirement(unsigned int)
000000000025811c W Array<GfxGarbage, 8u>::Push(GfxGarbage const&)
00000000002606b4 W Array<GfxGarbage, 8u>::Push()
00000000002607b0 W Array<GfxGarbage, 8u>::Reserve(unsigned int)
00000000002567dc W Array<GfxGarbage, 8u>::Reserve(unsigned int, void*, unsigned long)
000000000025a1f8 W Array<GfxGarbage, 8u>::Array(Allocator*)
000000000025a08c W Array<GfxGarbage, 8u>::Array()
000000000025ac98 W Array<GfxGarbage, 8u>::operator[](unsigned int)
000000000014029c W Array<VfsRequest, 8u>::SetAllocator(Allocator*)
00000000001403ec W Array<VfsRequest, 8u>::Pop(unsigned int)
0000000000140910 W Array<VfsRequest, 8u>::Free()
000000000013fd08 W Array<VfsRequest, 8u>::Push(VfsRequest const&)
0000000000140e88 W Array<VfsRequest, 8u>::Push()
000000000013eb1c t unsigned int Array<VfsRequest, 8u>::FindIf<vfsReadFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6::operator()(char const*, VfsRequest*) const::'lambda'(VfsRequest const&)>(vfsReadFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6::operator()(char const*, VfsRequest*) const::'lambda'(VfsRequest const&))
000000000013ee60 t unsigned int Array<VfsRequest, 8u>::FindIf<vfsWriteFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_7::operator()(char const*, VfsRequest*) const::'lambda'(VfsRequest const&)>(vfsWriteFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_7::operator()(char const*, VfsRequest*) const::'lambda'(VfsRequest const&))
0000000000140f8c W Array<VfsRequest, 8u>::Reserve(unsigned int)
0000000000140344 W Array<VfsRequest, 8u>::PopFirst()
0000000000140218 W Array<VfsRequest, 8u>::Array(Allocator*)
00000000001401e4 W Array<VfsRequest, 8u>::Array()
00000000000f3954 W Array<AssetGarbage, 8u>::GetMemoryRequirement(unsigned int)
00000000000f4c98 W Array<AssetGarbage, 8u>::end()
00000000000f6564 W Array<AssetGarbage, 8u>::Push(AssetGarbage const&)
00000000000f6e64 W Array<AssetGarbage, 8u>::Push()
00000000000f4d3c W Array<AssetGarbage, 8u>::Clear()
00000000000f4c68 W Array<AssetGarbage, 8u>::begin()
00000000000f6f68 W Array<AssetGarbage, 8u>::Reserve(unsigned int)
00000000000f398c W Array<AssetGarbage, 8u>::Reserve(unsigned int, void*, unsigned long)
00000000000f7cc8 W Array<AssetGarbage, 8u>::Iterator::Iterator(AssetGarbage*)
00000000000f4d04 W Array<AssetGarbage, 8u>::Iterator::operator*()
00000000000f4cd8 W Array<AssetGarbage, 8u>::Iterator::operator!=(Array<AssetGarbage, 8u>::Iterator)
00000000000f4d1c W Array<AssetGarbage, 8u>::Iterator::operator++()
00000000000f5134 W Array<AssetGarbage, 8u>::Array(Allocator*)
00000000000f4f94 W Array<AssetGarbage, 8u>::Array()
0000000000138e30 W Array<ClipboardVar, 32u>::Push(ClipboardVar const&)
0000000000138fc8 W Array<ClipboardVar, 32u>::Push()
0000000000138e78 W Array<ClipboardVar, 32u>::Reserve(unsigned int)
0000000000138bd0 W Array<ClipboardVar, 32u>::Reserve(unsigned int, void*, unsigned long)
0000000000138b70 W Array<ClipboardVar, 32u>::Array(Allocator*)
0000000000138cf0 W Array<ClipboardVar, 32u>::operator[](unsigned int)
0000000000138b9c W Array<ClipboardVar, 8u>::GetMemoryRequirement(unsigned int)
000000000027653c W Array<ConCustomVar, 8u>::SetAllocator(Allocator*)
0000000000276778 W Array<ConCustomVar, 8u>::Free()
0000000000276594 W Array<ConCustomVar, 8u>::Push(ConCustomVar const&)
0000000000276938 W Array<ConCustomVar, 8u>::Push()
00000000002760b8 t unsigned int Array<ConCustomVar, 8u>::FindIf<conExecute(char const*, char*, unsigned int)::$_0::operator()(char const*) const::'lambda'(ConCustomVar const&)>(conExecute(char const*, char*, unsigned int)::$_0::operator()(char const*) const::'lambda'(ConCustomVar const&))
0000000000276a84 W Array<ConCustomVar, 8u>::Reserve(unsigned int)
00000000002768dc W Array<ConCustomVar, 8u>::Array(Allocator*)
000000000027687c W Array<ConCustomVar, 8u>::Array()
00000000002765f0 W Array<ConCustomVar, 8u>::operator[](unsigned int)
000000000026036c W Array<GfxImageData, 32u>::Free()
0000000000260cfc W Array<GfxImageData, 32u>::Push(GfxImageData const&)
0000000000260e94 W Array<GfxImageData, 32u>::Push()
0000000000260d44 W Array<GfxImageData, 32u>::Reserve(unsigned int)
000000000025f960 W Array<GfxImageData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025a400 W Array<GfxImageData, 32u>::Array(Allocator*)
000000000025f768 W Array<GfxImageData, 32u>::operator[](unsigned int)
000000000025f92c W Array<GfxImageData, 8u>::GetMemoryRequirement(unsigned int)
000000000014c800 W Array<MemTempStack, 8u>::end()
000000000014c8a4 W Array<MemTempStack, 8u>::Free()
000000000014c3d8 W Array<MemTempStack, 8u>::Last()
000000000014c470 W Array<MemTempStack, 8u>::Push(MemTempStack const&)
000000000014cd68 W Array<MemTempStack, 8u>::Push()
000000000014c7d0 W Array<MemTempStack, 8u>::begin()
000000000014c4b8 W Array<MemTempStack, 8u>::PopLast()
000000000014ce6c W Array<MemTempStack, 8u>::Reserve(unsigned int)
000000000014d228 W Array<MemTempStack, 8u>::Iterator::Iterator(MemTempStack*)
000000000014c86c W Array<MemTempStack, 8u>::Iterator::operator*()
000000000014c840 W Array<MemTempStack, 8u>::Iterator::operator!=(Array<MemTempStack, 8u>::Iterator)
000000000014c884 W Array<MemTempStack, 8u>::Iterator::operator++()
000000000014cac4 W Array<MemTempStack, 8u>::Array(Allocator*)
000000000014ca90 W Array<MemTempStack, 8u>::Array()
000000000014c69c W Array<MemTempStack, 8u>::operator[](unsigned int)
00000000002602e4 W Array<GfxBufferData, 32u>::Free()
00000000002609b0 W Array<GfxBufferData, 32u>::Push(GfxBufferData const&)
0000000000260b48 W Array<GfxBufferData, 32u>::Push()
00000000002609f8 W Array<GfxBufferData, 32u>::Reserve(unsigned int)
000000000025f850 W Array<GfxBufferData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025a398 W Array<GfxBufferData, 32u>::Array(Allocator*)
000000000025ff10 W Array<GfxBufferData, 32u>::operator[](unsigned int)
000000000025f818 W Array<GfxBufferData, 8u>::GetMemoryRequirement(unsigned int)
000000000013fdd8 W Array<VfsMountPoint, 8u>::SetAllocator(Allocator*)
000000000013fee0 W Array<VfsMountPoint, 8u>::Free()
000000000013fc38 W Array<VfsMountPoint, 8u>::Push(VfsMountPoint const&)
0000000000140bd8 W Array<VfsMountPoint, 8u>::Push()
000000000013c06c t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsMountLocal(char const*, char const*, bool)::$_0>(vfsMountLocal(char const*, char const*, bool)::$_0)
000000000013c34c t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsMountRemote(char const*, bool)::$_1>(vfsMountRemote(char const*, bool)::$_1)
000000000013dcd8 t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsMountPackageBundle(char const*)::$_2>(vfsMountPackageBundle(char const*)::$_2)
000000000013e46c t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsFindMount(char const*)::$_5>(vfsFindMount(char const*)::$_5)
000000000013f054 t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsDiskResolvePath(char*, unsigned int, char const*, VfsFlags)::$_3>(vfsDiskResolvePath(char*, unsigned int, char const*, VfsFlags)::$_3)
000000000013f330 t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsPackageBundleReadFile(char const*, VfsFlags, Allocator*)::$_4>(vfsPackageBundleReadFile(char const*, VfsFlags, Allocator*)::$_4)
000000000013ef28 t unsigned int Array<VfsMountPoint, 8u>::FindIf<vfsMonitorChangesClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_8>(vfsMonitorChangesClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_8)
0000000000140d38 W Array<VfsMountPoint, 8u>::Reserve(unsigned int)
00000000001401b8 W Array<VfsMountPoint, 8u>::Array(Allocator*)
00000000001400c0 W Array<VfsMountPoint, 8u>::Array()
000000000013fc90 W Array<VfsMountPoint, 8u>::operator[](unsigned int)
00000000002764e4 W Array<ConCommandDesc, 8u>::SetAllocator(Allocator*)
00000000002766f0 W Array<ConCommandDesc, 8u>::Free()
0000000000276800 W Array<ConCommandDesc, 8u>::Push(ConCommandDesc const&)
0000000000276bd4 W Array<ConCommandDesc, 8u>::Push()
00000000002758d8 t unsigned int Array<ConCommandDesc, 8u>::FindIf<conExecute(char const*, char*, unsigned int)::$_1>(conExecute(char const*, char*, unsigned int)::$_1)
0000000000276010 t unsigned int Array<ConCommandDesc, 8u>::FindIf<conRegisterCommand(ConCommandDesc const&)::$_4>(conRegisterCommand(ConCommandDesc const&)::$_4)
0000000000276cd8 W Array<ConCommandDesc, 8u>::Reserve(unsigned int)
00000000002768b0 W Array<ConCommandDesc, 8u>::Array(Allocator*)
0000000000276848 W Array<ConCommandDesc, 8u>::Array()
0000000000276454 W Array<ConCommandDesc, 8u>::operator[](unsigned int)
000000000012ca70 W Array<AssetDependency, 8u>::Ptr()
000000000012ccc8 W Array<AssetDependency, 8u>::Push()
000000000012ca88 W Array<AssetDependency, 8u>::Detach(AssetDependency**, unsigned int*)
000000000012c8c0 W Array<AssetDependency, 8u>::Reserve(unsigned int)
000000000012c894 W Array<AssetDependency, 8u>::Array(Allocator*)
000000000026047c W Array<GfxPipelineData, 32u>::Free()
0000000000261040 W Array<GfxPipelineData, 32u>::Push(GfxPipelineData const&)
00000000002611d8 W Array<GfxPipelineData, 32u>::Push()
0000000000261088 W Array<GfxPipelineData, 32u>::Reserve(unsigned int)
000000000025fc90 W Array<GfxPipelineData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025a4d0 W Array<GfxPipelineData, 32u>::Array(Allocator*)
000000000026006c W Array<GfxPipelineData, 32u>::operator[](unsigned int)
000000000025fc58 W Array<GfxPipelineData, 8u>::GetMemoryRequirement(unsigned int)
00000000000f35a0 W Array<AssetTypeManager, 8u>::GetMemoryRequirement(unsigned int)
00000000000f486c W Array<AssetTypeManager, 8u>::Push(AssetTypeManager const&)
00000000000f76a8 W Array<AssetTypeManager, 8u>::Push()
00000000000f1d44 t unsigned int Array<AssetTypeManager, 8u>::FindIf<assetRegister(AssetTypeDesc const&)::$_2>(assetRegister(AssetTypeDesc const&)::$_2)
00000000000f1e80 t unsigned int Array<AssetTypeManager, 8u>::FindIf<assetUnregister(unsigned int)::$_3>(assetUnregister(unsigned int)::$_3)
00000000000f0d20 t unsigned int Array<AssetTypeManager, 8u>::FindIf<assetLoad(AssetLoadParams const&, void const*)::$_1>(assetLoad(AssetLoadParams const&, void const*)::$_1)
00000000000f7814 W Array<AssetTypeManager, 8u>::Reserve(unsigned int)
00000000000f35d8 W Array<AssetTypeManager, 8u>::Reserve(unsigned int, void*, unsigned long)
00000000000f5038 W Array<AssetTypeManager, 8u>::Array(Allocator*)
00000000000f4ec4 W Array<AssetTypeManager, 8u>::Array()
00000000000f3ccc W Array<AssetTypeManager, 8u>::operator[](unsigned int)
000000000012c270 W Array<ModelLoadRequest, 8u>::SetAllocator(Allocator*)
000000000012d258 W Array<ModelLoadRequest, 8u>::RemoveAndSwap(unsigned int)
000000000012c1b8 W Array<ModelLoadRequest, 8u>::Push(ModelLoadRequest const&)
000000000012da78 W Array<ModelLoadRequest, 8u>::Push()
000000000012b3dc t unsigned int Array<ModelLoadRequest, 8u>::FindIf<modelHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6>(modelHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6)
000000000012db7c W Array<ModelLoadRequest, 8u>::Reserve(unsigned int)
000000000012c394 W Array<ModelLoadRequest, 8u>::Array(Allocator*)
000000000012c31c W Array<ModelLoadRequest, 8u>::Array()
000000000012d178 W Array<ModelLoadRequest, 8u>::operator[](unsigned int)
000000000016c200 W Array<SettingsKeyValue, 8u>::end()
000000000016c2a4 W Array<SettingsKeyValue, 8u>::Free()
000000000016c4dc W Array<SettingsKeyValue, 8u>::Push(SettingsKeyValue const&)
000000000016c5e8 W Array<SettingsKeyValue, 8u>::Push()
000000000016c1d0 W Array<SettingsKeyValue, 8u>::begin()
000000000016b60c t unsigned int Array<SettingsKeyValue, 8u>::FindIf<settingsGetValue(char const*, char const*)::$_1>(settingsGetValue(char const*, char const*)::$_1)
000000000016b508 t unsigned int Array<SettingsKeyValue, 8u>::FindIf<settingsSetValue(char const*, char const*)::$_0>(settingsSetValue(char const*, char const*)::$_0)
000000000016c734 W Array<SettingsKeyValue, 8u>::Reserve(unsigned int)
000000000016c5c8 W Array<SettingsKeyValue, 8u>::Iterator::Iterator(SettingsKeyValue*)
000000000016c26c W Array<SettingsKeyValue, 8u>::Iterator::operator*()
000000000016c240 W Array<SettingsKeyValue, 8u>::Iterator::operator!=(Array<SettingsKeyValue, 8u>::Iterator)
000000000016c284 W Array<SettingsKeyValue, 8u>::Iterator::operator++()
000000000016c1a4 W Array<SettingsKeyValue, 8u>::Array(Allocator*)
000000000016c520 W Array<SettingsKeyValue, 8u>::Array()
000000000016c410 W Array<SettingsKeyValue, 8u>::operator[](unsigned int)
000000000013b9a8 W Array<RemoteCommandDesc, 8u>::Free()
000000000013ba84 W Array<RemoteCommandDesc, 8u>::Push(RemoteCommandDesc const&)
000000000013bc00 W Array<RemoteCommandDesc, 8u>::Push()
0000000000139fd8 t unsigned int Array<RemoteCommandDesc, 8u>::FindIf<remoteSendResponse(unsigned int, Blob const&, bool, char const*)::$_0>(remoteSendResponse(unsigned int, Blob const&, bool, char const*)::$_0)
000000000013ae4c t unsigned int Array<RemoteCommandDesc, 8u>::FindIf<remoteExecuteCommand(unsigned int, Blob const&)::$_1>(remoteExecuteCommand(unsigned int, Blob const&)::$_1)
000000000013afbc t unsigned int Array<RemoteCommandDesc, 8u>::FindIf<remoteRegisterCommand(RemoteCommandDesc const&)::$_2>(remoteRegisterCommand(RemoteCommandDesc const&)::$_2)
000000000013b6c8 t unsigned int Array<RemoteCommandDesc, 8u>::FindIf<serverPeerThreadFn(void*)::$_3>(serverPeerThreadFn(void*)::$_3)
000000000013b78c t unsigned int Array<RemoteCommandDesc, 8u>::FindIf<remoteClientThreadFn(void*)::$_4>(remoteClientThreadFn(void*)::$_4)
000000000013bd04 W Array<RemoteCommandDesc, 8u>::Reserve(unsigned int)
000000000013bb30 W Array<RemoteCommandDesc, 8u>::Array(Allocator*)
000000000013bacc W Array<RemoteCommandDesc, 8u>::Array()
000000000013bb88 W Array<RemoteCommandDesc, 8u>::operator[](unsigned int)
000000000012ec58 W Array<ShaderLoadRequest, 8u>::RemoveAndSwap(unsigned int)
000000000012e8f0 W Array<ShaderLoadRequest, 8u>::Free()
000000000012ea70 W Array<ShaderLoadRequest, 8u>::Push(ShaderLoadRequest const&)
000000000012ee24 W Array<ShaderLoadRequest, 8u>::Push()
000000000012e7b8 t unsigned int Array<ShaderLoadRequest, 8u>::FindIf<shaderCompileShaderHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_0>(shaderCompileShaderHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_0)
000000000012ef20 W Array<ShaderLoadRequest, 8u>::Reserve(unsigned int)
000000000012ebbc W Array<ShaderLoadRequest, 8u>::Array(Allocator*)
000000000012eb88 W Array<ShaderLoadRequest, 8u>::Array()
000000000012ebe8 W Array<ShaderLoadRequest, 8u>::operator[](unsigned int)
000000000017f694 W Array<EngineShortcutKeys, 8u>::SetAllocator(Allocator*)
000000000017f6ec W Array<EngineShortcutKeys, 8u>::Free()
000000000017f774 W Array<EngineShortcutKeys, 8u>::Push(EngineShortcutKeys const&)
000000000017f954 W Array<EngineShortcutKeys, 8u>::Push()
000000000017f368 t unsigned int Array<EngineShortcutKeys, 8u>::FindIf<engineRegisterShortcut(char const*, void (*)(void*), void*)::$_2>(engineRegisterShortcut(char const*, void (*)(void*), void*)::$_2)
000000000017fa50 W Array<EngineShortcutKeys, 8u>::Reserve(unsigned int)
000000000017f8a0 W Array<EngineShortcutKeys, 8u>::Array(Allocator*)
000000000017f808 W Array<EngineShortcutKeys, 8u>::Array()
000000000017f8e4 W Array<EngineShortcutKeys, 8u>::operator[](unsigned int)
0000000000256518 W Array<GfxDeferredCommand, 8u>::SetAllocator(Allocator*)
000000000025aef0 W Array<GfxDeferredCommand, 8u>::end()
0000000000257320 W Array<GfxDeferredCommand, 8u>::Free()
000000000025b074 W Array<GfxDeferredCommand, 8u>::Push(GfxDeferredCommand const&)
000000000025b0bc W Array<GfxDeferredCommand, 8u>::Push()
000000000025afec W Array<GfxDeferredCommand, 8u>::Clear()
000000000025aec0 W Array<GfxDeferredCommand, 8u>::begin()
000000000025b1b8 W Array<GfxDeferredCommand, 8u>::Reserve(unsigned int)
000000000025b020 W Array<GfxDeferredCommand, 8u>::Iterator::Iterator(GfxDeferredCommand*)
000000000025af54 W Array<GfxDeferredCommand, 8u>::Iterator::operator*()
000000000025af28 W Array<GfxDeferredCommand, 8u>::Iterator::operator!=(Array<GfxDeferredCommand, 8u>::Iterator)
000000000025afcc W Array<GfxDeferredCommand, 8u>::Iterator::operator++()
000000000025a5cc W Array<GfxDeferredCommand, 8u>::Array(Allocator*)
000000000025a1ac W Array<GfxDeferredCommand, 8u>::Array()
000000000013fe30 W Array<VfsFileChangeEvent, 8u>::SetAllocator(Allocator*)
000000000013ff68 W Array<VfsFileChangeEvent, 8u>::Free()
0000000000140870 W Array<VfsFileChangeEvent, 8u>::Clear()
0000000000140244 W Array<VfsFileChangeEvent, 8u>::Array(Allocator*)
0000000000140150 W Array<VfsFileChangeEvent, 8u>::Array()
00000000001407f8 W Array<VfsFileChangeEvent, 8u>::operator[](unsigned int)
0000000000132160 W Array<AppEventCallbackPair, 8u>::RemoveAndSwap(unsigned int)
00000000001322fc W Array<AppEventCallbackPair, 8u>::end()
0000000000132118 W Array<AppEventCallbackPair, 8u>::Push(AppEventCallbackPair const&)
00000000001323b8 W Array<AppEventCallbackPair, 8u>::Push()
00000000001322cc W Array<AppEventCallbackPair, 8u>::begin()
000000000012fd60 t unsigned int Array<AppEventCallbackPair, 8u>::FindIf<appUnregisterEventsCallback(void (*)(AppEvent const&, void*))::$_0>(appUnregisterEventsCallback(void (*)(AppEvent const&, void*))::$_0)
00000000001324b4 W Array<AppEventCallbackPair, 8u>::Reserve(unsigned int)
0000000000132398 W Array<AppEventCallbackPair, 8u>::Iterator::Iterator(AppEventCallbackPair*)
0000000000132360 W Array<AppEventCallbackPair, 8u>::Iterator::operator*()
0000000000132334 W Array<AppEventCallbackPair, 8u>::Iterator::operator!=(Array<AppEventCallbackPair, 8u>::Iterator)
0000000000132378 W Array<AppEventCallbackPair, 8u>::Iterator::operator++()
00000000001322a0 W Array<AppEventCallbackPair, 8u>::Array(Allocator*)
000000000013226c W Array<AppEventCallbackPair, 8u>::Array()
00000000001320a8 W Array<AppEventCallbackPair, 8u>::operator[](unsigned int)
0000000000260504 W Array<GfxDescriptorSetData, 32u>::Free()
00000000002619bc W Array<GfxDescriptorSetData, 32u>::Push(GfxDescriptorSetData const&)
0000000000261b54 W Array<GfxDescriptorSetData, 32u>::Push()
0000000000261a04 W Array<GfxDescriptorSetData, 32u>::Reserve(unsigned int)
000000000025fa68 W Array<GfxDescriptorSetData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025a538 W Array<GfxDescriptorSetData, 32u>::Array(Allocator*)
00000000002601c8 W Array<GfxDescriptorSetData, 32u>::operator[](unsigned int)
000000000025fa30 W Array<GfxDescriptorSetData, 8u>::GetMemoryRequirement(unsigned int)
000000000010dc40 W Array<AssetImageLoadRequest, 8u>::SetAllocator(Allocator*)
000000000010e744 W Array<AssetImageLoadRequest, 8u>::RemoveAndSwap(unsigned int)
000000000010dc98 W Array<AssetImageLoadRequest, 8u>::Free()
000000000010df84 W Array<AssetImageLoadRequest, 8u>::Push(AssetImageLoadRequest const&)
000000000010f548 W Array<AssetImageLoadRequest, 8u>::Push()
00000000000f992c t unsigned int Array<AssetImageLoadRequest, 8u>::FindIf<assetImageHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_0>(assetImageHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_0)
000000000010f64c W Array<AssetImageLoadRequest, 8u>::Reserve(unsigned int)
000000000010e318 W Array<AssetImageLoadRequest, 8u>::Array(Allocator*)
000000000010e27c W Array<AssetImageLoadRequest, 8u>::Array()
000000000010e6cc W Array<AssetImageLoadRequest, 8u>::operator[](unsigned int)
00000000002603f4 W Array<GfxPipelineLayoutData, 32u>::Free()
000000000025b8e8 W Array<GfxPipelineLayoutData, 32u>::Push(GfxPipelineLayoutData const&)
000000000025ba80 W Array<GfxPipelineLayoutData, 32u>::Push()
000000000025b930 W Array<GfxPipelineLayoutData, 32u>::Reserve(unsigned int)
000000000025fda4 W Array<GfxPipelineLayoutData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025a468 W Array<GfxPipelineLayoutData, 32u>::Array(Allocator*)
000000000025b7a4 W Array<GfxPipelineLayoutData, 32u>::operator[](unsigned int)
000000000025fd6c W Array<GfxPipelineLayoutData, 8u>::GetMemoryRequirement(unsigned int)
000000000026058c W Array<GfxDescriptorSetLayoutData, 32u>::Free()
0000000000261670 W Array<GfxDescriptorSetLayoutData, 32u>::Push(GfxDescriptorSetLayoutData const&)
0000000000261808 W Array<GfxDescriptorSetLayoutData, 32u>::Push()
00000000002616b8 W Array<GfxDescriptorSetLayoutData, 32u>::Reserve(unsigned int)
000000000025fb7c W Array<GfxDescriptorSetLayoutData, 32u>::Reserve(unsigned int, void*, unsigned long)
000000000025a5a0 W Array<GfxDescriptorSetLayoutData, 32u>::Array(Allocator*)
000000000025f62c W Array<GfxDescriptorSetLayoutData, 32u>::operator[](unsigned int)
000000000025fb44 W Array<GfxDescriptorSetLayoutData, 8u>::GetMemoryRequirement(unsigned int)
00000000000f61f4 W Array<Asset, 32u>::Push(Asset const&)
00000000000f63fc W Array<Asset, 32u>::Push()
00000000000f62ac W Array<Asset, 32u>::Reserve(unsigned int)
00000000000f7140 W Array<Asset, 32u>::Reserve(unsigned int, void*, unsigned long)
00000000000f50a0 W Array<Asset, 32u>::Array(Allocator*)
00000000000f623c W Array<Asset, 32u>::operator[](unsigned int)
00000000000f710c W Array<Asset, 8u>::GetMemoryRequirement(unsigned int)
0000000000258a84 W Array<Handle<GfxPipelineT>, 8u>::RemoveAndSwap(unsigned int)
00000000002570f4 W Array<Handle<GfxPipelineT>, 8u>::Free()
0000000000258908 W Array<Handle<GfxPipelineT>, 8u>::Push(Handle<GfxPipelineT> const&)
00000000002612dc W Array<Handle<GfxPipelineT>, 8u>::Push()
0000000000248bdc t unsigned int Array<Handle<GfxPipelineT>, 8u>::FindIf<gfxDestroyPipeline(Handle<GfxPipelineT>)::$_2>(gfxDestroyPipeline(Handle<GfxPipelineT>)::$_2)
00000000002613d8 W Array<Handle<GfxPipelineT>, 8u>::Reserve(unsigned int)
0000000000261528 W Array<Handle<GfxPipelineT>, 8u>::Array(Allocator*)
0000000000258a50 W Array<Handle<GfxPipelineT>, 8u>::Array()
00000000002751e4 W Array<Handle<GfxDescriptorSetT>, 8u>::Free()
0000000000274d1c W Array<Handle<GfxDescriptorSetT>, 8u>::Push(Handle<GfxDescriptorSetT> const&)
0000000000274d64 W Array<Handle<GfxDescriptorSetT>, 8u>::Push()
0000000000274e60 W Array<Handle<GfxDescriptorSetT>, 8u>::Reserve(unsigned int)
000000000027452c W Array<Handle<GfxDescriptorSetT>, 8u>::Array(Allocator*)
0000000000273ab8 W Array<Handle<GfxDescriptorSetT>, 8u>::Array()
0000000000275174 W Array<Handle<GfxDescriptorSetT>, 8u>::operator[](unsigned int)
00000000000f7a34 W Array<Signal, 32u>::Push(Signal const&)
00000000000f7bcc W Array<Signal, 32u>::Push()
00000000000f7a7c W Array<Signal, 32u>::Reserve(unsigned int)
00000000000f7244 W Array<Signal, 32u>::Reserve(unsigned int, void*, unsigned long)
00000000000f5108 W Array<Signal, 32u>::Array(Allocator*)
00000000000f758c W Array<Signal, 32u>::operator[](unsigned int)
00000000000f7210 W Array<Signal, 8u>::GetMemoryRequirement(unsigned int)
000000000015fc10 W Array<cj5_token, 8u>::Ptr()
000000000015fb14 W Array<cj5_token, 8u>::Push()
000000000015f754 W Array<cj5_token, 8u>::Reserve(unsigned int)
000000000015f728 W Array<cj5_token, 8u>::Array(Allocator*)
000000000014e94c W Array<DebugFiberProtectorThreadContext::Item, 8u>::Pop(unsigned int)
000000000014eaa8 W Array<DebugFiberProtectorThreadContext::Item, 8u>::end()
000000000014ed00 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Free()
000000000014e830 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Push()
000000000014ea78 W Array<DebugFiberProtectorThreadContext::Item, 8u>::begin()
000000000014e45c t unsigned int Array<DebugFiberProtectorThreadContext::Item, 8u>::FindIf<debugFiberScopeProtector_Pop(unsigned short)::$_1>(debugFiberScopeProtector_Pop(unsigned short)::$_1)
000000000014ed88 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Reserve(unsigned int)
000000000014eed8 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Iterator::Iterator(DebugFiberProtectorThreadContext::Item*)
000000000014eb14 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Iterator::operator*()
000000000014eae8 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Iterator::operator!=(Array<DebugFiberProtectorThreadContext::Item, 8u>::Iterator)
000000000014eb2c W Array<DebugFiberProtectorThreadContext::Item, 8u>::Iterator::operator++()
000000000014ecd4 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Array(Allocator*)
000000000014eca0 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Array()
000000000014c578 W Array<_private::MemDebugPointer, 8u>::end()
000000000014c614 W Array<_private::MemDebugPointer, 8u>::Free()
000000000014c788 W Array<_private::MemDebugPointer, 8u>::Push(_private::MemDebugPointer const&)
000000000014cfdc W Array<_private::MemDebugPointer, 8u>::Push()
000000000014c92c W Array<_private::MemDebugPointer, 8u>::Clear()
000000000014c548 W Array<_private::MemDebugPointer, 8u>::begin()
000000000014d0d8 W Array<_private::MemDebugPointer, 8u>::Reserve(unsigned int)
000000000014cfbc W Array<_private::MemDebugPointer, 8u>::Iterator::Iterator(_private::MemDebugPointer*)
000000000014c5dc W Array<_private::MemDebugPointer, 8u>::Iterator::operator*()
000000000014c5b0 W Array<_private::MemDebugPointer, 8u>::Iterator::operator!=(Array<_private::MemDebugPointer, 8u>::Iterator)
000000000014c5f4 W Array<_private::MemDebugPointer, 8u>::Iterator::operator++()
000000000014cd3c W Array<_private::MemDebugPointer, 8u>::Array(Allocator*)
000000000014c43c W Array<_private::MemDebugPointer, 8u>::Array()
000000000014c9e0 W Array<MemTempContext*, 8u>::Free()
000000000014c390 W Array<MemTempContext*, 8u>::Push(MemTempContext* const&)
000000000014caf0 W Array<MemTempContext*, 8u>::Push()
0000000000143414 t unsigned int Array<MemTempContext*, 8u>::FindIf<memTempPushId()::$_0>(memTempPushId()::$_0)
000000000014cbec W Array<MemTempContext*, 8u>::Reserve(unsigned int)
000000000014c9b4 W Array<MemTempContext*, 8u>::Array(Allocator*)
000000000014c980 W Array<MemTempContext*, 8u>::Array()
000000000014c320 W Array<MemTempContext*, 8u>::operator[](unsigned int)
000000000025a658 W Array<VkCommandBuffer_T*, 8u>::SetAllocator(Allocator*)
0000000000257278 W Array<VkCommandBuffer_T*, 8u>::Free()
000000000025a83c W Array<VkCommandBuffer_T*, 8u>::Push(VkCommandBuffer_T* const&)
000000000025aa38 W Array<VkCommandBuffer_T*, 8u>::Push()
000000000025a80c W Array<VkCommandBuffer_T*, 8u>::Clear()
000000000025a73c W Array<VkCommandBuffer_T*, 8u>::Extend(Array<VkCommandBuffer_T*, 8u> const&)
000000000025a884 W Array<VkCommandBuffer_T*, 8u>::PopLast()
000000000025a8e8 W Array<VkCommandBuffer_T*, 8u>::Reserve(unsigned int)
000000000025a62c W Array<VkCommandBuffer_T*, 8u>::Array(Allocator*)
000000000025a5f8 W Array<VkCommandBuffer_T*, 8u>::Array()
000000000010dbe8 W Array<AssetDescriptorUpdateCacheItem*, 8u>::SetAllocator(Allocator*)
000000000010e140 W Array<AssetDescriptorUpdateCacheItem*, 8u>::RemoveAndSwap(unsigned int)
000000000010dd84 W Array<AssetDescriptorUpdateCacheItem*, 8u>::end()
000000000010ded4 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Free()
000000000010eb48 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Push(AssetDescriptorUpdateCacheItem* const&)
000000000010edf0 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Push()
000000000010dd54 W Array<AssetDescriptorUpdateCacheItem*, 8u>::begin()
00000000000f99f0 t unsigned int Array<AssetDescriptorUpdateCacheItem*, 8u>::FindIf<assetUpdateImageDescriptorSetCache(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*)::$_1>(assetUpdateImageDescriptorSetCache(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*)::$_1)
000000000010eeec W Array<AssetDescriptorUpdateCacheItem*, 8u>::Reserve(unsigned int)
000000000010f504 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Iterator::Iterator(AssetDescriptorUpdateCacheItem**)
000000000010dde8 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Iterator::operator*()
000000000010ddbc W Array<AssetDescriptorUpdateCacheItem*, 8u>::Iterator::operator!=(Array<AssetDescriptorUpdateCacheItem*, 8u>::Iterator)
000000000010deb4 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Iterator::operator++()
000000000010e2ec W Array<AssetDescriptorUpdateCacheItem*, 8u>::Array(Allocator*)
000000000010e248 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Array()
000000000010e0a0 W Array<AssetDescriptorUpdateCacheItem*, 8u>::operator[](unsigned int)
000000000013fe88 W Array<void (*)(char const*), 8u>::SetAllocator(Allocator*)
000000000013fff0 W Array<void (*)(char const*), 8u>::Free()
0000000000140078 W Array<void (*)(char const*), 8u>::Push(void (* const&)(char const*))
00000000001410dc W Array<void (*)(char const*), 8u>::Push()
00000000001411d8 W Array<void (*)(char const*), 8u>::Reserve(unsigned int)
0000000000140270 W Array<void (*)(char const*), 8u>::Array(Allocator*)
0000000000140184 W Array<void (*)(char const*), 8u>::Array()
00000000001408a0 W Array<void (*)(char const*), 8u>::operator[](unsigned int)
00000000002764cc W Array<char*, 8u>::Ptr()
0000000000173658 W Array<char*, 8u>::Push(char* const&)
0000000000173794 W Array<char*, 8u>::Push()
00000000001739e0 W Array<char*, 8u>::Detach(char***, unsigned int*)
00000000001736a0 W Array<char*, 8u>::Detach()
0000000000173890 W Array<char*, 8u>::Reserve(unsigned int)
000000000017362c W Array<char*, 8u>::Array(Allocator*)
00000000002763e4 W Array<char*, 8u>::operator[](unsigned int)
00000000001172cc t Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::Push(modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData const&)
000000000012b4d0 t Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::Push()
0000000000117220 t unsigned int Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::FindIf<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_4>(modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_4)
000000000012b5d4 t Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::Reserve(unsigned int)
0000000000116ce8 t Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::Array(Allocator*)
000000000011731c t Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::operator[](unsigned int)
0000000000145448 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::SetAllocator(Allocator*)
0000000000145550 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Ptr()
0000000000145f94 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Push(MemTlsfAllocator::CalculateFragmentation()::AllocData const&)
0000000000145fdc t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Push()
00000000001460d8 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Reserve(unsigned int)
0000000000145eb4 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Array(Allocator*)
0000000000145e80 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Array()
0000000000145568 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::operator[](unsigned int)
000000000012b7ec W Array<unsigned int, 8u>::Push(unsigned int const&)
000000000012d4c0 W Array<unsigned int, 8u>::Push()
000000000012d5bc W Array<unsigned int, 8u>::Reserve(unsigned int)
000000000012b7a8 W Array<unsigned int, 8u>::Array(Allocator*)
000000000012ba98 W Array<unsigned int, 8u>::operator[](unsigned int)
000000000017d5fc W Color::Color(float const*)
0000000000168938 W Color::Color(float, float, float, float)
000000000017dae0 W Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
0000000000275068 W Color::Color(unsigned int)
00000000001969b0 T ImGui::BeginChild(char const*, ImVec2 const&, bool, int)
0000000000196a20 T ImGui::BeginChild(unsigned int, ImVec2 const&, bool, int)
00000000001f9e14 T ImGui::BeginCombo(char const*, char const*, int)
00000000001a0770 T ImGui::BeginGroup()
00000000001a1b9c T ImGui::BeginPopup(char const*, int)
00000000001e5cb8 T ImGui::BeginTable(char const*, int, int, ImVec2 const&, float)
00000000001f5350 T ImGui::BulletText(char const*, ...)
0000000000207e18 T ImGui::ColorEdit3(char const*, float*, int)
0000000000207e54 T ImGui::ColorEdit4(char const*, float*, int)
00000000001ff10c T ImGui::DragFloat2(char const*, float*, float, float, float, char const*, int)
00000000001ff16c T ImGui::DragFloat3(char const*, float*, float, float, float, char const*, int)
00000000001ff1cc T ImGui::DragFloat4(char const*, float*, float, float, float, char const*, int)
00000000001fe3f8 T ImGui::DragScalar(char const*, int, void*, float, void const*, void const*, char const*, int)
00000000001f1c8c T ImGui::EndColumns()
000000000020dd8c T ImGui::EndListBox()
000000000020f2d8 T ImGui::EndMenuBar()
0000000000213b44 T ImGui::EndTabItem()
00000000001a10c0 T ImGui::EndTooltip()
00000000001a0b14 T ImGui::GetScrollX()
00000000001a0b3c T ImGui::GetScrollY()
00000000001890dc T ImGui::GetVersion()
000000000018920c T ImGui::Initialize(ImGuiContext*)
0000000000205988 T ImGui::InputFloat(char const*, float*, float, float, char const*, int)
00000000001f5050 T ImGui::LabelTextV(char const*, char const*, std::__va_list)
00000000001a4b20 T ImGui::LogButtons()
00000000002105b4 T ImGui::MenuItemEx(char const*, char const*, char const*, bool, bool)
00000000001f19ec T ImGui::NextColumn()
0000000000186180 T ImGui::RenderText(ImVec2, char const*, char const*, bool)
000000000020d9fc T ImGui::Selectable(char const*, bool*, int, ImVec2 const&)
00000000001fae34 T ImGui::Selectable(char const*, bool, int, ImVec2 const&)
00000000001a2adc T ImGui::SetFocusID(unsigned int, ImGuiWindow*)
00000000001a0bb4 T ImGui::SetScrollX(ImGuiWindow*, float)
00000000001a0c14 T ImGui::SetScrollX(float)
00000000001a0be4 T ImGui::SetScrollY(ImGuiWindow*, float)
00000000001a0c50 T ImGui::SetScrollY(float)
0000000000194ab0 T ImGui::SetTooltip(char const*, ...)
0000000000200ae0 T ImGui::SliderInt2(char const*, int*, int, int, char const*, int)
0000000000200b40 T ImGui::SliderInt3(char const*, int*, int, int, char const*, int)
0000000000200ba0 T ImGui::SliderInt4(char const*, int*, int, int, char const*, int)
000000000020d138 T ImGui::TreeNodeEx(char const*, int)
000000000020d1b0 T ImGui::TreeNodeEx(char const*, int, char const*, ...)
000000000020d278 T ImGui::TreeNodeEx(void const*, int, char const*, ...)
0000000000201188 T ImGui::VSliderInt(char const*, ImVec2 const&, int*, int, int, char const*, int)
00000000001f66ec T ImGui::ArrowButton(char const*, int)
00000000001982e8 T ImGui::BeginDocked(ImGuiWindow*, bool*)
000000000020f914 T ImGui::BeginMenuEx(char const*, char const*, bool)
0000000000210d2c T ImGui::BeginTabBar(char const*, int)
00000000001f5400 T ImGui::BulletTextV(char const*, std::__va_list)
00000000001f6750 T ImGui::CloseButton(unsigned int, ImVec2 const&)
0000000000209468 T ImGui::ColorButton(char const*, ImVec4 const&, int, ImVec2)
00000000001fef00 T ImGui::DragScalarN(char const*, int, void*, int, float, void const*, void const*, char const*, int)
000000000019cdc4 T ImGui::EndDisabled()
0000000000189d94 T ImGui::FocusWindow(ImGuiWindow*)
0000000000185704 T ImGui::GetColorU32(ImVec4 const&)
0000000000185694 T ImGui::GetColorU32(int, float)
0000000000185798 T ImGui::GetColorU32(unsigned int)
00000000001899c8 T ImGui::GetDrawData()
000000000019dd88 T ImGui::GetFontSize()
000000000019558c T ImGui::GetKeyIndex(int)
0000000000195c2c T ImGui::GetMousePos()
00000000001f7f1c T ImGui::ImageButton(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, int, ImVec4 const&, ImVec4 const&)
0000000000205ce8 T ImGui::InputDouble(char const*, double*, double, double, char const*, int)
0000000000205a40 T ImGui::InputFloat2(char const*, float*, char const*, int)
0000000000205a90 T ImGui::InputFloat3(char const*, float*, char const*, int)
0000000000205ae0 T ImGui::InputFloat4(char const*, float*, char const*, int)
00000000002052e8 T ImGui::InputScalar(char const*, int, void*, void const*, void const*, char const*, int)
00000000002017dc T ImGui::InputTextEx(char const*, char const*, char*, int, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*)
0000000000188e54 T ImGui::IsClippedEx(ImRect const&, unsigned int)
00000000001949ac T ImGui::IsMouseDown(int)
00000000001a1148 T ImGui::IsPopupOpen(char const*, int)
000000000018ad9c T ImGui::IsPopupOpen(unsigned int, int)
0000000000187a9c T ImGui::KeepAliveID(unsigned int)
00000000001a4ad0 T ImGui::LogToBuffer(int)
00000000001a1230 T ImGui::OpenPopupEx(unsigned int, int)
0000000000193c48 T ImGui::PopClipRect()
000000000019cc6c T ImGui::PopItemFlag()
0000000000185bf0 T ImGui::PopStyleVar(int)
00000000001f8b1c T ImGui::ProgressBar(float, ImVec2 const&, char const*)
00000000001f8aa8 T ImGui::RadioButton(char const*, int*, int)
00000000001f85ec T ImGui::RadioButton(char const*, bool)
00000000001d72dc T ImGui::RenderArrow(ImDrawList*, ImVec2, unsigned int, int, float)
0000000000187058 T ImGui::RenderFrame(ImVec2, ImVec2, unsigned int, bool, float)
00000000001f71e4 T ImGui::ScrollbarEx(ImRect const&, unsigned int, ImGuiAxis, float*, float, float, int)
00000000001f9204 T ImGui::SeparatorEx(int)
000000000018837c T ImGui::SetActiveID(unsigned int, ImGuiWindow*)
00000000001a10f8 T ImGui::SetTooltipV(char const*, std::__va_list)
00000000002009c4 T ImGui::SliderAngle(char const*, float*, float, float, char const*, int)
0000000000200864 T ImGui::SliderFloat(char const*, float*, float, float, char const*, int)
00000000001f6250 T ImGui::SmallButton(char const*)
00000000001ea8d0 T ImGui::TableEndRow(ImGuiTable*)
00000000001ee82c T ImGui::TableHeader(char const*)
00000000001efe44 T ImGui::TableRemove(ImGuiTable*)
00000000001f4a60 T ImGui::TextColored(ImVec4 const&, char const*, ...)
00000000001f4dc4 T ImGui::TextWrapped(char const*, ...)
000000000020c1f8 T ImGui::TreeNodeExV(char const*, int, char const*, std::__va_list)
000000000020c39c T ImGui::TreeNodeExV(void const*, int, char const*, std::__va_list)
000000000019de40 T ImGui::ActivateItem(unsigned int)
000000000019658c T ImGui::BeginChildEx(char const*, unsigned int, ImVec2 const&, bool, int)
00000000001f14b4 T ImGui::BeginColumns(char const*, int, int)
000000000020da80 T ImGui::BeginListBox(char const*, ImVec2 const&)
000000000020f0d8 T ImGui::BeginMenuBar()
00000000001a1968 T ImGui::BeginPopupEx(unsigned int, int)
0000000000212b3c T ImGui::BeginTabItem(char const*, bool*, int)
00000000001e5d10 T ImGui::BeginTableEx(char const*, unsigned int, int, int, ImVec2 const&, float)
00000000001a0ec4 T ImGui::BeginTooltip()
00000000001a0468 T ImGui::CalcItemSize(ImVec2, float, float)
000000000018692c T ImGui::CalcTextSize(char const*, char const*, bool, float)
000000000020b628 T ImGui::ColorPicker3(char const*, float*, int)
0000000000209a3c T ImGui::ColorPicker4(char const*, float*, int, float const*)
000000000020bc78 T ImGui::ColorTooltip(char const*, float const*, int)
00000000001fdc34 T ImGui::DragBehavior(unsigned int, int, void*, float, void const*, void const*, char const*, int)
00000000001f1418 T ImGui::GetColumnsID(char const*, int)
000000000019fd74 T ImGui::GetCursorPos()
00000000001885ac T ImGui::GetHoveredID()
000000000019d48c T ImGui::GetWindowPos()
00000000002057e4 T ImGui::InputScalarN(char const*, int, void*, int, void const*, void const*, char const*, int)
0000000000195f90 T ImGui::IsItemActive()
0000000000196370 T ImGui::IsItemEdited()
000000000019586c T ImGui::IsKeyPressed(int, bool)
00000000001a0310 T ImGui::PopItemWidth()
0000000000193bb0 T ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
000000000019cba0 T ImGui::PushItemFlag(int, bool)
0000000000185b10 T ImGui::PushStyleVar(int, ImVec2 const&)
00000000001859e0 T ImGui::PushStyleVar(int, float)
00000000001d75f4 T ImGui::RenderBullet(ImDrawList*, ImVec2, unsigned int)
00000000001a092c T ImGui::ScrollToItem(int)
00000000001a0984 T ImGui::ScrollToRect(ImGuiWindow*, ImRect const&, int)
000000000019fe50 T ImGui::SetCursorPos(ImVec2 const&)
0000000000188534 T ImGui::SetHoveredID(unsigned int)
000000000018a750 T ImGui::SetWindowPos(ImGuiWindow*, ImVec2 const&, int)
000000000019d588 T ImGui::SetWindowPos(char const*, ImVec2 const&, int)
000000000019d550 T ImGui::SetWindowPos(ImVec2 const&, int)
00000000001f9a94 T ImGui::ShrinkWidths(ImGuiShrinkWidthItem*, int, float)
00000000002008bc T ImGui::SliderFloat2(char const*, float*, float, float, char const*, int)
0000000000200914 T ImGui::SliderFloat3(char const*, float*, float, float, char const*, int)
000000000020096c T ImGui::SliderFloat4(char const*, float*, float, float, char const*, int)
00000000001fff84 T ImGui::SliderScalar(char const*, int, void*, void const*, void const*, char const*, int)
0000000000212430 T ImGui::TabBarAddTab(ImGuiTabBar*, int, ImGuiWindow*)
00000000001ed3a4 T ImGui::TableEndCell(ImGuiTable*)
00000000001ed140 T ImGui::TableNextRow(int, float)
00000000001f4b10 T ImGui::TextColoredV(ImVec4 const&, char const*, std::__va_list)
00000000001f4c08 T ImGui::TextDisabled(char const*, ...)
00000000001f4e74 T ImGui::TextWrappedV(char const*, std::__va_list)
0000000000201128 T ImGui::VSliderFloat(char const*, ImVec2 const&, float*, float, float, char const*, int)
00000000001f6444 T ImGui::ArrowButtonEx(char const*, int, ImVec2, int)
000000000019ccec T ImGui::BeginDisabled(bool)
0000000000210e34 T ImGui::BeginTabBarEx(ImGuiTabBar*, ImRect const&, int, ImGuiDockNode*)
00000000001a0354 T ImGui::CalcItemWidth()
00000000001f850c T ImGui::CheckboxFlags(char const*, int*, int)
00000000001f8544 T ImGui::CheckboxFlags(char const*, unsigned int*, unsigned int)
00000000001f857c T ImGui::CheckboxFlags(char const*, long long*, long long)
00000000001f85b4 T ImGui::CheckboxFlags(char const*, unsigned long long*, unsigned long long)
0000000000188518 T ImGui::ClearActiveID()
0000000000194a1c T ImGui::ClearDragDrop()
000000000018919c T ImGui::CreateContext(ImFontAtlas*)
00000000001fd3e4 T ImGui::DataTypeClamp(int, void*, void const*, void const*)
00000000001b2360 T ImGui::DebugNodeFont(ImFont*)
0000000000219b3c W bool ImGui::DragBehaviorT<double, double, double>(int, double*, float, double, double, char const*, int)
00000000002194dc W bool ImGui::DragBehaviorT<float, float, float>(int, float*, float, float, float, char const*, int)
0000000000217af4 W bool ImGui::DragBehaviorT<int, int, float>(int, int*, float, int, int, char const*, int)
0000000000218168 W bool ImGui::DragBehaviorT<unsigned int, int, float>(int, unsigned int*, float, unsigned int, unsigned int, char const*, int)
00000000002187dc W bool ImGui::DragBehaviorT<long long, long long, double>(int, long long*, float, long long, long long, char const*, int)
0000000000218e5c W bool ImGui::DragBehaviorT<unsigned long long, long long, double>(int, unsigned long long*, float, unsigned long long, unsigned long long, char const*, int)
00000000001ff688 T ImGui::DragIntRange2(char const*, int*, int*, float, int, int, char const*, char const*, int)
00000000001971b0 T ImGui::EndChildFrame()
000000000019fdd0 T ImGui::GetCursorPosX()
000000000019fe10 T ImGui::GetCursorPosY()
0000000000189a48 T ImGui::GetFrameCount()
000000000019eb4c T ImGui::GetIDWithSeed(char const*, char const*, unsigned int)
000000000018997c T ImGui::GetPlatformIO()
00000000001a0b64 T ImGui::GetScrollMaxX()
00000000001a0b8c T ImGui::GetScrollMaxY()
000000000019d5d0 T ImGui::GetWindowSize()
00000000001f7bd4 T ImGui::ImageButtonEx(unsigned int, void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&)
00000000001961a8 T ImGui::IsItemClicked(int)
00000000001888bc T ImGui::IsItemFocused()
00000000001886a0 T ImGui::IsItemHovered(int)
0000000000196328 T ImGui::IsItemVisible()
0000000000195974 T ImGui::IsKeyReleased(int)
000000000019ed14 T ImGui::IsRectVisible(ImVec2 const&)
000000000019ed98 T ImGui::IsRectVisible(ImVec2 const&, ImVec2 const&)
000000000018af9c T ImGui::IsWindowAbove(ImGuiWindow*, ImGuiWindow*)
0000000000188a6c T ImGui::ItemHoverable(ImRect const&, unsigned int)
0000000000196858 T ImGui::NavInitWindow(ImGuiWindow*, bool)
000000000020ec38 T ImGui::PlotHistogram(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
000000000020eba8 T ImGui::PlotHistogram(char const*, float const*, int, int, char const*, float, float, ImVec2, int)
000000000019ded0 T ImGui::PopFocusScope()
0000000000185950 T ImGui::PopStyleColor(int)
00000000001a0114 T ImGui::PushItemWidth(float)
000000000019fed8 T ImGui::SetCursorPosX(float)
000000000019ff3c T ImGui::SetCursorPosY(float)
0000000000198110 T ImGui::SetWindowDock(ImGuiWindow*, unsigned int, int)
0000000000198920 T ImGui::SetWindowSize(ImGuiWindow*, ImVec2 const&, int)
000000000019d640 T ImGui::SetWindowSize(char const*, ImVec2 const&, int)
000000000019d604 T ImGui::SetWindowSize(ImVec2 const&, int)
00000000001b1afc T ImGui::ShowFontAtlas(ImFontAtlas*)
00000000002006c0 T ImGui::SliderScalarN(char const*, int, void*, int, void const*, void const*, char const*, int)
0000000000213c0c T ImGui::TabItemButton(char const*, int)
00000000001ed248 T ImGui::TableBeginRow(ImGuiTable*)
00000000001e5c78 T ImGui::TableFindByID(unsigned int)
00000000002016b4 T ImGui::TempInputText(ImRect const&, unsigned int, char const*, char*, int, int)
00000000001f4cb8 T ImGui::TextDisabledV(char const*, std::__va_list)
0000000000200c00 T ImGui::VSliderScalar(char const*, ImVec2 const&, int, void*, void const*, void const*, char const*, int)
0000000000189710 T ImGui::AddContextHook(ImGuiContext*, ImGuiContextHook const*)
00000000001a0ee0 T ImGui::BeginTooltipEx(int, int)
00000000001f56a0 T ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
0000000000217674 W bool ImGui::CheckboxFlagsT<int>(char const*, int*, int)
0000000000217794 W bool ImGui::CheckboxFlagsT<unsigned int>(char const*, unsigned int*, unsigned int)
00000000002178b4 W bool ImGui::CheckboxFlagsT<long long>(char const*, long long*, long long)
00000000002179d4 W bool ImGui::CheckboxFlagsT<unsigned long long>(char const*, unsigned long long*, unsigned long long)
00000000001f6c18 T ImGui::CollapseButton(unsigned int, ImVec2 const&, ImGuiDockNode*)
00000000001f015c T ImGui::DebugNodeTable(ImGuiTable*)
00000000001893b0 T ImGui::DestroyContext(ImGuiContext*)
000000000020f89c T ImGui::EndMainMenuBar()
00000000001971c4 T ImGui::FindWindowByID(unsigned int)
00000000001f0be4 T ImGui::GetColumnIndex()
00000000001f0dd4 T ImGui::GetColumnWidth(int)
00000000001bf040 W ImGui::GetDefaultFont()
00000000001a05cc T ImGui::GetFrameHeight()
0000000000196510 T ImGui::GetItemRectMax()
00000000001964dc T ImGui::GetItemRectMin()
0000000000195ee8 T ImGui::GetMouseCursor()
000000000019d43c T ImGui::GetWindowWidth()
0000000000195cd0 T ImGui::IsAnyMouseDown()
000000000018a228 T ImGui::IsMouseClicked(int, bool)
00000000001c1574 W ImGui::IsNavInputDown(int)
00000000001c4848 W ImGui::IsNavInputTest(int, ImGuiInputReadMode)
000000000019d3b0 T ImGui::IsWindowDocked()
00000000001a4a80 T ImGui::LogToClipboard(int)
00000000001885f4 T ImGui::MarkItemEdited(unsigned int)
000000000019cf7c T ImGui::PopTextWrapPos()
000000000019de74 T ImGui::PushFocusScope(unsigned int)
000000000019eadc T ImGui::PushOverrideID(unsigned int)
00000000001858c4 T ImGui::PushStyleColor(int, ImVec4 const&)
0000000000185824 T ImGui::PushStyleColor(int, unsigned int)
000000000019e2c8 T ImGui::ScrollToRectEx(ImGuiWindow*, ImRect const&, int)
00000000001f1154 T ImGui::SetColumnWidth(int, float)
000000000018d938 T ImGui::SetCurrentFont(ImFont*)
0000000000195efc T ImGui::SetMouseCursor(int)
00000000001a0d14 T ImGui::SetScrollHereX(float)
00000000001a0e00 T ImGui::SetScrollHereY(float)
000000000019d82c T ImGui::SetWindowFocus(char const*)
000000000019d808 T ImGui::SetWindowFocus()
00000000001ff9c0 T ImGui::SliderBehavior(ImRect const&, unsigned int, int, void*, void const*, void const*, char const*, int, ImRect*)
00000000002125c4 T ImGui::TabBarCloseTab(ImGuiTabBar*, ImGuiTabItem*)
00000000001ed648 T ImGui::TableBeginCell(ImGuiTable*, int)
00000000001970d8 T ImGui::BeginChildFrame(unsigned int, ImVec2 const&, int)
00000000001fa488 T ImGui::BeginComboPopup(unsigned int, ImRect const&, int)
00000000001a1c40 T ImGui::BeginPopupModal(char const*, bool*, int)
00000000001fb9b0 T ImGui::DataTypeApplyOp(int, int, void*, void const*, void const*)
00000000001fcec4 T ImGui::DataTypeCompare(int, void const*, void const*)
00000000001fb794 T ImGui::DataTypeGetInfo(int)
0000000000187b04 T ImGui::DebugHookIdInfo(unsigned int, int, void const*, void const*)
00000000001b1600 T ImGui::DebugNodeTabBar(ImGuiTabBar*, char const*)
00000000001b2ae4 T ImGui::DebugNodeWindow(ImGuiWindow*, char const*)
00000000001ff22c T ImGui::DragFloatRange2(char const*, float*, float*, float, float, float, char const*, char const*, int)
00000000001faa28 T ImGui::EndComboPreview()
00000000001f0cdc T ImGui::GetColumnOffset(int)
00000000001f0c30 T ImGui::GetColumnsCount()
0000000000196544 T ImGui::GetItemRectSize()
000000000019b584 T ImGui::GetMainViewport()
000000000019e948 T ImGui::GetStateStorage()
000000000019d388 T ImGui::GetWindowDockID()
000000000019d464 T ImGui::GetWindowHeight()
00000000001f62dc T ImGui::InvisibleButton(char const*, ImVec2 const&, int)
00000000001962a8 T ImGui::IsAnyItemActive()
0000000000195ff0 T ImGui::IsItemActivated()
00000000001c4880 W ImGui::IsKeyPressedMap(int, bool)
000000000018a338 T ImGui::IsMouseDragging(int, float)
000000000018a644 T ImGui::IsMousePosValid(ImVec2 const*)
0000000000195a38 T ImGui::IsMouseReleased(int)
000000000018bb3c T ImGui::IsWindowChildOf(ImGuiWindow*, ImGuiWindow*, bool, bool)
000000000019d248 T ImGui::IsWindowFocused(int)
000000000019d060 T ImGui::IsWindowHovered(int)
00000000001862a4 T ImGui::LogRenderedText(ImVec2 const*, char const*, char const*)
000000000019cf24 T ImGui::PopButtonRepeat()
000000000019cf38 T ImGui::PushTextWrapPos(float)
00000000001d7650 T ImGui::RenderCheckMark(ImDrawList*, ImVec2, unsigned int, float)
00000000001f0ea4 T ImGui::SetColumnOffset(int, float)
0000000000188f0c T ImGui::SetLastItemData(unsigned int, int, int, ImRect const&)
000000000020d730 T ImGui::SetNextItemOpen(bool, int)
000000000019e8f8 T ImGui::SetStateStorage(ImGuiStorage*)
000000000021cce0 W bool ImGui::SliderBehaviorT<double, double, double>(ImRect const&, unsigned int, int, double*, double, double, char const*, int, ImRect*)
000000000021c460 W bool ImGui::SliderBehaviorT<float, float, float>(ImRect const&, unsigned int, int, float*, float, float, char const*, int, ImRect*)
000000000021a218 W bool ImGui::SliderBehaviorT<int, int, float>(ImRect const&, unsigned int, int, int*, int, int, char const*, int, ImRect*)
000000000021aaa4 W bool ImGui::SliderBehaviorT<unsigned int, int, float>(ImRect const&, unsigned int, int, unsigned int*, unsigned int, unsigned int, char const*, int, ImRect*)
000000000021b330 W bool ImGui::SliderBehaviorT<long long, long long, double>(ImRect const&, unsigned int, int, long long*, long long, long long, char const*, int, ImRect*)
000000000021bbc8 W bool ImGui::SliderBehaviorT<unsigned long long, long long, double>(ImRect const&, unsigned int, int, unsigned long long*, unsigned long long, unsigned long long, char const*, int, ImRect*)
00000000001c820c T ImGui::StyleColorsDark(ImGuiStyle*)
000000000021252c T ImGui::TabBarRemoveTab(ImGuiTabBar*, unsigned int)
0000000000213d7c T ImGui::TabItemCalcSize(char const*, bool)
00000000001ee69c T ImGui::TableHeadersRow()
00000000001ed890 T ImGui::TableNextColumn()
00000000001ecf14 T ImGui::TableSetBgColor(int, unsigned int, int)
00000000001fecd8 T ImGui::TempInputScalar(ImRect const&, unsigned int, char const*, int, void*, char const*, void const*, void const*)
00000000001f48d4 T ImGui::TextUnformatted(char const*, char const*)
000000000020f7a8 T ImGui::BeginMainMenuBar()
0000000000189874 T ImGui::CallContextHooks(ImGuiContext*, ImGuiContextHookType)
00000000001a4f5c T ImGui::ClearIniSettings()
000000000020d840 T ImGui::CollapsingHeader(char const*, bool*, int)
000000000020d7c0 T ImGui::CollapsingHeader(char const*, int)
00000000001b29c0 T ImGui::DebugNodeColumns(ImGuiOldColumns*)
00000000001b37c4 T ImGui::DebugNodeStorage(ImGuiStorage*, char const*)
00000000001c2910 W ImGui::DockNodeGetDepth(ImGuiDockNode const*)
00000000001a55a4 T ImGui::FindViewportByID(unsigned int)
0000000000197204 T ImGui::FindWindowByName(char const*)
000000000018902c T ImGui::GetClipboardText()
00000000001c0040 W ImGui::GetCurrentWindow()
00000000001962d8 T ImGui::IsAnyItemFocused()
000000000019625c T ImGui::IsAnyItemHovered()
000000000019cef0 T ImGui::PushButtonRepeat(bool)
000000000018908c T ImGui::SetClipboardText(char const*)
0000000000183fc4 T ImGui::SetNextItemWidth(float)
000000000019d878 T ImGui::SetNextWindowPos(ImVec2 const&, int, ImVec2 const&)
0000000000214664 T ImGui::SetTabItemClosed(char const*)
00000000001f9684 T ImGui::SplitterBehavior(ImRect const&, unsigned int, ImGuiAxis, float*, float*, float, float, float, float)
00000000001c9870 T ImGui::StyleColorsLight(ImGuiStyle*)
00000000001eb248 T ImGui::TableDrawBorders(ImGuiTable*)
00000000001ed0f8 T ImGui::TableGetRowIndex()
00000000001ec450 T ImGui::TableSetupColumn(char const*, int, float, unsigned int)
000000000020c4ec T ImGui::TreeNodeBehavior(unsigned int, int, char const*, char const*)
00000000001fa880 T ImGui::BeginComboPreview()
00000000001a1804 T ImGui::CloseCurrentPopup()
00000000001a1644 T ImGui::ClosePopupToLevel(int, bool)
00000000001b1c48 T ImGui::DebugNodeDockNode(ImGuiDockNode*, char const*)
00000000001b0694 T ImGui::DebugNodeDrawList(ImGuiWindow*, ImGuiViewportP*, ImDrawList const*, char const*)
00000000001b1280 T ImGui::DebugNodeViewport(ImGuiViewportP*)
00000000001ac2dc T ImGui::DockBuilderFinish(unsigned int)
00000000001a3bc4 T ImGui::EndDragDropSource()
00000000001a4518 T ImGui::EndDragDropTarget()
00000000001890e8 T ImGui::GetCurrentContext()
000000000019ffa0 T ImGui::GetCursorStartPos()
000000000021d58c W ImGui::GetInputTextState(unsigned int)
0000000000195d48 T ImGui::GetMouseDragDelta(int, float)
00000000001a2e48 T ImGui::GetNavInputAmount(int, ImGuiInputReadMode)
0000000000185cf8 T ImGui::GetStyleColorName(int)
0000000000185760 T ImGui::GetStyleColorVec4(int)
00000000001a0578 T ImGui::GetTextLineHeight()
000000000019dce0 T ImGui::GetWindowDpiScale()
000000000019dcb8 T ImGui::GetWindowDrawList()
000000000019dd04 T ImGui::GetWindowViewport()
0000000000205e04 T ImGui::InputTextWithHint(char const*, char const*, char*, unsigned long, int, int (*)(ImGuiInputTextCallbackData*), void*)
000000000019606c T ImGui::IsItemDeactivated()
00000000001961f4 T ImGui::IsItemToggledOpen()
000000000019d78c T ImGui::IsWindowAppearing()
000000000019d760 T ImGui::IsWindowCollapsed()
00000000001897c4 T ImGui::RemoveContextHook(ImGuiContext*, unsigned int)
00000000001871e0 T ImGui::RenderFrameBorder(ImVec2, ImVec2, float)
00000000001d7824 T ImGui::RenderMouseCursor(ImDrawList*, ImVec2, float, int, unsigned int, unsigned int, unsigned int)
0000000000186a68 T ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
0000000000186580 T ImGui::RenderTextWrapped(ImVec2, char const*, char const*, float)
00000000001890f8 T ImGui::SetCurrentContext(ImGuiContext*)
000000000018f858 T ImGui::SetNextWindowSize(ImVec2 const&, int)
00000000001a09c0 T ImGui::SetScrollFromPosX(ImGuiWindow*, float, float)
00000000001a0c8c T ImGui::SetScrollFromPosX(float, float)
00000000001a0a50 T ImGui::SetScrollFromPosY(ImGuiWindow*, float, float)
00000000001a0cd0 T ImGui::SetScrollFromPosY(float, float)
00000000001ad798 T ImGui::ShowMetricsWindow(bool*)
0000000000212308 T ImGui::TabBarFindTabByID(ImGuiTabBar*, unsigned int)
0000000000213e80 T ImGui::TabItemBackground(ImDrawList*, ImRect const&, int, unsigned int)
00000000001edd30 T ImGui::TableGetSortSpecs()
00000000001e6d08 T ImGui::TableLoadSettings(ImGuiTable*)
00000000001ec104 T ImGui::TableSaveSettings(ImGuiTable*)
00000000001e772c T ImGui::TableUpdateLayout(ImGuiTable*)
000000000021a1bc W ImGui::TempInputIsActive(unsigned int)
00000000001ab2a0 T ImGui::DockBuilderAddNode(unsigned int, int)
00000000001ab114 T ImGui::DockBuilderGetNode(unsigned int)
00000000001a4dc8 T ImGui::FindWindowSettings(unsigned int)
000000000019fce4 T ImGui::GetCursorScreenPos()
00000000001a44c8 T ImGui::GetDragDropPayload()
0000000000205da0 T ImGui::InputTextMultiline(char const*, char*, unsigned long, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*)
00000000001c49b0 W ImGui::IsActiveIdUsingKey(int)
00000000001f11e4 T ImGui::PushColumnClipRect(int)
000000000018732c T ImGui::RenderNavHighlight(ImRect const&, unsigned int, int)
0000000000186b30 T ImGui::RenderTextEllipsis(ImDrawList*, ImVec2 const&, ImVec2 const&, float, float, char const*, char const*, ImVec2 const*)
00000000001948e8 T ImGui::SetCurrentViewport(ImGuiWindow*, ImGuiViewportP*)
000000000019fd18 T ImGui::SetCursorScreenPos(ImVec2 const&)
00000000001a3c78 T ImGui::SetDragDropPayload(char const*, void const*, unsigned long, int)
000000000019dc2c T ImGui::SetNextWindowClass(ImGuiWindowClass const*)
000000000019db20 T ImGui::SetNextWindowFocus()
0000000000198a4c T ImGui::SetWindowCollapsed(ImGuiWindow*, bool, int)
000000000019d7b8 T ImGui::SetWindowCollapsed(char const*, bool, int)
000000000019d718 T ImGui::SetWindowCollapsed(bool, int)
000000000019ddc4 T ImGui::SetWindowFontScale(float)
00000000001d07bc T ImGui::ShadeVertsLinearUV(ImDrawList*, int, int, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, bool)
00000000001c8ddc T ImGui::StyleColorsClassic(ImGuiStyle*)
0000000000212680 T ImGui::TabBarQueueReorder(ImGuiTabBar*, ImGuiTabItem const*, int)
00000000001ece04 T ImGui::TableGetCellBgRect(ImGuiTable const*, int)
00000000001ecbb0 T ImGui::TableGetColumnName(ImGuiTable const*, int)
00000000001ecb3c T ImGui::TableGetColumnName(int)
00000000001e6ccc T ImGui::TableResetSettings(ImGuiTable*)
00000000001e94b8 T ImGui::TableUpdateBorders(ImGuiTable*)
000000000020d4e0 T ImGui::TreePushOverrideID(unsigned int)
00000000001c12e0 W ImGui::WindowRectAbsToRel(ImGuiWindow*, ImRect const&)
00000000001bd40c W ImGui::WindowRectRelToAbs(ImGuiWindow*, ImRect const&)
00000000001a37ac T ImGui::BeginDragDropSource(int)
00000000001a4070 T ImGui::BeginDragDropTarget()
0000000000188f70 T ImGui::CalcWrapWidthForPos(ImVec2 const&, float)
0000000000195f58 T ImGui::CaptureMouseFromApp(bool)
00000000001abc30 T ImGui::DockBuilderCopyNode(unsigned int, unsigned int, ImVector<unsigned int>*)
0000000000193a1c T ImGui::DockContextShutdown(ImGuiContext*)
00000000001bed38 W ImGui::DockNodeGetRootNode(ImGuiDockNode*)
00000000001f1344 T ImGui::FindOrCreateColumns(ImGuiWindow*, unsigned int)
00000000001860d8 T ImGui::FindRenderedTextEnd(char const*, char const*)
00000000001a4eac T ImGui::FindSettingsHandler(char const*)
00000000001a0648 T ImGui::GetContentRegionMax()
00000000001957bc T ImGui::GetKeyPressedAmount(int, float, float)
00000000001a3050 T ImGui::GetNavInputAmount2d(int, ImGuiInputReadMode, float, float)
0000000000188ce4 T ImGui::IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool)
00000000001d7e2c T ImGui::RenderArrowDockMenu(ImDrawList*, ImVec2, float, unsigned int)
0000000000186678 T ImGui::RenderTextClippedEx(ImDrawList*, ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
0000000000195e78 T ImGui::ResetMouseDragDelta(int)
000000000020bffc T ImGui::SetColorEditOptions(int)
00000000001963a0 T ImGui::SetItemAllowOverlap()
000000000019e1b0 T ImGui::SetItemDefaultFocus()
000000000019dbc4 T ImGui::SetNextWindowDockID(unsigned int, int)
000000000019da28 T ImGui::SetNextWindowScroll(ImVec2 const&)
00000000001afd50 T ImGui::ShowStackToolWindow(bool*)
00000000001ecaf0 T ImGui::TableGetColumnCount()
00000000001ecd50 T ImGui::TableGetColumnFlags(int)
00000000001ed51c T ImGui::TableGetColumnIndex()
00000000001ed564 T ImGui::TableSetColumnIndex(int)
00000000001e742c T ImGui::TableSetColumnWidth(int, float)
00000000001ef238 T ImGui::TableSettingsCreate(unsigned int, int)
00000000001e9adc T ImGui::TableSortSpecsBuild(ImGuiTable*)
000000000020f510 T ImGui::BeginViewportSideBar(char const*, ImGuiViewport*, int, float, int)
0000000000183318 T ImGui::ColorConvertHSVtoRGB(float, float, float, float&, float&, float&)
00000000001831ac T ImGui::ColorConvertRGBtoHSV(float, float, float, float&, float&, float&)
00000000001fb7ec T ImGui::DataTypeFormatString(char*, int, int, void const*, char const*)
00000000001b05e4 T ImGui::DebugNodeWindowsList(ImVector<ImGuiWindow*>*, char const*)
00000000001c24e4 W ImGui::DebugStartItemPicker()
00000000001aba30 T ImGui::DockBuilderSplitNode(unsigned int, int, float, unsigned int*, unsigned int*)
00000000001a9710 T ImGui::DockContextGenNodeID(ImGuiContext*)
00000000001a978c T ImGui::DockContextQueueDock(ImGuiContext*, ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, int, float, bool)
00000000001c1228 W ImGui::GetCurrentWindowRead()
000000000018bc18 T ImGui::GetMergedKeyModFlags()
000000000018af10 T ImGui::GetTopMostPopupModal()
00000000001f6ed0 T ImGui::GetWindowScrollbarID(ImGuiWindow*, ImGuiAxis)
0000000000195aa8 T ImGui::IsMouseDoubleClicked(int)
0000000000195b1c T ImGui::IsMouseTripleClicked(int)
000000000019d3e0 T ImGui::IsWindowNavFocusable(ImGuiWindow*)
000000000018a704 T ImGui::MarkIniSettingsDirty(ImGuiWindow*)
00000000001a4c94 T ImGui::MarkIniSettingsDirty()
0000000000196490 T ImGui::NavMoveRequestCancel()
000000000019e03c T ImGui::NavMoveRequestSubmit(int, int, int, int)
00000000001a1e60 T ImGui::OpenPopupOnItemClick(char const*, int)
00000000001f12d4 T ImGui::PopColumnsBackground()
00000000001a01a0 T ImGui::PushMultiItemsWidths(int, float)
00000000002216e8 W float ImGui::ScaleRatioFromValueT<double, double, double>(int, double, double, double, bool, float, float)
0000000000220d50 W float ImGui::ScaleRatioFromValueT<float, float, float>(int, float, float, float, bool, float, float)
000000000021e2a8 W float ImGui::ScaleRatioFromValueT<int, int, float>(int, int, int, int, bool, float, float)
000000000021ecf0 W float ImGui::ScaleRatioFromValueT<unsigned int, int, float>(int, unsigned int, unsigned int, unsigned int, bool, float, float)
000000000021f738 W float ImGui::ScaleRatioFromValueT<long long, long long, double>(int, long long, long long, long long, bool, float, float)
0000000000220244 W float ImGui::ScaleRatioFromValueT<unsigned long long, long long, double>(int, unsigned long long, unsigned long long, unsigned long long, bool, float, float)
0000000000221b30 W double ImGui::ScaleValueFromRatioT<double, double, double>(int, float, double, double, bool, float, float)
0000000000221158 W float ImGui::ScaleValueFromRatioT<float, float, float>(int, float, float, float, bool, float, float)
000000000021e718 W int ImGui::ScaleValueFromRatioT<int, int, float>(int, float, int, int, bool, float, float)
000000000021f160 W unsigned int ImGui::ScaleValueFromRatioT<unsigned int, int, float>(int, float, unsigned int, unsigned int, bool, float, float)
000000000021fc18 W long long ImGui::ScaleValueFromRatioT<long long, long long, double>(int, float, long long, long long, bool, float, float)
0000000000220724 W unsigned long long ImGui::ScaleValueFromRatioT<unsigned long long, long long, double>(int, float, unsigned long long, unsigned long long, bool, float, float)
000000000019df5c T ImGui::SetKeyboardFocusHere(int)
000000000019db4c T ImGui::SetNextWindowBgAlpha(float)
000000000019d688 T ImGui::SetWindowHitTestHole(ImGuiWindow*, ImVec2 const&, ImVec2 const&)
000000000021294c T ImGui::TabBarProcessReorder(ImGuiTabBar*)
00000000001e6bb0 T ImGui::TableBeginInitMemory(ImGuiTable*, int)
00000000001e97b4 T ImGui::TableDrawContextMenu(ImGuiTable*)
00000000001eb134 T ImGui::TableOpenContextMenu(int)
00000000001a421c T ImGui::AcceptDragDropPayload(char const*, int)
00000000001a1f20 T ImGui::BeginPopupContextItem(char const*, int)
00000000001a20cc T ImGui::BeginPopupContextVoid(char const*, int)
000000000018b0a8 T ImGui::ClosePopupsOverWindow(ImGuiWindow*, bool)
0000000000208e40 T ImGui::ColorEditOptionsPopup(float const*, int)
00000000001a6134 T ImGui::DestroyPlatformWindow(ImGuiViewportP*)
00000000001ab074 T ImGui::DockBuilderDockWindow(char const*, unsigned int)
00000000001ab36c T ImGui::DockBuilderRemoveNode(unsigned int)
00000000001ab14c T ImGui::DockBuilderSetNodePos(unsigned int, ImVec2)
00000000001a6d74 T ImGui::DockContextClearNodes(ImGuiContext*, unsigned int, bool)
0000000000193884 T ImGui::DockContextInitialize(ImGuiContext*)
00000000001aaea8 T ImGui::DockSpaceOverViewport(ImGuiViewport const*, int, ImGuiWindowClass const*)
0000000000189154 T ImGui::GetAllocatorFunctions(void* (**)(unsigned long, void*), void (**)(void*, void*), void**)
0000000000189a5c T ImGui::GetBackgroundDrawList(ImGuiViewport*)
0000000000189c04 T ImGui::GetBackgroundDrawList()
0000000000196800 T ImGui::GetContentRegionAvail()
0000000000189c6c T ImGui::GetDrawListSharedData()
00000000001c28e8 W ImGui::GetForegroundDrawList(ImGuiWindow*)
0000000000189c3c T ImGui::GetForegroundDrawList(ImGuiViewport*)
0000000000188e1c T ImGui::GetForegroundDrawList()
00000000001c4938 W ImGui::IsActiveIdUsingNavDir(int)
00000000001a2d98 T ImGui::NavMoveRequestForward(int, int, int, int)
000000000019cedc T ImGui::PopAllowKeyboardFocus()
00000000001f125c T ImGui::PushColumnsBackground()
00000000001d7bf8 T ImGui::RenderArrowPointingAt(ImDrawList*, ImVec2, ImVec2, int, unsigned int)
0000000000193924 T ImGui::SaveIniSettingsToDisk(char const*)
0000000000189118 T ImGui::SetAllocatorFunctions(void* (*)(unsigned long, void*), void (*)(void*, void*), void*)
000000000019db88 T ImGui::SetNextWindowViewport(unsigned int)
00000000001ef410 T ImGui::TableGetBoundSettings(ImGuiTable*)
00000000001ecec8 T ImGui::TableGetHoveredColumn()
00000000001ecc50 T ImGui::TableSetColumnEnabled(int, bool)
00000000001ef384 T ImGui::TableSettingsFindByID(unsigned int)
00000000001a5b0c T ImGui::UpdatePlatformWindows()
0000000000195f20 T ImGui::CaptureKeyboardFromApp(bool)
00000000001f09ec T ImGui::DebugNodeTableSettings(ImGuiTableSettings*)
00000000001939b0 T ImGui::DestroyPlatformWindows()
00000000001ab1d8 T ImGui::DockBuilderSetNodeSize(unsigned int, ImVec2)
00000000001aa4e0 T ImGui::DockNodeEndAmendTabBar()
00000000001a0408 T ImGui::GetContentRegionMaxAbs()
000000000019dd9c T ImGui::GetFontTexUvWhitePixel()
00000000001f6f2c T ImGui::GetWindowScrollbarRect(ImGuiWindow*, ImGuiAxis)
0000000000196228 T ImGui::IsItemToggledSelection()
000000000019cea4 T ImGui::PushAllowKeyboardFocus(bool)
00000000001d7fb8 T ImGui::RenderRectFilledRangeH(ImDrawList*, ImRect const&, unsigned int, float, float, float)
0000000000221fa8 W double ImGui::RoundScalarWithFormatT<double, double>(char const*, int, double)
0000000000221590 W float ImGui::RoundScalarWithFormatT<float, float>(char const*, int, float)
000000000021eb9c W int ImGui::RoundScalarWithFormatT<int, int>(char const*, int, int)
000000000021f5e4 W unsigned int ImGui::RoundScalarWithFormatT<unsigned int, int>(char const*, int, unsigned int)
00000000002200f0 W long long ImGui::RoundScalarWithFormatT<long long, long long>(char const*, int, long long)
0000000000220bfc W unsigned long long ImGui::RoundScalarWithFormatT<unsigned long long, long long>(char const*, int, unsigned long long)
00000000001a5920 T ImGui::ScaleWindowsInViewport(ImGuiViewportP*, float)
0000000000196418 T ImGui::SetItemUsingMouseWheel()
000000000019da6c T ImGui::SetNextWindowCollapsed(bool, int)
0000000000189c84 T ImGui::StartMouseMovingWindow(ImGuiWindow*)
00000000001efffc T ImGui::TableGcCompactSettings()
00000000001e9cd8 T ImGui::TableGetColumnResizeID(ImGuiTable const*, int, int)
00000000001e8fe0 T ImGui::TableGetMaxColumnWidth(ImGuiTable const*, int)
00000000001eb898 T ImGui::TableMergeDrawChannels(ImGuiTable*)
00000000001e91e0 T ImGui::TableSetupDrawChannels(ImGuiTable*)
00000000001ec7a4 T ImGui::TableSetupScrollFreeze(int, int)
00000000001ee214 T ImGui::TableSortSpecsSanitize(ImGuiTable*)
000000000020d340 T ImGui::TreeNodeBehaviorIsOpen(unsigned int, int)
00000000001f9178 T ImGui::AlignTextToFramePadding()
00000000001a2018 T ImGui::BeginPopupContextWindow(char const*, int)
000000000019c474 T ImGui::BringWindowToFocusFront(ImGuiWindow*)
00000000001a1758 T ImGui::ClosePopupsExceptModals()
0000000000183080 T ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
0000000000182fe8 T ImGui::ColorConvertU32ToFloat4(unsigned int)
000000000020b6dc T ImGui::ColorPickerOptionsPopup(float const*, int)
00000000001a4cd0 T ImGui::CreateNewWindowSettings(char const*)
00000000001fc718 T ImGui::DataTypeApplyOpFromText(char const*, char const*, int, void*, char const*)
00000000001b22f0 T ImGui::DebugNodeWindowSettings(ImGuiWindowSettings*)
00000000001a7414 T ImGui::DockContextRebuildNodes(ImGuiContext*)
00000000001f0cac T ImGui::GetColumnNormFromOffset(ImGuiOldColumns const*, float)
00000000001f0c7c T ImGui::GetColumnOffsetFromNorm(ImGuiOldColumns const*, float)
0000000000197b1c T ImGui::GetWindowResizeBorderID(ImGuiWindow*, int)
0000000000197a68 T ImGui::GetWindowResizeCornerID(ImGuiWindow*, int)
00000000001c48f8 W ImGui::IsActiveIdUsingNavInput(int)
00000000001a5024 T ImGui::LoadIniSettingsFromDisk(char const*)
00000000001a54a8 T ImGui::SaveIniSettingsToMemory(unsigned long*)
00000000001e7060 T ImGui::TableBeginApplyRequests(ImGuiTable*)
00000000001e8ef4 T ImGui::TableGetColumnWidthAuto(ImGuiTable*, ImGuiTableColumn*)
00000000001ee5d4 T ImGui::TableGetHeaderRowHeight()
000000000019c790 T ImGui::BringWindowToDisplayBack(ImGuiWindow*)
00000000001abfe4 T ImGui::DockBuilderCopyDockSpace(unsigned int, unsigned int, ImVector<char const*>*)
00000000001aa3f8 T ImGui::DockNodeBeginAmendTabBar(ImGuiDockNode*)
0000000000195b90 T ImGui::IsMouseDragPastThreshold(int, float)
00000000001a491c T ImGui::LogSetNextTextDecoration(char const*, char const*)
00000000001d8630 T ImGui::RenderRectFilledWithHole(ImDrawList*, ImRect, ImRect, unsigned int, float)
000000000019d9cc T ImGui::SetNextWindowContentSize(ImVec2 const&)
00000000001a3ee8 T ImGui::BeginDragDropTargetCustom(ImRect const&, unsigned int)
000000000019c648 T ImGui::BringWindowToDisplayFront(ImGuiWindow*)
000000000019568c T ImGui::CalcTypematicRepeatAmount(float, float, float, float)
000000000019723c T ImGui::CalcWindowNextAutoFitSize(ImGuiWindow*)
000000000019efe0 T ImGui::ErrorCheckEndFrameRecover(void (*)(void*, char const*, ...), void*)
0000000000199298 T ImGui::FindBestWindowPosForPopup(ImGuiWindow*)
00000000001a0604 T ImGui::GetFrameHeightWithSpacing()
00000000001a289c T ImGui::GetPopupAllowedExtentRect(ImGuiWindow*)
000000000020d6f8 T ImGui::GetTreeNodeToLabelSpacing()
00000000001a0720 T ImGui::GetWindowContentRegionMax()
00000000001a06d0 T ImGui::GetWindowContentRegionMin()
00000000001a5080 T ImGui::LoadIniSettingsFromMemory(char const*, unsigned long)
00000000001a3310 T ImGui::NavInitRequestApplyResult()
00000000001a33e8 T ImGui::NavMoveRequestApplyResult()
00000000001a1dc8 T ImGui::NavMoveRequestTryWrapping(ImGuiWindow*, int)
00000000001edc70 T ImGui::TablePopBackgroundChannel()
000000000018a3d8 T ImGui::DockContextQueueUndockNode(ImGuiContext*, ImGuiDockNode*)
000000000019f100 T ImGui::ErrorCheckEndWindowRecover(void (*)(void*, char const*, ...), void*)
00000000001a4e54 T ImGui::FindOrCreateWindowSettings(char const*)
000000000018f2c4 T ImGui::FocusTopMostWindowUnderOne(ImGuiWindow*, ImGuiWindow*)
0000000000199c78 T ImGui::GetViewportPlatformMonitor(ImGuiViewport*)
0000000000196114 T ImGui::IsItemDeactivatedAfterEdit()
000000000018a064 T ImGui::SetActiveIdUsingNavAndKeys()
00000000002141d0 T ImGui::TabItemLabelAndCloseButton(ImDrawList*, ImRect const&, int, ImVec2, char const*, unsigned int, unsigned int, bool, bool*, bool*)
00000000001edbf0 T ImGui::TablePushBackgroundChannel()
00000000001edb64 T ImGui::TableSetColumnWidthAutoAll(ImGuiTable*)
00000000001a56ec T ImGui::TranslateWindowsInViewport(ImGuiViewportP*, ImVec2 const&, ImVec2 const&)
000000000019bb54 T ImGui::BeginDockableDragDropSource(ImGuiWindow*)
000000000019bd34 T ImGui::BeginDockableDragDropTarget(ImGuiWindow*)
00000000001a2178 T ImGui::FindBestWindowPosForPopupEx(ImVec2 const&, ImVec2 const&, int*, ImRect const&, ImRect const&, ImGuiPopupPositionPolicy)
00000000001eddc4 T ImGui::TableFixColumnSortDirection(ImGuiTable*, ImGuiTableColumn*)
00000000001edfd8 T ImGui::TableSetColumnSortDirection(int, int, bool)
00000000001ef4cc T ImGui::TableSettingsInstallHandler(ImGuiContext*)
00000000001ad170 T ImGui::DebugRenderViewportThumbnail(ImDrawList*, ImGuiViewportP*, ImRect const&)
00000000001a984c T ImGui::DockContextQueueUndockWindow(ImGuiContext*, ImGuiWindow*)
00000000001a5648 T ImGui::FindViewportByPlatformHandle(void*)
00000000001a059c T ImGui::GetTextLineHeightWithSpacing()
0000000000198268 T ImGui::GetWindowAlwaysWantOwnTabBar(ImGuiWindow*)
00000000001a2c8c T ImGui::NavMoveRequestButNoResultYet()
00000000001a628c T ImGui::RenderPlatformWindowsDefault(void*, void*)
000000000019d94c T ImGui::SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeCallbackData*), void*)
000000000018a0d4 T ImGui::StartMouseMovingWindowOrNode(ImGuiWindow*, ImGuiDockNode*, bool)
00000000001abe94 T ImGui::DockBuilderCopyWindowSettings(char const*, char const*)
0000000000188318 T ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow*)
0000000000188240 T ImGui::GcCompactTransientMiscBuffers()
00000000001e9d60 T ImGui::TableSetColumnWidthAutoSingle(ImGuiTable*, int)
000000000019edfc T ImGui::DebugCheckVersionAndDataLayout(char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
000000000018ab14 T ImGui::IsDragDropPayloadBeingAccepted()
0000000000212704 T ImGui::TabBarQueueReorderFromMousePos(ImGuiTabBar*, ImGuiTabItem const*, ImVec2)
00000000001efec4 T ImGui::TableGcCompactTransientBuffers(ImGuiTable*)
00000000001effc8 T ImGui::TableGcCompactTransientBuffers(ImGuiTableTempData*)
0000000000197bdc T ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow*, int, ImGuiWindow*)
00000000001a7020 T ImGui::DockBuilderRemoveNodeChildNodes(unsigned int)
000000000018828c T ImGui::GcCompactTransientWindowBuffers(ImGuiWindow*)
00000000001edec4 T ImGui::TableGetColumnNextSortDirection(ImGuiTableColumn*)
000000000018ab68 T ImGui::UpdateMouseMovingWindowEndFrame()
000000000018a428 T ImGui::UpdateMouseMovingWindowNewFrame()
00000000001a989c T ImGui::DockContextCalcDropPosForDocking(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, int, bool, ImVec2*)
000000000018f408 T ImGui::DockContextNewFrameUpdateDocking(ImGuiContext*)
0000000000195c5c T ImGui::GetMousePosOnOpeningCurrentPopup()
000000000019e168 T ImGui::NavMoveRequestResolveWithLastItem(ImGuiNavItemData*)
00000000001ed4a0 T ImGui::SetWindowClipRectBeforeSetChannel(ImGuiWindow*, ImRect const&)
00000000001ed98c T ImGui::TableUpdateColumnsWeightFromWidth(ImGuiTable*)
00000000001a6de4 T ImGui::DockBuilderRemoveNodeDockedWindows(unsigned int, bool)
000000000018eb38 T ImGui::DockContextNewFrameUpdateUndocking(ImGuiContext*)
000000000018b22c T ImGui::UpdateHoveredWindowAndCaptureFlags()
00000000001d8a5c T ImGui::RenderColorRectWithAlphaCheckerboard(ImDrawList*, ImVec2, ImVec2, unsigned int, float, ImVec2, float, int)
00000000001b34b0 T ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList*, ImDrawList const*, ImDrawCmd const*, bool, bool)
00000000001d13f8 T ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawList*, int, int, ImVec2, ImVec2, unsigned int, unsigned int)
000000000019421c T ImGui::End()
0000000000212390 T ImGui::TabBarFindMostRecentlySelectedTabForActiveWindow(ImGuiTabBar*)
00000000001f4904 T ImGui::Text(char const*, ...)
000000000018f900 T ImGui::Begin(char const*, bool*, int)
00000000001fac34 T ImGui::Combo(char const*, int*, bool (*)(void*, int, char const**), void*, int, int)
00000000001fb590 T ImGui::Combo(char const*, int*, char const* const*, int, int)
00000000001fb634 T ImGui::Combo(char const*, int*, char const*, int)
00000000001f9030 T ImGui::Dummy(ImVec2 const&)
000000000019ec54 T ImGui::GetID(char const*)
000000000019ec94 T ImGui::GetID(char const*, char const*)
000000000019ecd8 T ImGui::GetID(void const*)
0000000000189934 T ImGui::GetIO()
00000000001f7930 T ImGui::Image(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&)
000000000019ebf4 T ImGui::PopID()
00000000001f49b4 T ImGui::TextV(char const*, std::__va_list)
000000000020ecb0 T ImGui::Value(char const*, bool)
000000000020ed68 T ImGui::Value(char const*, float, char const*)
000000000020ed00 T ImGui::Value(char const*, int)
000000000020ed34 T ImGui::Value(char const*, unsigned int)
00000000001f8e34 T ImGui::Bullet()
00000000001f621c T ImGui::Button(char const*, ImVec2 const&)
000000000019ffe4 T ImGui::Indent(float)
000000000020e058 T ImGui::PlotEx(ImGuiPlotType, char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
000000000019e970 T ImGui::PushID(char const*)
000000000019e9cc T ImGui::PushID(char const*, char const*)
000000000019ea2c T ImGui::PushID(void const*)
000000000019ea84 T ImGui::PushID(int)
0000000000194d84 T ImGui::Render()
00000000001f41d4 T ImGui::TextEx(char const*, char const*, int)
00000000001f21e4 T ImGui::Columns(int, char const*, bool)
00000000001ff4ec T ImGui::DragInt(char const*, int*, float, int, int, char const*, int)
0000000000210504 T ImGui::EndMenu()
000000000019dd74 T ImGui::GetFont()
0000000000189a34 T ImGui::GetTime()
0000000000196f0c T ImGui::ItemAdd(ImRect const&, unsigned int, ImRect const*, int)
000000000020de4c T ImGui::ListBox(char const*, int*, bool (*)(void*, int, char const**), void*, int, int)
000000000020ddec T ImGui::ListBox(char const*, int*, char const* const*, int, int)
00000000001a45a8 T ImGui::LogText(char const*, ...)
0000000000181d70 T ImGui::MemFree(void*)
00000000001f90bc T ImGui::NewLine()
000000000019cb14 T ImGui::PopFont()
00000000001f8fe0 T ImGui::Spacing()
000000000020d5c0 T ImGui::TreePop()
00000000001f5f14 T ImGui::ButtonEx(char const*, ImVec2 const&, int)
00000000001f8014 T ImGui::Checkbox(char const*, bool*)
00000000001ff550 T ImGui::DragInt2(char const*, int*, float, int, int, char const*, int)
00000000001ff5b8 T ImGui::DragInt3(char const*, int*, float, int, int, char const*, int)
00000000001ff620 T ImGui::DragInt4(char const*, int*, float, int, int, char const*, int)
0000000000196a8c T ImGui::EndChild()
00000000001fa86c T ImGui::EndCombo()
0000000000193c9c T ImGui::EndFrame()
000000000019f498 T ImGui::EndGroup()
00000000001a1a9c T ImGui::EndPopup()
00000000001e9dbc T ImGui::EndTable()
0000000000185648 T ImGui::GetStyle()
0000000000205b30 T ImGui::InputInt(char const*, int*, int, int, int)
000000000019f950 T ImGui::ItemSize(ImRect const&, float)
0000000000196d3c T ImGui::ItemSize(ImVec2 const&, float)
00000000001a47d8 T ImGui::LogBegin(ImGuiLogType, int)
00000000001a476c T ImGui::LogTextV(char const*, std::__va_list)
00000000001a4958 T ImGui::LogToTTY(int)
0000000000181c60 T ImGui::MemAlloc(unsigned long)
0000000000210be4 T ImGui::MenuItem(char const*, char const*, bool*, bool)
0000000000210b8c T ImGui::MenuItem(char const*, char const*, bool, bool)
000000000018bc9c T ImGui::NewFrame()
000000000019ca98 T ImGui::PushFont(ImFont*)
000000000019f830 T ImGui::SameLine(float, float)
00000000001a29fc T ImGui::SetNavID(unsigned int, ImGuiNavLayer, unsigned int, ImRect const&)
0000000000189414 T ImGui::Shutdown(ImGuiContext*)
000000000020c478 T ImGui::TreeNode(char const*)
000000000020c134 T ImGui::TreeNode(char const*, char const*, ...)
000000000020c2d8 T ImGui::TreeNode(void const*, char const*, ...)
000000000020d538 T ImGui::TreePush(char const*)
000000000020d57c T ImGui::TreePush(void const*)
00000000001a007c T ImGui::Unindent(float)
00000000002104c4 T ImGui::BeginMenu(char const*, bool)
00000000001aa878 T ImGui::DockSpace(unsigned int, ImVec2 const&, int, ImGuiWindowClass const*)
00000000001ff0ac T ImGui::DragFloat(char const*, float*, float, float, float, char const*, int)
00000000002112d8 T ImGui::EndTabBar()
0000000000205bf8 T ImGui::InputInt2(char const*, int*, int)
0000000000205c48 T ImGui::InputInt3(char const*, int*, int)
0000000000205c98 T ImGui::InputInt4(char const*, int*, int)
0000000000205740 T ImGui::InputText(char const*, char*, unsigned long, int, int (*)(ImGuiInputTextCallbackData*), void*)
00000000001955f4 T ImGui::IsKeyDown(int)
00000000001f4fa0 T ImGui::LabelText(char const*, char const*, ...)
000000000019c16c T ImGui::LogFinish()
00000000001a49bc T ImGui::LogToFile(int, char const*)
00000000001a11e4 T ImGui::OpenPopup(char const*, int)
00000000001a13ec T ImGui::OpenPopup(unsigned int, int)
000000000020eb30 T ImGui::PlotLines(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
000000000020ea60 T ImGui::PlotLines(char const*, float const*, int, int, char const*, float, float, ImVec2, int)
00000000001f704c T ImGui::Scrollbar(ImGuiAxis)
00000000001f9614 T ImGui::Separator()
0000000000200a84 T ImGui::SliderInt(char const*, int*, int, int, char const*, int)
0000000000212c64 T ImGui::TabItemEx(ImGuiTabBar*, char const*, bool*, int, ImGuiWindow*)
000000000020d0a0 T ImGui::TreeNodeV(char const*, char const*, std::__va_list)
000000000020d0ec T ImGui::TreeNodeV(void const*, char const*, std::__va_list)
0000000000194874 t ImGui::NavEndFrame()
00000000001b4984 t ImGui::NavScoreItem(ImGuiNavItemData*)
0000000000211498 t ImGui::TabBarLayout(ImGuiTabBar*)
00000000001a8450 t ImGui::DockNodeUpdate(ImGuiDockNode*)
000000000019f98c t ImGui::NavProcessItem()
000000000018d004 t ImGui::UpdateSettings()
00000000001b71b8 t ImGui::DestroyViewport(ImGuiViewportP*)
00000000001b6624 t ImGui::NavRestoreLayer(ImGuiNavLayer)
0000000000213cd8 t ImGui::TabBarCalcTabID(ImGuiTabBar*, char const*, ImGuiWindow*)
000000000018ece0 t ImGui::UpdateMouseWheel()
0000000000199598 t ImGui::AddUpdateViewport(ImGuiWindow*, unsigned int, ImVec2 const&, ImVec2 const&, int)
00000000001b7b14 t ImGui::DockNodeAddTabBar(ImGuiDockNode*)
00000000001b7774 t ImGui::DockNodeAddWindow(ImGuiDockNode*, ImGuiWindow*, bool)
00000000001b8c4c t ImGui::DockNodeTreeMerge(ImGuiContext*, ImGuiDockNode*, ImGuiDockNode*)
00000000001b7cf8 t ImGui::DockNodeTreeSplit(ImGuiContext*, ImGuiDockNode*, ImGuiAxis, int, float, ImGuiDockNode*)
0000000000216b78 t ImGui::TabBarScrollClamp(ImGuiTabBar*, float)
0000000000216938 t ImGui::TabBarScrollToTab(ImGuiTabBar*, unsigned int, ImGuiTabBarSection*)
000000000018e558 t ImGui::UpdateMouseInputs()
00000000001aad80 t ImGui::DockContextAddNode(ImGuiContext*, unsigned int)
00000000001b5038 t ImGui::NavUpdateWindowing()
00000000001ac614 t ImGui::DockNodeGetTabOrder(ImGuiWindow*)
00000000001ab6fc t ImGui::DockNodeMoveWindows(ImGuiDockNode*, ImGuiDockNode*)
00000000001b91ec t ImGui::DockNodeRemoveTabBar(ImGuiDockNode*)
00000000001aa4fc t ImGui::DockNodeRemoveWindow(ImGuiDockNode*, ImGuiWindow*, unsigned int)
00000000001b9c18 t ImGui::DockNodeUpdateTabBar(ImGuiDockNode*, ImGuiWindow*)
000000000019c958 t ImGui::FindWindowFocusIndex(ImGuiWindow*)
00000000001a2cf4 t ImGui::NavApplyItemToResult(ImGuiNavItemData*)
0000000000198ac4 t ImGui::WindowSelectViewport(ImGuiWindow*)
00000000001ab430 t ImGui::DockContextRemoveNode(ImGuiContext*, ImGuiDockNode*, bool)
00000000001ac698 t ImGui::DockNodeIsDropAllowed(ImGuiWindow*, ImGuiWindow*)
000000000021478c t ImGui::TabBarCalcMaxTabWidth()
00000000001a7dd0 t ImGui::DockContextProcessDock(ImGuiContext*, ImGuiDockRequest*)
00000000001bbc60 t ImGui::DockNodeCalcSplitRects(ImVec2&, ImVec2&, ImVec2&, ImVec2&, int, ImVec2)
00000000001b93c0 t ImGui::DockNodeFindWindowByID(ImGuiDockNode*, unsigned int)
00000000001b922c t ImGui::DockNodeHideHostWindow(ImGuiDockNode*)
00000000001b80cc t ImGui::DockNodeMoveChildNodes(ImGuiDockNode*, ImGuiDockNode*)
00000000001a1418 t ImGui::NavCalcPreferredRefPos()
00000000001b5af4 t ImGui::NavUpdateCancelRequest()
000000000021660c t ImGui::TabBarScrollingButtons(ImGuiTabBar*)
00000000001a9758 t ImGui::DockContextFindNodeByID(ImGuiContext*, unsigned int)
000000000019c8a0 t ImGui::NavUpdateAnyRequestFlag()
00000000001b66d8 t ImGui::NavUpdatePageUpPageDown()
000000000019ab90 t ImGui::RenderWindowDecorations(ImGuiWindow*, ImRect const&, bool, bool, int, unsigned int const*, float)
0000000000194b60 t ImGui::UpdateViewportsEndFrame()
000000000018d104 t ImGui::UpdateViewportsNewFrame()
00000000001998c0 t ImGui::WindowSyncOwnedViewport(ImGuiWindow*, ImGuiWindow*)
00000000001bb3ac t ImGui::DockNodeCalcTabBarLayout(ImGuiDockNode const*, ImRect*, ImRect*, ImVec2*, ImVec2*)
00000000001a99e4 t ImGui::DockNodePreviewDockSetup(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, ImGuiDockPreviewData*, bool, bool)
00000000001bb120 t ImGui::DockNodeUpdateWindowMenu(ImGuiDockNode*, ImGuiTabBar*)
00000000001b43c8 t ImGui::RenderWindowOuterBorders(ImGuiWindow*)
000000000021641c t ImGui::TabBarTabListPopupButton(ImGuiTabBar*)
0000000000199d04 t ImGui::UpdateWindowManualResize(ImGuiWindow*, ImVec2 const&, int*, int, unsigned int*, ImRect const&)
00000000001ac82c t ImGui::DockNodePreviewDockRender(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, ImGuiDockPreviewData const*)
00000000001b826c t ImGui::DockNodeTreeUpdatePosSize(ImGuiDockNode*, ImVec2, ImVec2, bool)
00000000001b9048 t ImGui::DockNodeUpdateForRootNode(ImGuiDockNode*)
00000000001b7b84 t ImGui::DockNodeUpdateVisibleFlag(ImGuiDockNode*)
00000000001b7668 t ImGui::FindPlatformMonitorForPos(ImVec2 const&)
00000000001b6b34 t ImGui::NavUpdateWindowingOverlay()
000000000018f594 t ImGui::UpdateDebugToolItemPicker()
00000000001b7730 t ImGui::DockNodeGetHostWindowTitle(ImGuiDockNode*, char*, int)
00000000001b9470 t ImGui::DockNodeTreeUpdateSplitter(ImGuiDockNode*)
00000000001b744c t ImGui::FindPlatformMonitorForRect(ImRect const&)
00000000001b5cf0 t ImGui::NavUpdateCreateMoveRequest()
00000000001ac314 t ImGui::DockContextBindNodeToWindow(ImGuiContext*, ImGuiWindow*)
000000000018f69c t ImGui::UpdateDebugToolStackQueries()
00000000001a7960 t ImGui::DockContextProcessUndockNode(ImGuiContext*, ImGuiDockNode*)
00000000001bc654 t ImGui::DockSettingsFindNodeSettings(ImGuiContext*, unsigned int)
00000000001a694c t ImGui::DockSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
00000000001a63dc t ImGui::DockSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
00000000001a6478 t ImGui::DockSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
00000000001a642c t ImGui::DockSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
00000000001a69b4 t ImGui::DockSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
00000000001a3398 t ImGui::NavRestoreHighlightAfterMove()
000000000019c9fc t ImGui::NavRestoreLastChildNavWindow(ImGuiWindow*)
000000000019b5c4 t ImGui::RenderWindowTitleBarContents(ImGuiWindow*, ImRect const&, char const*, bool*)
00000000001b8fb8 t ImGui::DockNodeApplyPosSizeToWindows(ImGuiDockNode*)
0000000000194484 t ImGui::EndFrameDrawDimmedBackgrounds()
00000000001b62b8 t ImGui::NavUpdateCreateTabbingRequest()
00000000001b7318 t ImGui::UpdateViewportPlatformMonitor(ImGuiViewportP*)
00000000001a786c t ImGui::DockContextProcessUndockWindow(ImGuiContext*, ImGuiWindow*, bool)
00000000001b92e4 t ImGui::DockNodeStartMouseMovingWindow(ImGuiDockNode*, ImGuiWindow*)
00000000001baa2c t ImGui::DockNodeUpdateFlagsAndCollapse(ImGuiDockNode*)
0000000000194108 t ImGui::ErrorCheckEndFrameSanityChecks()
000000000018c944 t ImGui::ErrorCheckNewFrameSanityChecks()
00000000001b7078 t ImGui::GetWindowAlwaysWantOwnViewport(ImGuiWindow*)
00000000001b6da8 t ImGui::NavUpdateCreateWrappingRequest()
00000000001b485c t ImGui::NavProcessItemForTabbingRequest(unsigned int)
00000000001ac7a8 t ImGui::DockNodeTreeFindFallbackLeafNode(ImGuiDockNode*)
00000000001a7c8c t ImGui::DockNodeTreeFindVisibleNodeByPos(ImGuiDockNode*, ImVec2)
00000000001bc574 t ImGui::DockSettingsRemoveNodeReferences(unsigned int*, int)
00000000001ab8e0 t ImGui::DockSettingsRenameNodeReferences(unsigned int, unsigned int)
00000000001a775c t ImGui::DockContextBuildAddWindowsToNodes(ImGuiContext*, unsigned int)
00000000001a7484 t ImGui::DockContextBuildNodesFromSettings(ImGuiContext*, ImGuiDockNodeSettings*, int)
00000000001ab670 t ImGui::DockContextQueueNotifyRemovedNode(ImGuiContext*, ImGuiDockNode*)
00000000001b8198 t ImGui::DockNodeUpdateHasCentralNodeChild(ImGuiDockNode*)
00000000001bc0c8 t ImGui::DockContextPruneUnusedSettingsNodes(ImGuiContext*)
00000000001b4fa0 t ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow*)
00000000001bb730 t ImGui::DockNodeCalcDropRectsAndTestMousePos(ImRect const&, int, ImRect&, bool, ImVec2*)
000000000018a88c t ImGui::UpdateTryMergeWindowIntoHostViewport(ImGuiWindow*, ImGuiViewportP*)
00000000001b760c t ImGui::UpdateTryMergeWindowIntoHostViewports(ImGuiWindow*)
000000000018da80 t ImGui::NavUpdate()
0000000000215c90 t ImStb::is_separator(unsigned int)
0000000000214f18 t ImStb::stb_text_redo(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0000000000214cec t ImStb::stb_text_undo(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0000000000207a6c t ImStb::stb_textedit_cut(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0000000000205ef8 t ImStb::stb_textedit_key(ImGuiInputTextState*, ImStb::STB_TexteditState*, int)
00000000002075a8 t ImStb::stb_textedit_drag(ImGuiInputTextState*, ImStb::STB_TexteditState*, float, float)
00000000002074a0 t ImStb::stb_textedit_clamp(ImGuiInputTextState*, ImStb::STB_TexteditState*)
00000000002072e4 t ImStb::stb_textedit_click(ImGuiInputTextState*, ImStb::STB_TexteditState*, float, float)
0000000000207acc t ImStb::stb_textedit_paste(ImGuiInputTextState*, ImStb::STB_TexteditState*, unsigned short const*, int)
00000000002156e0 t ImStb::stb_text_createundo(ImStb::StbUndoState*, int, int, int)
000000000021568c t ImStb::stb_textedit_delete(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int)
0000000000207370 t ImStb::STB_TEXTEDIT_GETCHAR(ImGuiInputTextState const*, int)
00000000002be080 d ImStb::STB_TEXTEDIT_NEWLINE
0000000000207b08 t ImStb::stb_textedit_replace(ImGuiInputTextState*, ImStb::STB_TexteditState*, unsigned short const*, int)
00000000002155ec t ImStb::STB_TEXTEDIT_GETWIDTH(ImGuiInputTextState*, int, int)
0000000000215f18 t ImStb::stb_text_locate_coord(ImGuiInputTextState*, float, float)
00000000002147b8 t ImStb::STB_TEXTEDIT_KEYTOTEXT(int)
0000000000215528 t ImStb::STB_TEXTEDIT_LAYOUTROW(ImStb::StbTexteditRow*, ImGuiInputTextState*, int)
00000000002147ec t ImStb::STB_TEXTEDIT_STRINGLEN(ImGuiInputTextState const*)
0000000000215854 t ImStb::stb_textedit_flush_redo(ImStb::StbUndoState*)
000000000021489c t ImStb::STB_TEXTEDIT_DELETECHARS(ImGuiInputTextState*, int, int)
0000000000214970 t ImStb::STB_TEXTEDIT_INSERTCHARS(ImGuiInputTextState*, int, unsigned short const*, int)
0000000000215df0 t ImStb::stb_text_makeundo_delete(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int)
0000000000214cb0 t ImStb::stb_text_makeundo_insert(ImStb::STB_TexteditState*, int, int)
0000000000215e84 t ImStb::stb_textedit_clear_state(ImStb::STB_TexteditState*, int)
0000000000214804 t ImStb::stb_text_makeundo_replace(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int, int)
0000000000215984 t ImStb::stb_textedit_discard_redo(ImStb::StbUndoState*)
000000000021587c t ImStb::stb_textedit_discard_undo(ImStb::StbUndoState*)
000000000021530c t ImStb::stb_textedit_find_charpos(ImStb::StbFindState*, ImGuiInputTextState*, int, int)
0000000000215160 t ImStb::stb_textedit_move_to_last(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0000000000216158 t ImStb::is_word_boundary_from_left(ImGuiInputTextState*, int)
00000000002150fc t ImStb::stb_textedit_move_to_first(ImStb::STB_TexteditState*)
0000000000215b94 t ImStb::stb_textedit_sortselection(ImStb::STB_TexteditState*)
0000000000215be4 t ImStb::is_word_boundary_from_right(ImGuiInputTextState*, int)
00000000002157a8 t ImStb::stb_text_create_undo_record(ImStb::StbUndoState*, int)
0000000000216200 t ImStb::stb_textedit_paste_internal(ImGuiInputTextState*, ImStb::STB_TexteditState*, unsigned short*, int)
0000000000214bc8 t ImStb::stb_textedit_delete_selection(ImGuiInputTextState*, ImStb::STB_TexteditState*)
00000000002072b8 t ImStb::stb_textedit_initialize_state(ImStb::STB_TexteditState*, int)
00000000002151d4 t ImStb::STB_TEXTEDIT_MOVEWORDLEFT_IMPL(ImGuiInputTextState*, int)
00000000002073f8 t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_MAC(ImGuiInputTextState*, int)
0000000000215264 t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_WIN(ImGuiInputTextState*, int)
00000000002073a4 t ImStb::stb_textedit_prep_selection_at_cursor(ImStb::STB_TexteditState*)
00000000001774c0 T Mutex::Initialize(unsigned int)
0000000000177758 T Mutex::Exit()
00000000001775a4 T Mutex::Enter()
0000000000177570 T Mutex::Release()
00000000001777f4 T Mutex::TryEnter()
0000000000168a90 W Plane::Plane(Float3, float)
0000000000265bc8 W Recti::Recti(int, int, int, int)
0000000000132ab0 T Camera::SetViewMat(Mat4 const&)
0000000000134a7c T Camera::HandleRotationMouse(AppEvent const&, float, float)
0000000000134a60 T Camera::HandleMovementKeyboard(float, float, float)
0000000000132748 T Camera::Setup(float, float, float)
00000000001344e4 T Camera::SetLookAt(Float3, Float3, Float3)
0000000000132640 T Camera::Camera(float, float, float)
0000000000132640 T Camera::Camera(float, float, float)
0000000000274558 W Camera::Camera()
00000000001372d8 W Float2::Float2(float const*)
0000000000137298 W Float2::Float2(float, float)
000000000012bebc W Float3::Float3(float const*)
000000000012c4bc W Float3::Float3(float, float, float)
0000000000168a04 W Float4::Float4(Float3, float)
0000000000168a48 W Float4::Float4(float const*)
000000000012c478 W Float4::Float4(float, float, float, float)
000000000025fef4 W Handle<GfxBufferT>::GetSparseIndex()
000000000025fed8 W Handle<GfxBufferT>::GetGen()
000000000025fea0 W Handle<GfxBufferT>::Handle(unsigned int)
0000000000258104 W Handle<GfxBufferT>::Handle()
00000000000f61c0 W Handle<AssetHandleT>::GetSparseIndex()
00000000000f74ac W Handle<AssetHandleT>::GetGen()
00000000000f573c W Handle<AssetHandleT>::Handle(unsigned int)
00000000000f456c W Handle<AssetHandleT>::Handle()
0000000000260050 W Handle<GfxPipelineT>::GetSparseIndex()
0000000000260034 W Handle<GfxPipelineT>::GetGen()
000000000025ff88 W Handle<GfxPipelineT>::Handle(unsigned int)
00000000002585b8 W Handle<GfxPipelineT>::Handle()
0000000000169758 W Handle<HandleDummyT>::GetSparseIndex()
000000000016978c W Handle<HandleDummyT>::Set(unsigned int, unsigned int)
000000000016973c W Handle<HandleDummyT>::GetGen()
000000000016971c W Handle<HandleDummyT>::Handle(unsigned int)
0000000000169774 W Handle<HandleDummyT>::Handle()
00000000000f7570 W Handle<AssetBarrierT>::GetSparseIndex()
00000000000f7554 W Handle<AssetBarrierT>::GetGen()
00000000000f79fc W Handle<AssetBarrierT>::Handle(unsigned int)
00000000000f65b4 W Handle<AssetBarrierT>::Handle()
00000000002601ac W Handle<GfxDescriptorSetT>::GetSparseIndex()
0000000000260190 W Handle<GfxDescriptorSetT>::GetGen()
00000000002600e4 W Handle<GfxDescriptorSetT>::Handle(unsigned int)
00000000002590f4 W Handle<GfxDescriptorSetT>::Handle()
000000000025b81c W Handle<GfxPipelineLayoutT>::GetSparseIndex()
000000000025f5c0 W Handle<GfxPipelineLayoutT>::GetGen()
000000000025b784 W Handle<GfxPipelineLayoutT>::Handle(unsigned int)
000000000025b534 W Handle<GfxPipelineLayoutT>::Handle()
0000000000138cd4 W Handle<ClipboardVarHandleT>::GetSparseIndex()
0000000000138cb8 W Handle<ClipboardVarHandleT>::GetGen()
0000000000138df8 W Handle<ClipboardVarHandleT>::Handle(unsigned int)
00000000001389c4 W Handle<ClipboardVarHandleT>::Handle()
000000000025f610 W Handle<GfxDescriptorSetLayoutT>::GetSparseIndex()
000000000025f5f4 W Handle<GfxDescriptorSetLayoutT>::GetGen()
0000000000260240 W Handle<GfxDescriptorSetLayoutT>::Handle(unsigned int)
0000000000258e20 W Handle<GfxDescriptorSetLayoutT>::Handle()
000000000025f74c W Handle<GfxImageT>::GetSparseIndex()
000000000025f730 W Handle<GfxImageT>::GetGen()
000000000010e068 W Handle<GfxImageT>::Handle(unsigned int)
000000000010e2b0 W Handle<GfxImageT>::Handle()
00000000001d6908 T ImFont::AddRemapChar(unsigned short, unsigned short, bool)
00000000001d4794 T ImFont::ClearOutputData()
00000000001d66b8 T ImFont::SetGlyphVisible(unsigned short, bool)
00000000001d5c78 T ImFont::BuildLookupTable()
00000000001d6828 T ImFont::IsGlyphRangeUnused(unsigned int, unsigned int)
00000000001d59a8 T ImFont::AddGlyph(ImFontConfig const*, unsigned short, float, float, float, float, float, float, float, float, float)
00000000001d6584 T ImFont::GrowIndex(int)
00000000001d64b4 T ImFont::ImFont()
00000000001d64b4 T ImFont::ImFont()
00000000001d653c T ImFont::~ImFont()
00000000001d653c T ImFont::~ImFont()
00000000001bf378 W ImPool<ImGuiTable>::GetByIndex(int)
00000000001f25c4 W ImPool<ImGuiTable>::GetOrAddByKey(unsigned int)
00000000001c2480 W ImPool<ImGuiTable>::TryGetMapData(int)
00000000001f3698 W ImPool<ImGuiTable>::Add()
00000000001bfce0 W ImPool<ImGuiTable>::Clear()
00000000001f3180 W ImPool<ImGuiTable>::Remove(unsigned int, ImGuiTable const*)
00000000001f3f4c W ImPool<ImGuiTable>::Remove(unsigned int, int)
00000000001f255c W ImPool<ImGuiTable>::GetByKey(unsigned int)
00000000001c38e4 W ImPool<ImGuiTable>::ImPool()
00000000001c6d60 W ImPool<ImGuiTable>::~ImPool()
00000000001c81a4 W ImPool<ImGuiTabBar>::GetByIndex(int)
000000000021d980 W ImPool<ImGuiTabBar>::GetOrAddByKey(unsigned int)
00000000001c2670 W ImPool<ImGuiTabBar>::TryGetMapData(int)
0000000000222150 W ImPool<ImGuiTabBar>::Add()
00000000001bfb48 W ImPool<ImGuiTabBar>::Clear()
00000000001c3924 W ImPool<ImGuiTabBar>::ImPool()
00000000001c6d24 W ImPool<ImGuiTabBar>::~ImPool()
00000000001c5588 W ImPool<ImGuiDockContextPruneNodeData>::GetOrAddByKey(unsigned int)
00000000001c57f0 W ImPool<ImGuiDockContextPruneNodeData>::Add()
00000000001c599c W ImPool<ImGuiDockContextPruneNodeData>::Clear()
00000000001c54e0 W ImPool<ImGuiDockContextPruneNodeData>::Reserve(int)
00000000001c5520 W ImPool<ImGuiDockContextPruneNodeData>::GetByKey(unsigned int)
00000000001c54a0 W ImPool<ImGuiDockContextPruneNodeData>::ImPool()
00000000001c5608 W ImPool<ImGuiDockContextPruneNodeData>::~ImPool()
00000000001c4a24 W ImRect::TranslateX(float)
00000000001c4978 W ImRect::TranslateY(float)
00000000001c0b30 W ImRect::ClipWithFull(ImRect const&)
00000000001c2b38 W ImRect::Add(ImVec2 const&)
00000000001bf11c W ImRect::Add(ImRect const&)
00000000001bd840 W ImRect::Expand(ImVec2 const&)
00000000001c0c30 W ImRect::Expand(float)
00000000001bd7d8 W ImRect::ClipWith(ImRect const&)
00000000001c47e0 W ImRect::Translate(ImVec2 const&)
00000000001c02e8 W ImRect::ImRect(ImVec2 const&, ImVec2 const&)
00000000001c00d4 W ImRect::ImRect(ImVec4 const&)
00000000001bf0c8 W ImRect::ImRect(float, float, float, float)
00000000001bda68 W ImRect::ImRect()
00000000001f3b74 W ImSpan<ImGuiTableColumn>::set(ImGuiTableColumn*, ImGuiTableColumn*)
00000000001f39b4 W ImSpan<ImGuiTableColumn>::ImSpan()
00000000001c5d4c W ImSpan<ImGuiTableColumn>::operator[](int)
00000000001f3cd4 W ImSpan<ImGuiTableCellData>::set(ImGuiTableCellData*, ImGuiTableCellData*)
00000000001f39ec W ImSpan<ImGuiTableCellData>::ImSpan()
00000000001f2d9c W ImSpan<ImGuiTableCellData>::operator[](int)
00000000001f3ca8 W ImSpan<signed char>::set(signed char*, signed char*)
00000000001f39d0 W ImSpan<signed char>::ImSpan()
00000000001f29e0 W ImSpan<signed char>::operator[](int)
00000000001c31b0 W ImVec1::ImVec1()
000000000017ade0 W ImVec2::ImVec2(float, float)
00000000001bc8c8 W ImVec2::ImVec2()
00000000001c4408 W ImVec2::operator[](unsigned long)
00000000001bca00 W ImVec4::ImVec4(float, float, float, float)
00000000001bc8e4 W ImVec4::ImVec4()
0000000000177a40 T Signal::Initialize()
0000000000177c98 T Signal::WaitOnCondition(bool (*)(int, int), int, unsigned int)
0000000000177ea8 T Signal::Set(int)
0000000000177b70 T Signal::Wait(unsigned int)
0000000000177b10 T Signal::Raise()
0000000000177ad4 T Signal::Release()
0000000000177b40 T Signal::RaiseAll()
0000000000177dd8 T Signal::Decrement()
0000000000177e40 T Signal::Increment()
000000000013bb00 W String<128u>::String()
000000000013ba30 W String<128u>::operator=(char const*)
000000000017c7d0 W String<12u>::String(char const*)
000000000012d0cc W String<12u>::String(String<12u> const&)
000000000012c374 W String<12u>::String()
000000000012c674 W String<12u>::operator=(String<12u> const&)
0000000000132040 W String<256u>::String(char const*)
000000000017da7c W String<256u>::String()
0000000000139a48 W String<256u>::operator=(char const*)
0000000000139d48 W String<256u>::operator=(String<256u> const&)
00000000000f66fc W String<260u>::Ptr()
00000000002766ac W String<260u>::Trim()
00000000000f4008 W String<260u>::Append(char const*)
00000000000f6710 W String<260u>::Append(String<260u> const&)
0000000000140aa0 W String<260u>::SubStr(unsigned int, unsigned int)
00000000000f53a4 W String<260u>::String(char const*)
000000000012ede0 W String<260u>::String(String<260u> const&)
00000000000f5430 W String<260u>::String()
000000000016c488 W String<260u>::operator=(char const*)
000000000012cf34 W String<260u>::operator=(String<260u> const&)
000000000013fbc0 W String<260u>::operator[](unsigned int)
0000000000276668 W String<32u>::Trim()
000000000017af04 W String<32u>::Format(char const*, ...)
00000000000f48b0 W String<32u>::String(char const*)
000000000010f420 W String<32u>::String(String<32u> const&)
00000000000f5494 W String<32u>::String()
00000000000f54b8 W String<32u>::operator=(char const*)
00000000000f55f4 W String<32u>::operator=(String<32u> const&)
0000000000265a24 W String<64u>::Append(char const*)
000000000017ae24 W String<64u>::Format(char const*, ...)
0000000000265990 W String<64u>::String(char const*)
00000000002659e0 W String<64u>::String(String<64u> const&)
000000000017afd0 W String<64u>::String()
00000000001771f8 T Thread::SetPriority(ThreadPriority)
00000000001770d4 T Thread::Stop()
0000000000176b6c T Thread::Start(ThreadDesc const&)
0000000000177168 T Thread::IsRunning()
0000000000176b40 T Thread::Thread()
0000000000176b40 T Thread::Thread()
0000000000132224 W AppDesc::AppDesc()
0000000000273bdc W AppImpl::Initialize()
00000000002745fc W AppImpl::CreateGraphicsObjects()
0000000000275088 W AppImpl::ReleaseGraphicsObjects()
0000000000273e34 W AppImpl::Update(float)
0000000000274434 W AppImpl::Cleanup()
0000000000274490 W AppImpl::OnEvent(AppEvent const&)
00000000002739d0 W AppImpl::AppImpl()
0000000000180d58 T ImGuiIO::AddFocusEvent(bool)
0000000000180c7c T ImGuiIO::ClearInputKeys()
000000000018074c T ImGuiIO::AddInputCharacter(unsigned int)
0000000000180c4c T ImGuiIO::ClearInputCharacters()
00000000001807c4 T ImGuiIO::AddInputCharacterUTF16(unsigned short)
00000000001808bc T ImGuiIO::AddInputCharactersUTF8(char const*)
00000000001802d4 T ImGuiIO::ImGuiIO()
00000000001802d4 T ImGuiIO::ImGuiIO()
00000000001c7004 W ImGuiIO::~ImGuiIO()
0000000000254740 W VmaList<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::iterator::iterator()
0000000000131d8c W _JNIEnv::GetMethodID(_jclass*, char const*, char const*)
0000000000131e98 W _JNIEnv::CallIntMethod(_jobject*, _jmethodID*, ...)
0000000000131f5c W _JNIEnv::DeleteLocalRef(_jobject*)
00000000001769d0 W _JNIEnv::GetObjectClass(_jobject*)
0000000000176a04 W _JNIEnv::CallObjectMethod(_jobject*, _jmethodID*, ...)
00000000001768c8 W _JNIEnv::GetStaticMethodID(_jclass*, char const*, char const*)
0000000000176ac8 W _JNIEnv::GetStringUTFChars(_jstring*, unsigned char*)
0000000000176b04 W _JNIEnv::ReleaseStringUTFChars(_jstring*, char const*)
000000000017690c W _JNIEnv::CallStaticBooleanMethod(_jclass*, _jmethodID*, ...)
0000000000131d58 W _JNIEnv::FindClass(char const*)
0000000000131dd0 W _JNIEnv::NewObject(_jclass*, _jmethodID*, ...)
0000000000176860 W _JavaVM::AttachCurrentThread(_JNIEnv**, void*)
000000000017689c W _JavaVM::DetachCurrentThread()
0000000000268448 T ImGuizmo::BeginFrame()
0000000000269c24 T ImGuizmo::Manipulate(float const*, float const*, ImGuizmo::OPERATION, ImGuizmo::MODE, float*, float*, float const*, float const*, float const*)
0000000000266c4c T ImGuizmo::Normalized(ImGuizmo::vec_t const&)
0000000000266518 T ImGuizmo::Perspective(float, float, float, float, float*)
00000000002683e0 T ImGuizmo::SetDrawlist(ImDrawList*)
0000000000269bf8 T ImGuizmo::AllowAxisFlip(bool)
000000000027318c W ImGuizmo::PointOnSegment(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
000000000026f984 T ImGuizmo::ViewManipulate(float*, float const*, ImGuizmo::OPERATION, ImGuizmo::MODE, float*, float, ImVec2, ImVec2, unsigned int)
000000000026fa48 T ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)
0000000000268424 T ImGuizmo::SetImGuiContext(ImGuiContext*)
00000000002683b4 T ImGuizmo::SetOrthographic(bool)
000000000026ea44 T ImGuizmo::ComputeFrustumPlanes(ImGuizmo::vec_t*, float const*)
0000000000265d64 T ImGuizmo::FPU_MatrixF_x_MatrixF(float const*, float const*, float*)
000000000026ea24 T ImGuizmo::SetGizmoSizeClipSpace(float)
00000000002698ec T ImGuizmo::DecomposeMatrixToComponents(float const*, float*, float*, float*)
0000000000269a18 T ImGuizmo::RecomposeMatrixFromComponents(float const*, float const*, float const*, float*)
0000000000266660 T ImGuizmo::Dot(float const*, float const*)
0000000000266d54 T ImGuizmo::Dot(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
0000000000273504 W float ImGuizmo::max<float>(float, float)
00000000002737a0 W int ImGuizmo::min<int>(int, int)
0000000000273738 W float ImGuizmo::Clamp<float>(float, float, float)
00000000002665ac T ImGuizmo::Cross(float const*, float const*, float*)
0000000000266c9c T ImGuizmo::Cross(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
0000000000269bd8 T ImGuizmo::SetID(int)
0000000000268044 T ImGuizmo::Style::Style()
0000000000268044 T ImGuizmo::Style::Style()
0000000000266fd8 T ImGuizmo::vec_t::TransformPoint(ImGuizmo::matrix_t const&)
000000000027303c W ImGuizmo::vec_t::TransformPoint(ImGuizmo::vec_t const&, ImGuizmo::matrix_t const&)
0000000000267130 T ImGuizmo::vec_t::TransformVector(ImGuizmo::matrix_t const&)
000000000027364c W ImGuizmo::vec_t::TransformVector(ImGuizmo::vec_t const&, ImGuizmo::matrix_t const&)
0000000000273544 W ImGuizmo::vec_t::Set(float)
0000000000272ff8 W ImGuizmo::vec_t::Set(float, float, float, float)
0000000000273078 W ImGuizmo::vec_t::Lerp(ImGuizmo::vec_t const&, float)
0000000000273438 W ImGuizmo::vec_t::Cross(ImGuizmo::vec_t const&)
0000000000273688 W ImGuizmo::vec_t::Cross(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
0000000000272a10 W ImGuizmo::vec_t::Normalize(ImGuizmo::vec_t const&)
000000000027298c W ImGuizmo::vec_t::Normalize()
0000000000266e24 T ImGuizmo::vec_t::Transform(ImGuizmo::matrix_t const&)
0000000000266f9c T ImGuizmo::vec_t::Transform(ImGuizmo::vec_t const&, ImGuizmo::matrix_t const&)
00000000002734e4 W ImGuizmo::vec_t::operator[](unsigned long)
0000000000272fa0 W ImGuizmo::vec_t::operator*=(float)
0000000000273124 W ImGuizmo::vec_t::operator+=(ImGuizmo::vec_t const&)
00000000002698a8 T ImGuizmo::Enable(bool)
00000000002697d8 T ImGuizmo::IsOver(ImGuizmo::OPERATION)
0000000000268550 T ImGuizmo::IsOver()
0000000000266748 T ImGuizmo::LookAt(float const*, float const*, float const*, float*)
0000000000272e04 W ImGuizmo::Context::Context()
00000000002663bc T ImGuizmo::Frustum(float, float, float, float, float, float, float*)
0000000000268514 T ImGuizmo::IsUsing()
0000000000268340 T ImGuizmo::SetRect(float, float, float, float)
000000000026f4f8 T ImGuizmo::DrawGrid(float const*, float const*, float const*, float)
0000000000268330 T ImGuizmo::GetStyle()
00000000002737dc W bool ImGuizmo::IsWithin<float>(float, float, float)
000000000026693c T ImGuizmo::makeVect(ImVec2)
00000000002668f0 T ImGuizmo::makeVect(float, float, float, float)
0000000000273358 W ImGuizmo::matrix_t::Translation(ImGuizmo::vec_t const&)
0000000000267e24 T ImGuizmo::matrix_t::RotationAxis(ImGuizmo::vec_t const&, float)
0000000000272bd4 W ImGuizmo::matrix_t::SetToIdentity()
0000000000272ef8 W ImGuizmo::matrix_t::OrthoNormalize()
0000000000273570 W ImGuizmo::matrix_t::Scale(ImGuizmo::vec_t const&)
00000000002735b0 W ImGuizmo::matrix_t::Scale(float, float, float)
0000000000267258 T ImGuizmo::matrix_t::Inverse(ImGuizmo::matrix_t const&, bool)
0000000000273324 W ImGuizmo::matrix_t::Multiply(ImGuizmo::matrix_t const&, ImGuizmo::matrix_t const&)
0000000000266dac T ImGuizmo::BuildPlan(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
000000000026ed44 T ImGuizmo::DrawCubes(float const*, float const*, float const*, int)
00000000002666b8 T ImGuizmo::Normalize(float const*, float*)
0000000000268608 t ImGuizmo::Intersects(ImGuizmo::OPERATION, ImGuizmo::OPERATION)
000000000026f38c t ImGuizmo::worldToPos(ImGuizmo::vec_t const&, ImGuizmo::matrix_t const&, ImVec2, ImVec2)
0000000000271f58 t ImGuizmo::CanActivate()
0000000000271fb8 t ImGuizmo::ComputeSnap(float*, float)
0000000000271efc t ImGuizmo::ComputeSnap(ImGuizmo::vec_t&, float const*)
000000000026f480 t ImGuizmo::GetColorU32(int)
0000000000268640 t ImGuizmo::GetMoveType(ImGuizmo::OPERATION, ImGuizmo::vec_t*)
000000000026aa4c t ImGuizmo::HandleScale(float*, float*, ImGuizmo::OPERATION, int&, float const*)
000000000027208c t ImGuizmo::IsScaleType(int)
0000000000269068 t ImGuizmo::GetScaleType(ImGuizmo::OPERATION)
0000000000272228 t ImGuizmo::IsRotateType(int)
0000000000272358 t ImGuizmo::ComputeColors(unsigned int*, int, ImGuizmo::OPERATION)
0000000000268ca8 t ImGuizmo::GetRotateType(ImGuizmo::OPERATION)
00000000002be178 d ImGuizmo::scaleInfoMask
0000000000269e50 t ImGuizmo::ComputeContext(float const*, float const*, float*, ImGuizmo::MODE)
000000000026de5c t ImGuizmo::DrawScaleGizmo(ImGuizmo::OPERATION, int)
000000000026b20c t ImGuizmo::HandleRotation(float*, float*, ImGuizmo::OPERATION, int&, float const*)
00000000002c9690 b ImGuizmo::directionUnary
000000000026f354 t ImGuizmo::DistanceToPlane(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
00000000002726d4 t ImGuizmo::DrawHatchedAxis(ImGuizmo::vec_t const&)
0000000000272264 t ImGuizmo::IsInContextRect(ImVec2)
0000000000271ec0 t ImGuizmo::IsTranslateType(int)
00000000002c90d8 b ImGuizmo::TRANSLATE_PLANS
000000000027102c t ImGuizmo::ComputeCameraRay(ImGuizmo::vec_t&, ImGuizmo::vec_t&, ImVec2, ImVec2)
0000000000271c14 t ImGuizmo::GetParallelogram(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
0000000000271e08 t ImGuizmo::IsHoveringWindow()
00000000002be120 d ImGuizmo::rotationInfoMask
000000000026ca5c t ImGuizmo::DrawRotationGizmo(ImGuizmo::OPERATION, int)
000000000026a39c t ImGuizmo::HandleTranslation(float*, float*, ImGuizmo::OPERATION, int&, float const*)
0000000000271220 t ImGuizmo::IntersectRayPlane(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&, ImGuizmo::vec_t const&)
00000000002720c8 t ImGuizmo::ComputeAngleOnPlan()
00000000002be140 d ImGuizmo::translationInfoMask
000000000026d498 t ImGuizmo::DrawTranslationGizmo(ImGuizmo::OPERATION, int)
00000000000ad318 r ImGuizmo::translationInfoIndex
000000000026e570 t ImGuizmo::DrawScaleUniveralGizmo(ImGuizmo::OPERATION, int)
000000000026b754 t ImGuizmo::HandleAndDrawLocalBounds(float const*, ImGuizmo::matrix_t*, float const*, ImGuizmo::OPERATION)
0000000000271ac8 t ImGuizmo::GetSegmentLengthClipSpace(ImGuizmo::vec_t const&, ImGuizmo::vec_t const&, bool)
0000000000271360 t ImGuizmo::ComputeTripodAxisAndVisibility(int, ImGuizmo::vec_t&, ImGuizmo::vec_t&, ImGuizmo::vec_t&, bool&, bool&, bool)
00000000000ad2f0 r ImGuizmo::quadUV
0000000000271324 t ImGuizmo::Contains(ImGuizmo::OPERATION, ImGuizmo::OPERATION)
00000000002c90e8 b ImGuizmo::gContext
000000000026a37c t ImGuizmo::operator&(ImGuizmo::OPERATION, ImGuizmo::OPERATION)
00000000002712fc t ImGuizmo::operator!=(ImGuizmo::OPERATION, int)
0000000000272de4 W ImGuizmo::operator|(ImGuizmo::OPERATION, ImGuizmo::OPERATION)
00000000001c124c W ImVec2ih::ImVec2ih(ImVec2 const&)
00000000001c225c W ImVec2ih::ImVec2ih(short, short)
00000000001bdab0 W ImVec2ih::ImVec2ih()
00000000001e39e0 W ImVector<ImDrawVert>::swap(ImVector<ImDrawVert>&)
00000000001e3060 W ImVector<ImDrawVert>::clear()
00000000001e2dc8 W ImVector<ImDrawVert>::resize(int)
00000000001e34a0 W ImVector<ImDrawVert>::shrink(int)
00000000001be068 W ImVector<ImDrawVert>::reserve(int)
00000000001c324c W ImVector<ImDrawVert>::ImVector()
00000000001c3428 W ImVector<ImDrawVert>::~ImVector()
00000000001e323c W ImVector<ImDrawVert>::operator=(ImVector<ImDrawVert> const&)
00000000001e3900 W ImVector<ImDrawVert>::operator[](int)
00000000001c7b64 W ImVector<ImGuiTable>::clear()
00000000001f3748 W ImVector<ImGuiTable>::resize(int)
00000000001f38a0 W ImVector<ImGuiTable>::reserve(int)
00000000001c3c2c W ImVector<ImGuiTable>::ImVector()
00000000001c7110 W ImVector<ImGuiTable>::~ImVector()
00000000001c6814 W ImVector<ImGuiTable>::operator[](int)
00000000001e4d04 W ImVector<stbrp_rect>::clear()
00000000001e4264 W ImVector<stbrp_rect>::resize(int)
00000000001e5a58 W ImVector<stbrp_rect>::reserve(int)
00000000001e4244 W ImVector<stbrp_rect>::ImVector()
00000000001e43b4 W ImVector<stbrp_rect>::~ImVector()
00000000001e4348 W ImVector<stbrp_rect>::operator[](int)
00000000001e4594 W ImVector<ImFontGlyph>::back()
00000000001e44d8 W ImVector<ImFontGlyph>::clear()
00000000001e45f8 W ImVector<ImFontGlyph>::resize(int)
00000000001e5b64 W ImVector<ImFontGlyph>::reserve(int)
00000000001e4480 W ImVector<ImFontGlyph>::ImVector()
00000000001e44a0 W ImVector<ImFontGlyph>::~ImVector()
00000000001e4520 W ImVector<ImFontGlyph>::operator[](int)
00000000001c7a58 W ImVector<ImGuiTabBar>::clear()
0000000000222208 W ImVector<ImGuiTabBar>::resize(int)
0000000000222264 W ImVector<ImGuiTabBar>::reserve(int)
00000000001c3c4c W ImVector<ImGuiTabBar>::ImVector()
00000000001c70d8 W ImVector<ImGuiTabBar>::~ImVector()
00000000001c79b0 W ImVector<ImGuiTabBar>::operator[](int)
00000000001e406c W ImVector<ImFontConfig>::back()
00000000001e3eec W ImVector<ImFontConfig>::clear()
00000000001e5838 W ImVector<ImFontConfig>::reserve(int)
00000000001e3fe4 W ImVector<ImFontConfig>::push_back(ImFontConfig const&)
00000000001e3de8 W ImVector<ImFontConfig>::ImVector()
00000000001e3e08 W ImVector<ImFontConfig>::~ImVector()
00000000001e3e78 W ImVector<ImFontConfig>::operator[](int)
00000000001c532c W ImVector<ImGuiTabItem>::back()
000000000021dc30 W ImVector<ImGuiTabItem>::erase(ImGuiTabItem const*)
000000000021df64 W ImVector<ImGuiTabItem>::resize(int)
000000000021e088 W ImVector<ImGuiTabItem>::reserve(int)
000000000021dba8 W ImVector<ImGuiTabItem>::push_back(ImGuiTabItem const&)
000000000021d960 W ImVector<ImGuiTabItem>::ImVector()
00000000001c7aa0 W ImVector<ImGuiTabItem>::~ImVector()
00000000001c2c0c W ImVector<ImGuiTabItem>::operator[](int)
00000000001bfdf0 W ImVector<ImDrawChannel>::clear()
00000000001e3750 W ImVector<ImDrawChannel>::resize(int)
00000000001e36c0 W ImVector<ImDrawChannel>::reserve(int)
00000000001c332c W ImVector<ImDrawChannel>::ImVector()
00000000001c34d0 W ImVector<ImDrawChannel>::~ImVector()
00000000001e3654 W ImVector<ImDrawChannel>::operator[](int)
00000000001bd544 W ImVector<ImGuiColorMod>::back()
00000000001bf9c0 W ImVector<ImGuiColorMod>::clear()
00000000001c6534 W ImVector<ImGuiColorMod>::reserve(int)
00000000001bd5a8 W ImVector<ImGuiColorMod>::pop_back()
00000000001bd4b8 W ImVector<ImGuiColorMod>::push_back(ImGuiColorMod const&)
00000000001c36e4 W ImVector<ImGuiColorMod>::ImVector()
00000000001c6f5c W ImVector<ImGuiColorMod>::~ImVector()
00000000001bd718 W ImVector<ImGuiStyleMod>::back()
00000000001bfa08 W ImVector<ImGuiStyleMod>::clear()
00000000001c6648 W ImVector<ImGuiStyleMod>::reserve(int)
00000000001bd77c W ImVector<ImGuiStyleMod>::pop_back()
00000000001bd628 W ImVector<ImGuiStyleMod>::push_back(ImGuiStyleMod const&)
00000000001c3704 W ImVector<ImGuiStyleMod>::ImVector()
00000000001c6f24 W ImVector<ImGuiStyleMod>::~ImVector()
00000000001c1364 W ImVector<ImGuiGroupData>::back()
00000000001bdeb8 W ImVector<ImGuiGroupData>::clear()
00000000001bf5a4 W ImVector<ImGuiGroupData>::resize(int)
00000000001c75f8 W ImVector<ImGuiGroupData>::reserve(int)
00000000001c13c8 W ImVector<ImGuiGroupData>::pop_back()
00000000001c3764 W ImVector<ImGuiGroupData>::ImVector()
00000000001c6e7c W ImVector<ImGuiGroupData>::~ImVector()
00000000001c0964 W ImVector<ImGuiPopupData>::back()
00000000001bfa98 W ImVector<ImGuiPopupData>::clear()
00000000001bf474 W ImVector<ImGuiPopupData>::resize(int)
00000000001c73d8 W ImVector<ImGuiPopupData>::reserve(int)
00000000001c0d60 W ImVector<ImGuiPopupData>::pop_back()
00000000001c07f0 W ImVector<ImGuiPopupData>::push_back(ImGuiPopupData const&)
00000000001c3784 W ImVector<ImGuiPopupData>::ImVector()
00000000001c6e44 W ImVector<ImGuiPopupData>::~ImVector()
00000000001c031c W ImVector<ImGuiPopupData>::operator[](int)
00000000001bdc50 W ImVector<ImGuiOldColumns>::clear_destruct()
00000000001f3334 W ImVector<ImGuiOldColumns>::back()
00000000001c6794 W ImVector<ImGuiOldColumns>::clear()
00000000001f4044 W ImVector<ImGuiOldColumns>::reserve(int)
00000000001f3240 W ImVector<ImGuiOldColumns>::push_back(ImGuiOldColumns const&)
00000000001bdaf0 W ImVector<ImGuiOldColumns>::ImVector()
00000000001bdd38 W ImVector<ImGuiOldColumns>::~ImVector()
00000000001c2d24 W ImVector<ImGuiOldColumns>::operator[](int)
000000000021daf8 W ImVector<ImGuiPtrOrIndex>::back()
00000000001bfbe8 W ImVector<ImGuiPtrOrIndex>::clear()
0000000000222378 W ImVector<ImGuiPtrOrIndex>::reserve(int)
000000000021da78 W ImVector<ImGuiPtrOrIndex>::pop_back()
000000000021da00 W ImVector<ImGuiPtrOrIndex>::push_back(ImGuiPtrOrIndex const&)
00000000001c3964 W ImVector<ImGuiPtrOrIndex>::ImVector()
00000000001c6cec W ImVector<ImGuiPtrOrIndex>::~ImVector()
00000000001bebf8 W ImVector<ImGuiContextHook>::back()
00000000001bef08 W ImVector<ImGuiContextHook>::erase(ImGuiContextHook const*)
00000000001c71b8 W ImVector<ImGuiContextHook>::reserve(int)
00000000001beb74 W ImVector<ImGuiContextHook>::push_back(ImGuiContextHook const&)
00000000001c3b50 W ImVector<ImGuiContextHook>::ImVector()
00000000001c6b40 W ImVector<ImGuiContextHook>::~ImVector()
00000000001bec60 W ImVector<ImGuiContextHook>::operator[](int)
00000000001c21dc W ImVector<ImGuiDockRequest>::clear()
00000000001c1cc0 W ImVector<ImGuiDockRequest>::resize(int)
00000000001c7f8c W ImVector<ImGuiDockRequest>::reserve(int)
00000000001c1da0 W ImVector<ImGuiDockRequest>::push_back(ImGuiDockRequest const&)
00000000001c3c6c W ImVector<ImGuiDockRequest>::ImVector()
00000000001c70a0 W ImVector<ImGuiDockRequest>::~ImVector()
00000000001c1c54 W ImVector<ImGuiDockRequest>::operator[](int)
00000000001e4ba8 W ImVector<stbtt_packedchar>::resize(int)
00000000001e514c W ImVector<stbtt_packedchar>::reserve(int)
00000000001e4b88 W ImVector<stbtt_packedchar>::ImVector()
00000000001e4dbc W ImVector<stbtt_packedchar>::~ImVector()
00000000001e4c24 W ImVector<stbtt_packedchar>::operator[](int)
00000000001e4b40 W ImVector<ImFontBuildDstData>::clear()
00000000001e4864 W ImVector<ImFontBuildDstData>::resize(int)
00000000001e4f78 W ImVector<ImFontBuildDstData>::reserve(int)
00000000001e47e8 W ImVector<ImFontBuildDstData>::ImVector()
00000000001e4df4 W ImVector<ImFontBuildDstData>::~ImVector()
00000000001e4970 W ImVector<ImFontBuildDstData>::operator[](int)
00000000001e4d4c W ImVector<ImFontBuildSrcData>::clear_destruct()
00000000001e5298 W ImVector<ImFontBuildSrcData>::clear()
00000000001e4808 W ImVector<ImFontBuildSrcData>::resize(int)
00000000001e4e64 W ImVector<ImFontBuildSrcData>::reserve(int)
00000000001e47c8 W ImVector<ImFontBuildSrcData>::ImVector()
00000000001e4e2c W ImVector<ImFontBuildSrcData>::~ImVector()
00000000001e48fc W ImVector<ImFontBuildSrcData>::operator[](int)
00000000001f3398 W ImVector<ImGuiOldColumnData>::resize(int)
00000000001f33f4 W ImVector<ImGuiOldColumnData>::reserve(int)
00000000001f34cc W ImVector<ImGuiOldColumnData>::push_back(ImGuiOldColumnData const&)
00000000001f3678 W ImVector<ImGuiOldColumnData>::ImVector()
00000000001c67dc W ImVector<ImGuiOldColumnData>::~ImVector()
00000000001c29bc W ImVector<ImGuiOldColumnData>::operator[](int)
00000000001bfd80 W ImVector<ImGuiTableTempData>::clear_destruct()
00000000001c7c0c W ImVector<ImGuiTableTempData>::clear()
00000000001f26d8 W ImVector<ImGuiTableTempData>::resize(int, ImGuiTableTempData const&)
00000000001f3a60 W ImVector<ImGuiTableTempData>::reserve(int)
00000000001c38c4 W ImVector<ImGuiTableTempData>::ImVector()
00000000001c6d9c W ImVector<ImGuiTableTempData>::~ImVector()
00000000001bf3a4 W ImVector<ImGuiTableTempData>::operator[](int)
00000000001c5dd0 W ImVector<ImGuiStackLevelInfo>::resize(int)
00000000001c2d98 W ImVector<ImGuiStackLevelInfo>::resize(int, ImGuiStackLevelInfo const&)
00000000001c5e2c W ImVector<ImGuiStackLevelInfo>::reserve(int)
00000000001c3cac W ImVector<ImGuiStackLevelInfo>::ImVector()
00000000001c7030 W ImVector<ImGuiStackLevelInfo>::~ImVector()
00000000001c2e80 W ImVector<ImGuiStackLevelInfo>::operator[](int)
00000000001bfc78 W ImVector<ImGuiListClipperData>::clear_destruct()
00000000001c7ad8 W ImVector<ImGuiListClipperData>::clear()
00000000001bd03c W ImVector<ImGuiListClipperData>::resize(int, ImGuiListClipperData const&)
00000000001c62c4 W ImVector<ImGuiListClipperData>::reserve(int)
00000000001c38a4 W ImVector<ImGuiListClipperData>::ImVector()
00000000001c6dd4 W ImVector<ImGuiListClipperData>::~ImVector()
00000000001bd164 W ImVector<ImGuiListClipperData>::operator[](int)
00000000001c3bec W ImVector<ImGuiPlatformMonitor>::ImVector()
00000000001c7180 W ImVector<ImGuiPlatformMonitor>::~ImVector()
00000000001c14cc W ImVector<ImGuiPlatformMonitor>::operator[](int)
00000000001bfee8 W ImVector<ImGuiSettingsHandler>::clear()
00000000001c770c W ImVector<ImGuiSettingsHandler>::reserve(int)
00000000001bf62c W ImVector<ImGuiSettingsHandler>::push_back(ImGuiSettingsHandler const&)
00000000001c3ae8 W ImVector<ImGuiSettingsHandler>::ImVector()
00000000001c6bc0 W ImVector<ImGuiSettingsHandler>::~ImVector()
00000000001c19d4 W ImVector<ImGuiSettingsHandler>::operator[](int)
00000000001bfc30 W ImVector<ImGuiShrinkWidthItem>::clear()
000000000021dfc0 W ImVector<ImGuiShrinkWidthItem>::resize(int)
000000000021e19c W ImVector<ImGuiShrinkWidthItem>::reserve(int)
00000000001c3984 W ImVector<ImGuiShrinkWidthItem>::ImVector()
00000000001c6cb4 W ImVector<ImGuiShrinkWidthItem>::~ImVector()
000000000021e01c W ImVector<ImGuiShrinkWidthItem>::operator[](int)
00000000001c06cc W ImVector<ImGuiWindowStackData>::back()
00000000001bf954 W ImVector<ImGuiWindowStackData>::clear()
00000000001bf418 W ImVector<ImGuiWindowStackData>::resize(int)
00000000001c72c4 W ImVector<ImGuiWindowStackData>::reserve(int)
00000000001c0dbc W ImVector<ImGuiWindowStackData>::pop_back()
00000000001c0768 W ImVector<ImGuiWindowStackData>::push_back(ImGuiWindowStackData const&)
00000000001c35c0 W ImVector<ImGuiWindowStackData>::ImVector()
00000000001c6f94 W ImVector<ImGuiWindowStackData>::~ImVector()
00000000001e3f34 W ImVector<ImFontAtlasCustomRect>::clear()
00000000001e594c W ImVector<ImFontAtlasCustomRect>::reserve(int)
00000000001e413c W ImVector<ImFontAtlasCustomRect>::push_back(ImFontAtlasCustomRect const&)
00000000001e3dc8 W ImVector<ImFontAtlasCustomRect>::ImVector()
00000000001e3e40 W ImVector<ImFontAtlasCustomRect>::~ImVector()
00000000001e42dc W ImVector<ImFontAtlasCustomRect>::operator[](int)
00000000001c5458 W ImVector<ImGuiDockNodeSettings>::clear()
00000000001c5cb4 W ImVector<ImGuiDockNodeSettings>::resize(int)
00000000001c5ba0 W ImVector<ImGuiDockNodeSettings>::reserve(int)
00000000001c5b18 W ImVector<ImGuiDockNodeSettings>::push_back(ImGuiDockNodeSettings const&)
00000000001c3c8c W ImVector<ImGuiDockNodeSettings>::ImVector()
00000000001c7068 W ImVector<ImGuiDockNodeSettings>::~ImVector()
00000000001c2874 W ImVector<ImGuiDockNodeSettings>::operator[](int)
00000000001bd2e4 W ImVector<ImGuiListClipperRange>::push_front(ImGuiListClipperRange const&)
00000000001c30b4 W ImVector<ImGuiListClipperRange>::erase(ImGuiListClipperRange const*)
00000000001c63d0 W ImVector<ImGuiListClipperRange>::insert(ImGuiListClipperRange const*, ImGuiListClipperRange const&)
00000000001c2f44 W ImVector<ImGuiListClipperRange>::resize(int)
00000000001c2fa0 W ImVector<ImGuiListClipperRange>::reserve(int)
00000000001bd210 W ImVector<ImGuiListClipperRange>::push_back(ImGuiListClipperRange const&)
00000000001c2eec W ImVector<ImGuiListClipperRange>::ImVector()
00000000001c2f0c W ImVector<ImGuiListClipperRange>::~ImVector()
00000000001bd334 W ImVector<ImGuiListClipperRange>::operator[](int)
00000000001f31cc W ImVector<ImGuiTableColumnSortSpecs>::clear()
00000000001f2f7c W ImVector<ImGuiTableColumnSortSpecs>::resize(int)
00000000001f3e38 W ImVector<ImGuiTableColumnSortSpecs>::reserve(int)
00000000001f3a24 W ImVector<ImGuiTableColumnSortSpecs>::ImVector()
00000000001c7bac W ImVector<ImGuiTableColumnSortSpecs>::~ImVector()
00000000001c5a70 W ImVector<ImGuiDockContextPruneNodeData>::clear()
00000000001c58a0 W ImVector<ImGuiDockContextPruneNodeData>::resize(int)
00000000001c5664 W ImVector<ImGuiDockContextPruneNodeData>::reserve(int)
00000000001c5644 W ImVector<ImGuiDockContextPruneNodeData>::ImVector()
00000000001c5a38 W ImVector<ImGuiDockContextPruneNodeData>::~ImVector()
00000000001c5784 W ImVector<ImGuiDockContextPruneNodeData>::operator[](int)
00000000001e3560 W ImVector<ImVec2>::back()
00000000001e3138 W ImVector<ImVec2>::clear()
00000000001e2edc W ImVector<ImVec2>::resize(int)
00000000001c4644 W ImVector<ImVec2>::reserve(int)
00000000001c45cc W ImVector<ImVec2>::push_back(ImVec2 const&)
00000000001c32ac W ImVector<ImVec2>::ImVector()
00000000001c3380 W ImVector<ImVec2>::~ImVector()
00000000001c0074 W ImVector<ImVec4>::back()
00000000001e30a8 W ImVector<ImVec4>::clear()
00000000001e2e24 W ImVector<ImVec4>::resize(int)
00000000001e5568 W ImVector<ImVec4>::reserve(int)
00000000001e3370 W ImVector<ImVec4>::pop_back()
00000000001e32f8 W ImVector<ImVec4>::push_back(ImVec4 const&)
00000000001c326c W ImVector<ImVec4>::ImVector()
00000000001c33f0 W ImVector<ImVec4>::~ImVector()
00000000001c0c88 W ImVector<ImDrawCmd>::back()
00000000001e3018 W ImVector<ImDrawCmd>::clear()
00000000001e37e0 W ImVector<ImDrawCmd>::erase(ImDrawCmd const*)
00000000001e2d6c W ImVector<ImDrawCmd>::resize(int)
00000000001e53d8 W ImVector<ImDrawCmd>::reserve(int)
00000000001e329c W ImVector<ImDrawCmd>::pop_back()
00000000001e2f58 W ImVector<ImDrawCmd>::push_back(ImDrawCmd const&)
00000000001c322c W ImVector<ImDrawCmd>::ImVector()
00000000001c3498 W ImVector<ImDrawCmd>::~ImVector()
00000000001e3180 W ImVector<ImDrawCmd>::operator=(ImVector<ImDrawCmd> const&)
00000000001c0bbc W ImVector<ImDrawCmd>::operator[](int)
00000000001bca64 W ImVector<ImGuiStorage::ImGuiStoragePair>::end()
00000000001c3edc W ImVector<ImGuiStorage::ImGuiStoragePair>::clear()
00000000001bca84 W ImVector<ImGuiStorage::ImGuiStoragePair>::insert(ImGuiStorage::ImGuiStoragePair const*, ImGuiStorage::ImGuiStoragePair const&)
00000000001c56f4 W ImVector<ImGuiStorage::ImGuiStoragePair>::reserve(int)
00000000001c320c W ImVector<ImGuiStorage::ImGuiStoragePair>::ImVector()
00000000001c3508 W ImVector<ImGuiStorage::ImGuiStoragePair>::~ImVector()
00000000001bcc3c W ImVector<ImGuiStorage::ImGuiStoragePair>::operator[](int)
00000000001bccc8 W ImVector<ImGuiTextFilter::ImGuiTextRange>::resize(int)
00000000001c613c W ImVector<ImGuiTextFilter::ImGuiTextRange>::reserve(int)
00000000001bcd24 W ImVector<ImGuiTextFilter::ImGuiTextRange>::push_back(ImGuiTextFilter::ImGuiTextRange const&)
00000000001bcca8 W ImVector<ImGuiTextFilter::ImGuiTextRange>::ImVector()
00000000001bcdc8 W ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[](int)
00000000001bff54 W ImVector<ImDrawList*>::resize(int)
00000000001c3fe4 W ImVector<ImDrawList*>::reserve(int)
00000000001c3f6c W ImVector<ImDrawList*>::push_back(ImDrawList* const&)
00000000001c3ebc W ImVector<ImDrawList*>::ImVector()
00000000001c4e44 W ImVector<ImDrawList*>::~ImVector()
00000000001bffd4 W ImVector<ImDrawList*>::operator[](int)
00000000001c5010 W ImVector<ImGuiWindow*>::find_erase(ImGuiWindow* const&)
00000000001c41c8 W ImVector<ImGuiWindow*>::push_front(ImGuiWindow* const&)
00000000001bf8ec W ImVector<ImGuiWindow*>::clear_delete()
00000000001c0e18 W ImVector<ImGuiWindow*>::back()
00000000001c5090 W ImVector<ImGuiWindow*>::find(ImGuiWindow* const&)
00000000001c0218 W ImVector<ImGuiWindow*>::swap(ImVector<ImGuiWindow*>&)
00000000001bdf48 W ImVector<ImGuiWindow*>::clear()
00000000001c5100 W ImVector<ImGuiWindow*>::erase(ImGuiWindow* const*)
00000000001c4238 W ImVector<ImGuiWindow*>::insert(ImGuiWindow* const*, ImGuiWindow* const&)
00000000001c012c W ImVector<ImGuiWindow*>::resize(int)
00000000001c0188 W ImVector<ImGuiWindow*>::reserve(int)
00000000001c09c8 W ImVector<ImGuiWindow*>::push_back(ImGuiWindow* const&)
00000000001c1ff8 W ImVector<ImGuiWindow*>::ImVector()
00000000001c204c W ImVector<ImGuiWindow*>::~ImVector()
00000000001bf2a0 W ImVector<ImGuiWindow*>::operator[](int)
00000000001c8098 W ImVector<ImGuiDockNode*>::reserve(int)
00000000001c20f8 W ImVector<ImGuiDockNode*>::push_back(ImGuiDockNode* const&)
00000000001c20d8 W ImVector<ImGuiDockNode*>::ImVector()
00000000001c2224 W ImVector<ImGuiDockNode*>::~ImVector()
00000000001c2170 W ImVector<ImGuiDockNode*>::operator[](int)
00000000001c4e7c W ImVector<ImGuiViewport*>::resize(int)
00000000001c4ed8 W ImVector<ImGuiViewport*>::reserve(int)
00000000001bf840 W ImVector<ImGuiViewport*>::push_back(ImGuiViewport* const&)
00000000001c3c0c W ImVector<ImGuiViewport*>::ImVector()
00000000001c7148 W ImVector<ImGuiViewport*>::~ImVector()
00000000001c1b64 W ImVector<ImGuiViewport*>::operator[](int)
00000000001bfae0 W ImVector<ImGuiViewportP*>::clear_delete()
00000000001c7968 W ImVector<ImGuiViewportP*>::clear()
00000000001c4bf8 W ImVector<ImGuiViewportP*>::erase(ImGuiViewportP* const*)
00000000001c25c8 W ImVector<ImGuiViewportP*>::resize(int)
00000000001c7820 W ImVector<ImGuiViewportP*>::reserve(int)
00000000001bf7c8 W ImVector<ImGuiViewportP*>::push_back(ImGuiViewportP* const&)
00000000001c2570 W ImVector<ImGuiViewportP*>::ImVector()
00000000001c2590 W ImVector<ImGuiViewportP*>::~ImVector()
00000000001beccc W ImVector<ImGuiViewportP*>::operator[](int)
00000000001e3f7c W ImVector<ImFont*>::clear_delete()
00000000001c0fd8 W ImVector<ImFont*>::back()
00000000001bfa50 W ImVector<ImFont*>::clear()
00000000001c7d60 W ImVector<ImFont*>::reserve(int)
00000000001c0f58 W ImVector<ImFont*>::pop_back()
00000000001c0ee0 W ImVector<ImFont*>::push_back(ImFont* const&)
00000000001c3724 W ImVector<ImFont*>::ImVector()
00000000001c6eec W ImVector<ImFont*>::~ImVector()
00000000001c2950 W ImVector<ImFont*>::operator[](int)
00000000001c2288 W ImVector<char const*>::operator[](int)
00000000001e30f0 W ImVector<void*>::clear()
00000000001e2e80 W ImVector<void*>::resize(int)
00000000001e5674 W ImVector<void*>::reserve(int)
00000000001e3444 W ImVector<void*>::pop_back()
00000000001e33cc W ImVector<void*>::push_back(void* const&)
00000000001c328c W ImVector<void*>::ImVector()
00000000001c33b8 W ImVector<void*>::~ImVector()
00000000001f3fcc W ImVector<char>::swap(ImVector<char>&)
00000000001c5d34 W ImVector<char>::begin()
00000000001bfe38 W ImVector<char>::clear()
00000000001bcf74 W ImVector<char>::resize(int)
00000000001bceec W ImVector<char>::reserve(int)
00000000001c1a48 W ImVector<char>::push_back(char const&)
00000000001c3a54 W ImVector<char>::ImVector()
00000000001c6c38 W ImVector<char>::~ImVector()
00000000001bcfd0 W ImVector<char>::operator[](int)
00000000001c116c W ImVector<float>::back()
00000000001bdf90 W ImVector<float>::clear()
00000000001c0cec W ImVector<float>::resize(int)
00000000001e4654 W ImVector<float>::resize(int, float const&)
00000000001c7c54 W ImVector<float>::reserve(int)
00000000001c11cc W ImVector<float>::pop_back()
00000000001c10f4 W ImVector<float>::push_back(float const&)
00000000001c31ec W ImVector<float>::ImVector()
00000000001c3540 W ImVector<float>::~ImVector()
00000000001bf30c W ImVector<float>::operator[](int)
00000000001c1608 W ImVector<unsigned char>::clear()
00000000001c1650 W ImVector<unsigned char>::resize(int)
00000000001c7e6c W ImVector<unsigned char>::reserve(int)
00000000001c3884 W ImVector<unsigned char>::ImVector()
00000000001c6e0c W ImVector<unsigned char>::~ImVector()
00000000001c1038 W ImVector<int>::back()
00000000001bde70 W ImVector<int>::clear()
00000000001bf4d0 W ImVector<int>::resize(int)
00000000001c74ec W ImVector<int>::reserve(int)
00000000001c1098 W ImVector<int>::pop_back()
00000000001bf52c W ImVector<int>::push_back(int const&)
00000000001c3744 W ImVector<int>::ImVector()
00000000001c6eb4 W ImVector<int>::~ImVector()
00000000001e4c98 W ImVector<int>::operator[](int)
00000000001bde10 W ImVector<unsigned int>::back()
00000000001bdf00 W ImVector<unsigned int>::clear()
00000000001befe4 W ImVector<unsigned int>::resize(int)
00000000001c5f38 W ImVector<unsigned int>::reserve(int)
00000000001c1284 W ImVector<unsigned int>::pop_back()
00000000001bdbac W ImVector<unsigned int>::push_back(unsigned int const&)
00000000001bd978 W ImVector<unsigned int>::ImVector()
00000000001bddd8 W ImVector<unsigned int>::~ImVector()
00000000001c22f4 W ImVector<unsigned int>::operator[](int)
00000000001c3f24 W ImVector<unsigned short>::clear()
00000000001bc9a4 W ImVector<unsigned short>::resize(int)
00000000001e470c W ImVector<unsigned short>::resize(int, unsigned short const&)
00000000001e3500 W ImVector<unsigned short>::shrink(int)
00000000001bdfd8 W ImVector<unsigned short>::reserve(int)
00000000001bc928 W ImVector<unsigned short>::push_back(unsigned short const&)
00000000001bc908 W ImVector<unsigned short>::ImVector()
00000000001c3460 W ImVector<unsigned short>::~ImVector()
00000000001e31e0 W ImVector<unsigned short>::operator=(ImVector<unsigned short> const&)
00000000001e3974 W ImVector<unsigned short>::operator[](int)
00000000000f51f8 W unsigned int JsonNode::GetChildValue<unsigned int>(char const*, unsigned int)
00000000000f40e4 W JsonNode::JsonNode(JsonContext*)
00000000000f562c W JsonNode::JsonNode(JsonContext*, int, int)
00000000000f4194 W JsonNode::JsonNode()
000000000017d9b8 W RingBlob::Free()
000000000017d828 W RingBlob::Peek(void*, unsigned long, unsigned long*)
000000000017db24 W RingBlob::Read(void*, unsigned long)
000000000017d78c W unsigned long RingBlob::Read<float>(float*)
000000000017dc70 W RingBlob::Write(void const*, unsigned long)
000000000017d7bc W void RingBlob::Write<float>(float const&)
000000000017d65c W RingBlob::Reserve(unsigned long)
000000000017daac W RingBlob::RingBlob(Allocator*)
000000000017da48 W RingBlob::RingBlob()
0000000000259b54 W VmaMutex::Lock()
0000000000259b78 W VmaMutex::Unlock()
000000000025475c W VmaMutex::VmaMutex()
00000000002547a4 W VmaMutex::~VmaMutex()
0000000000251be8 t void _private::blit_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014ab74 t void _private::blit_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000275fd8 T _private::conRelease()
0000000000242f10 T _private::gfxRelease()
00000000001691c8 T _private::handleFull(_private::HandlePoolTable const*)
0000000000251aa8 t unsigned long _private::quad_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014aa34 t unsigned long _private::quad_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000251f78 t void _private::tail_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014af34 t void _private::tail_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000013d6f0 T _private::vfsRelease()
000000000024d680 t void _private::bubble_sort<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014671c t void _private::bubble_sort<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000168db8 T _private::handleClone(_private::HandlePoolTable*, Allocator*)
00000000000f17d4 T _private::assetGetData(Handle<AssetHandleT>)
00000000000efdd8 T _private::assetRelease()
000000000024d270 t void _private::blit_analyze<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000146318 t void _private::blit_analyze<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000017c32c T _private::ddInitialize()
0000000000150818 T _private::hashtableAdd(_private::HashTableData*, unsigned int, void const*)
00000000002643c4 T _private::imguiRelease()
000000000015ffbc T _private::logPrintInfo(unsigned int, char const*, unsigned int, char const*, ...)
000000000024ea10 t void _private::parity_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000147980 t void _private::parity_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000275a34 T _private::conInitialize()
000000000025269c t void _private::forward_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014b61c t void _private::forward_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000023f4a8 T _private::gfxInitialize()
00000000001690b8 T _private::handleIsValid(_private::HandlePoolTable const*, unsigned int)
0000000000150ac4 T _private::hashtableFind(_private::HashTableData const*, unsigned int)
000000000015070c T _private::hashtableGrow(_private::HashTableData**, Allocator*)
0000000000160220 T _private::logPrintDebug(unsigned int, char const*, unsigned int, char const*, ...)
00000000001606d4 T _private::logPrintError(unsigned int, char const*, unsigned int, char const*, ...)
000000000024ef4c t void _private::quadsort_swap<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000147f04 t void _private::quadsort_swap<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000013a3bc T _private::remoteConnect(char const*, void (*)(char const*, bool, SocketErrorCode))
000000000013a2e8 T _private::remoteRelease()
000000000013cab0 T _private::vfsInitialize()
000000000024ec94 t void _private::blit_partition<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000147bcc t void _private::blit_partition<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000150bf8 T _private::hashtableClear(_private::HashTableData*)
000000000024d840 t void _private::quad_swap_four<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
00000000001468d0 t void _private::quad_swap_four<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
00000000001743f0 T _private::socketParseUrl(char const*, char*, unsigned long, char*, unsigned long, char const**)
00000000000ef4f8 T _private::assetInitialize()
0000000000150988 T _private::hashtableAddKey(_private::HashTableData*, unsigned int)
00000000001503f4 T _private::hashtableCreate(unsigned int, unsigned int, Allocator*)
0000000000263988 T _private::imguiBeginFrame(float)
0000000000261cf8 T _private::imguiInitialize()
00000000001603ac T _private::logPrintVerbose(unsigned int, char const*, unsigned int, char const*, ...)
0000000000160538 T _private::logPrintWarning(unsigned int, char const*, unsigned int, char const*, ...)
0000000000177f10 T _private::timerInitialize()
00000000000f2234 T _private::assetUpdateCache(float)
000000000024efe8 t void _private::blit_merge_block<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000147fa0 t void _private::blit_merge_block<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
00000000001506b0 T _private::hashtableDestroy(_private::HashTableData*, Allocator*)
000000000024e294 t void _private::parity_merge_two<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
00000000001472b4 t void _private::parity_merge_two<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000025248c t void _private::quad_merge_block<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014b418 t void _private::quad_merge_block<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000013ab8c T _private::remoteDisconnect()
000000000013a06c T _private::remoteInitialize()
00000000002502b8 t void _private::trinity_rotation<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long)
000000000014929c t void _private::trinity_rotation<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long)
000000000024db4c t void _private::unguarded_insert<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000146bc4 t void _private::unguarded_insert<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024e4fc t void _private::parity_merge_four<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
00000000001474e4 t void _private::parity_merge_four<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024dd44 t void _private::parity_swap_eight<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
0000000000146dac t void _private::parity_swap_eight<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
00000000000f187c T _private::assetGetDataUnsafe(Handle<AssetHandleT>)
000000000024ff40 t VmaDeviceMemoryBlock* _private::blit_median_of_five<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000148f30 t MemTlsfAllocator::CalculateFragmentation()::AllocData _private::blit_median_of_five<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024f21c t VmaDeviceMemoryBlock* _private::blit_median_of_nine<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
00000000001481d4 t MemTlsfAllocator::CalculateFragmentation()::AllocData _private::blit_median_of_nine<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024f4c0 t VmaDeviceMemoryBlock* _private::blit_median_of_sqrt<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
00000000001484f8 t MemTlsfAllocator::CalculateFragmentation()::AllocData _private::blit_median_of_sqrt<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000168cc8 T _private::handleGrowPoolTable(_private::HandlePoolTable**, Allocator*)
000000000024e06c t void _private::parity_swap_sixteen<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
00000000001470f4 t void _private::parity_swap_sixteen<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000174b18 T _private::sysCountersAddMutex()
000000000024fe18 t unsigned long _private::blit_median_of_three<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000148e08 t unsigned long _private::blit_median_of_three<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000168c0c T _private::handleResetPoolTable(_private::HandlePoolTable*)
0000000000174dc0 T _private::sysCountersAddSignal()
00000000001745d8 T _private::sysCountersAddThread(unsigned long)
0000000000168b60 T _private::handleCreatePoolTable(unsigned int, Allocator*)
0000000000252e00 t void _private::partial_forward_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014bd18 t void _private::partial_forward_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024f9f4 t unsigned long _private::blit_default_partition<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000148a0c t unsigned long _private::blit_default_partition<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024f5d4 t unsigned long _private::blit_reverse_partition<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000148614 t unsigned long _private::blit_reverse_partition<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000168c9c T _private::handleDestroyPoolTable(_private::HandlePoolTable*, Allocator*)
0000000000252d14 t unsigned long _private::monobound_binary_first<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014bc34 t unsigned long _private::monobound_binary_first<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000251e90 t void _private::parity_tail_flip_eight<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
000000000014ae40 t void _private::parity_tail_flip_eight<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000251cec t void _private::parity_tail_swap_eight<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaBlockVector::SortByFreeSize()::$_0)
000000000014ac78 t void _private::parity_tail_swap_eight<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000252094 t void _private::partial_backward_merge<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, VmaDeviceMemoryBlock**, unsigned long, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014b050 t void _private::partial_backward_merge<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000174c6c T _private::sysCountersRemoveMutex()
0000000000150dec T _private::hashtableGrowWithBuffer(_private::HashTableData**, void*, unsigned long)
0000000000175068 T _private::sysCountersAddSemaphore()
0000000000174f14 T _private::sysCountersRemoveSignal()
0000000000174878 T _private::sysCountersRemoveThread(unsigned long)
00000000000f8638 T _private::assetReleaseImageManager()
0000000000118b94 T _private::assetReleaseModelManager()
000000000012e1b0 T _private::assetReleaseShaderManager()
000000000024f300 t VmaDeviceMemoryBlock* _private::blit_median_of_twentyfive<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
00000000001482c4 t MemTlsfAllocator::CalculateFragmentation()::AllocData _private::blit_median_of_twentyfive<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000150c40 T _private::hashtableCreateWithBuffer(unsigned int, unsigned int, void*, unsigned long)
00000000001691f4 T _private::handleGetMemoryRequirement(unsigned int)
00000000001751bc T _private::sysCountersRemoveSemaphore()
00000000000f7de0 T _private::assetInitializeImageManager()
0000000000118598 T _private::assetInitializeModelManager()
00000000002651fc T _private::imguiControlAlphaWithScroll(float*)
000000000012dccc T _private::assetInitializeShaderManager()
0000000000169328 T _private::handleGrowPoolTableWithBuffer(_private::HandlePoolTable**, void*, unsigned long)
0000000000150598 T _private::hashtableGetMemoryRequirement(unsigned int, unsigned int)
0000000000169274 T _private::handleCreatePoolTableWithBuffer(unsigned int, void*, unsigned long)
000000000024b29c T _private::gfxRecreatePipelinesWithNewShader(unsigned int, GfxShader*)
000000000016916c T _private::handleAt(_private::HandlePoolTable const*, unsigned int)
000000000017c6a4 T _private::ddRelease()
0000000000168f94 T _private::handleDel(_private::HandlePoolTable*, unsigned int)
0000000000168e8c T _private::handleNew(_private::HandlePoolTable*)
0000000000250968 t unsigned long _private::quad_swap<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
000000000014994c t unsigned long _private::quad_swap<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
000000000024d1ac t void _private::tail_swap<VmaDeviceMemoryBlock*, VmaBlockVector::SortByFreeSize()::$_0>(VmaDeviceMemoryBlock**, unsigned long, VmaBlockVector::SortByFreeSize()::$_0)
0000000000146254 t void _private::tail_swap<MemTlsfAllocator::CalculateFragmentation()::AllocData, MemTlsfAllocator::CalculateFragmentation()::$_2>(MemTlsfAllocator::CalculateFragmentation()::AllocData*, unsigned long, MemTlsfAllocator::CalculateFragmentation()::$_2)
0000000000178f68 t _private::socketTranslatePlatformErrorCode()
00000000000f4ffc W Allocator::Allocator()
0000000000134cac T CameraFPS::SetViewMat(Mat4 const&)
0000000000135564 T CameraFPS::MoveForward(float)
0000000000134f8c T CameraFPS::RotatePitch(float, float, float)
0000000000134e30 T CameraFPS::UpdateRotation()
00000000001362b8 T CameraFPS::HandleRotationMouse(AppEvent const&, float, float)
000000000013593c T CameraFPS::HandleMovementKeyboard(float, float, float)
0000000000135750 T CameraFPS::Strafe(float)
0000000000135284 T CameraFPS::RotateYaw(float)
0000000000134a98 T CameraFPS::SetLookAt(Float3, Float3, Float3)
0000000000273aec W CameraFPS::CameraFPS()
00000000002570c4 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::GetMutable(unsigned int)
00000000002566b0 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::SetAllocator(Allocator*)
0000000000258950 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Add(unsigned int)
000000000025717c W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Free()
0000000000258b60 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Remove(unsigned int)
0000000000256708 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Reserve(unsigned int)
000000000025a178 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::HashTable()
00000000000f4784 W HashTable<Handle<AssetHandleT> >::FindAndRemove(unsigned int)
00000000000f3a68 W HashTable<Handle<AssetHandleT> >::GetMemoryRequirement(unsigned int)
00000000000f5d04 W HashTable<Handle<AssetHandleT> >::Add(unsigned int, Handle<AssetHandleT> const&)
00000000000f7624 W HashTable<Handle<AssetHandleT> >::Remove(unsigned int)
00000000000f3a90 W HashTable<Handle<AssetHandleT> >::Reserve(unsigned int, void*, unsigned long)
00000000000f4f60 W HashTable<Handle<AssetHandleT> >::HashTable()
0000000000138028 W HashTable<Handle<ClipboardVarHandleT> >::GetMemoryRequirement(unsigned int)
0000000000138828 W HashTable<Handle<ClipboardVarHandleT> >::Add(unsigned int, Handle<ClipboardVarHandleT> const&)
0000000000138050 W HashTable<Handle<ClipboardVarHandleT> >::Reserve(unsigned int, void*, unsigned long)
0000000000138acc W HashTable<Handle<ClipboardVarHandleT> >::HashTable()
0000000000265874 W HashTable<char const*>::SetAllocator(Allocator*)
0000000000265ca4 W HashTable<char const*>::AddIfNotFound(unsigned int, char const* const&)
0000000000265a8c W HashTable<char const*>::Add(unsigned int, char const* const&)
0000000000265c0c W HashTable<char const*>::Free()
00000000002658cc W HashTable<char const*>::Reserve(unsigned int)
000000000026579c W HashTable<char const*>::HashTable()
00000000000f665c W HashTable<unsigned int>::FindAndRemove(unsigned int)
00000000000f3b18 W HashTable<unsigned int>::GetMemoryRequirement(unsigned int)
00000000000f5298 W HashTable<unsigned int>::Add(unsigned int, unsigned int const&)
00000000000f5264 W HashTable<unsigned int>::Set(unsigned int, unsigned int const&)
00000000000f6918 W HashTable<unsigned int>::Remove(unsigned int)
00000000000f3b40 W HashTable<unsigned int>::Reserve(unsigned int, void*, unsigned long)
00000000000f4fc8 W HashTable<unsigned int>::HashTable()
00000000001e2fe0 W ImDrawCmd::ImDrawCmd()
0000000000176e30 T Semaphore::Initialize()
0000000000177998 T Semaphore::Post(unsigned int)
0000000000177028 T Semaphore::Wait(unsigned int)
0000000000176ff8 T Semaphore::Release()
0000000000178ef4 T SocketTCP::CreateListener()
00000000001796cc T SocketTCP::Read(void*, unsigned int)
0000000000178e88 T SocketTCP::Close()
000000000017957c T SocketTCP::Write(void const*, unsigned int)
000000000017921c T SocketTCP::Accept(char*, unsigned int)
0000000000179044 T SocketTCP::Listen(unsigned short, unsigned int)
0000000000179398 T SocketTCP::Connect(char const*)
0000000000178e64 T SocketTCP::SocketTCP()
0000000000178e64 T SocketTCP::SocketTCP()
0000000000255648 W VmaPool_T::SetId(unsigned int)
0000000000237484 T VmaPool_T::SetName(char const*)
0000000000237290 T VmaPool_T::VmaPool_T(VmaAllocator_T*, VmaPoolCreateInfo const&, unsigned long)
0000000000237290 T VmaPool_T::VmaPool_T(VmaAllocator_T*, VmaPoolCreateInfo const&, unsigned long)
000000000023740c T VmaPool_T::~VmaPool_T()
000000000023740c T VmaPool_T::~VmaPool_T()
0000000000253b78 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::end()
0000000000253a64 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::back()
0000000000253b60 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::begin()
0000000000253c38 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::clear()
000000000025d8d8 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::remove(unsigned long)
0000000000253de8 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::resize(unsigned long)
0000000000253a88 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::pop_back()
00000000002539fc W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::push_back(VmaSuballocation const&)
00000000002537bc W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::VmaVector(VmaStlAllocator<VmaSuballocation> const&)
000000000025d7ac W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::~VmaVector()
0000000000253998 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::operator[](unsigned long)
000000000025f42c W VmaVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange> >::shrink_to_fit()
000000000025f4c8 W VmaVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange> >::data()
000000000025f308 W VmaVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange> >::resize(unsigned long)
000000000025f178 W VmaVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange> >::VmaVector(VmaStlAllocator<VkMappedMemoryRange> const&)
0000000000259ff4 W VmaVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange> >::~VmaVector()
0000000000255078 W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::data()
000000000025518c W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::clear()
000000000025e9e8 W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::resize(unsigned long)
0000000000255248 W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::push_back(VmaDefragmentationMove const&)
0000000000254ec4 W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::VmaVector(VmaStlAllocator<VmaDefragmentationMove> const&)
0000000000254fa8 W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::~VmaVector()
000000000025e848 W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::back()
0000000000259e80 W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::clear()
0000000000259ed4 W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::resize(unsigned long)
000000000025e86c W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::push_back(VmaPoolAllocator<VmaAllocation_T>::ItemBlock const&)
0000000000259ccc W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::VmaVector(VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> const&)
0000000000259ea8 W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::~VmaVector()
0000000000259e5c W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::operator[](unsigned long)
000000000025dc94 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::back()
000000000025d9f0 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::clear()
000000000025da44 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::resize(unsigned long)
000000000025dcb8 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::push_back(VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock const&)
000000000025d984 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::VmaVector(VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> const&)
000000000025da18 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::~VmaVector()
000000000025d9cc W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::operator[](unsigned long)
0000000000255110 W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::end()
00000000002550f8 W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::begin()
000000000025e8c8 W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::resize(unsigned long)
0000000000255130 W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::push_back(VmaDefragmentationContext_T::FragmentedBlock const&)
00000000002550b0 W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::VmaVector(VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> const&)
00000000002551cc W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::~VmaVector()
0000000000254d68 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::end()
0000000000254c94 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::back()
0000000000254d50 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::begin()
000000000025e534 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::remove(unsigned long)
000000000025e414 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::resize(unsigned long)
0000000000254cb8 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::pop_back()
0000000000254e44 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::push_back(VmaDeviceMemoryBlock* const&)
0000000000254b54 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::VmaVector(VmaStlAllocator<VmaDeviceMemoryBlock*> const&)
0000000000254bc0 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::~VmaVector()
0000000000254b9c W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::operator[](unsigned long)
00000000002541f8 W VmaVector<VmaBlockMetadata_TLSF::Block*, VmaStlAllocator<VmaBlockMetadata_TLSF::Block*> >::VmaVector(unsigned long, VmaStlAllocator<VmaBlockMetadata_TLSF::Block*> const&)
0000000000254298 W VmaVector<VmaBlockMetadata_TLSF::Block*, VmaStlAllocator<VmaBlockMetadata_TLSF::Block*> >::~VmaVector()
0000000000254274 W VmaVector<VmaBlockMetadata_TLSF::Block*, VmaStlAllocator<VmaBlockMetadata_TLSF::Block*> >::operator[](unsigned long)
000000000029ce98 t libunwind::CFI_Parser<libunwind::LocalAddressSpace>::parseFDEInstructions(libunwind::LocalAddressSpace&, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::FDE_Info const&, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::CIE_Info const&, unsigned long, int, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::PrologInfo*)
000000000029f4b4 t libunwind::CFI_Parser<libunwind::LocalAddressSpace>::findFDE(libunwind::LocalAddressSpace&, unsigned long, unsigned long, unsigned long, unsigned long, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::FDE_Info*, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::CIE_Info*)
000000000029f8f8 t libunwind::CFI_Parser<libunwind::LocalAddressSpace>::parseCIE(libunwind::LocalAddressSpace&, unsigned long, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::CIE_Info*)
000000000029c2e4 t libunwind::CFI_Parser<libunwind::LocalAddressSpace>::decodeFDE(libunwind::LocalAddressSpace&, unsigned long, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::FDE_Info*, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::CIE_Info*)
000000000029c734 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getFloatReg(int)
000000000029c744 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::setFloatReg(int, double)
000000000029c874 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::isSignalFrame()
000000000029c720 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::validFloatReg(int)
000000000029c880 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getFunctionName(char*, unsigned long, unsigned long*)
000000000029ca9c t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getRegisterName(int)
000000000029caa8 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::stepThroughSigReturn(libunwind::Registers_arm64&)
000000000029f004 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getInfoFromDwarfSection(unsigned long, libunwind::UnwindInfoSections const&, unsigned int)
000000000029c8ac t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::setInfoBasedOnIPRegister(bool)
000000000029c754 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::step()
000000000029c5e8 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getReg(int)
000000000029c868 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::jumpto()
000000000029c684 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::setReg(int, unsigned long)
000000000029c824 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getInfo(unw_proc_info_t*)
000000000029c5a4 t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::validReg(int)
000000000029c59c t libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::~UnwindCursor()
00000000002be2f0 d libunwind::DwarfFDECache<libunwind::LocalAddressSpace>::_bufferEnd
00000000002be2e8 d libunwind::DwarfFDECache<libunwind::LocalAddressSpace>::_bufferUsed
00000000002c9f10 b libunwind::DwarfFDECache<libunwind::LocalAddressSpace>::_initialBuffer
00000000002c9ed4 b libunwind::DwarfFDECache<libunwind::LocalAddressSpace>::_lock
00000000002be2e0 d libunwind::DwarfFDECache<libunwind::LocalAddressSpace>::_buffer
000000000029fcec t libunwind::EHHeaderParser<libunwind::LocalAddressSpace>::getTableEntrySize(unsigned char)
000000000029f71c t libunwind::EHHeaderParser<libunwind::LocalAddressSpace>::findFDE(libunwind::LocalAddressSpace&, unsigned long, unsigned long, unsigned int, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::FDE_Info*, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::CIE_Info*)
000000000029fdc4 t libunwind::Registers_arm64::getRegisterName(int)
000000000029cbcc t libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::stepWithDwarf(libunwind::LocalAddressSpace&, unsigned long, unsigned long, libunwind::Registers_arm64&, bool&)
000000000029e230 t libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getSavedRegister(libunwind::LocalAddressSpace&, libunwind::Registers_arm64 const&, unsigned long, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::RegisterLocation const&)
000000000029e688 t libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::evaluateExpression(unsigned long, libunwind::LocalAddressSpace&, libunwind::Registers_arm64 const&, unsigned long)
000000000029e14c t libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_arm64>::getCFA(libunwind::LocalAddressSpace&, libunwind::CFI_Parser<libunwind::LocalAddressSpace>::PrologInfo const&, libunwind::Registers_arm64 const&)
000000000029e398 t libunwind::LocalAddressSpace::getEncodedP(unsigned long&, unsigned long, unsigned char, unsigned long)
00000000002c9ed0 b libunwind::LocalAddressSpace::sThisAddressSpace
000000000029c594 t libunwind::AbstractUnwindCursor::~AbstractUnwindCursor()
000000000029f2e4 t libunwind::findUnwindSectionsByPhdr(dl_phdr_info*, unsigned long, void*)
00000000002573a8 W HandlePool<Handle<GfxBufferT>, GfxBufferData, 32u>::Count() const
00000000000f4d54 W HandlePool<Handle<AssetHandleT>, Asset, 32u>::Count() const
000000000025784c W HandlePool<Handle<GfxPipelineT>, GfxPipelineData, 32u>::Count() const
00000000000f4dc4 W HandlePool<Handle<AssetBarrierT>, Signal, 32u>::Count() const
00000000002579d8 W HandlePool<Handle<GfxDescriptorSetT>, GfxDescriptorSetData, 32u>::Count() const
00000000002576c0 W HandlePool<Handle<GfxPipelineLayoutT>, GfxPipelineLayoutData, 32u>::Count() const
0000000000257b64 W HandlePool<Handle<GfxDescriptorSetLayoutT>, GfxDescriptorSetLayoutData, 32u>::Count() const
0000000000257534 W HandlePool<Handle<GfxImageT>, GfxImageData, 32u>::Count() const
00000000001f2f20 W ImBitArray<132>::TestBit(int) const
00000000001ca8b0 T ImDrawList::CloneOutput() const
00000000001cae18 T ImDrawList::_CalcCircleAutoSegmentCount(float) const
0000000000154170 T IniContext::GetSection(unsigned int) const
0000000000154294 T IniContext::NewSection(char const*) const
0000000000154320 T IniContext::FindSection(char const*) const
0000000000154234 T IniContext::GetRootSection() const
00000000001541d8 T IniContext::GetSectionName(unsigned int) const
000000000015411c T IniContext::GetSectionCount() const
000000000026596c W IniContext::IsValid() const
0000000000265c5c W IniSection::IsValid() const
0000000000299804 t __cxxabiv1::__enum_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
000000000029960c t __cxxabiv1::__shim_type_info::noop1() const
0000000000299614 t __cxxabiv1::__shim_type_info::noop2() const
00000000002997ec t __cxxabiv1::__array_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
000000000029af80 t __cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
000000000029aae0 t __cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
0000000000299904 t __cxxabiv1::__class_type_info::process_found_base_class(__cxxabiv1::__dynamic_cast_info*, void*, int) const
0000000000299960 t __cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
000000000029a444 t __cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
000000000029a4e8 t __cxxabiv1::__class_type_info::process_static_type_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int) const
000000000029981c t __cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
0000000000299bf4 t __cxxabiv1::__pbase_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
0000000000299fc4 t __cxxabiv1::__pointer_type_info::can_catch_nested(__cxxabiv1::__shim_type_info const*) const
0000000000299c94 t __cxxabiv1::__pointer_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
00000000002997f8 t __cxxabiv1::__function_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
000000000029ae44 t __cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
000000000029a934 t __cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
00000000002999d4 t __cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
000000000029ac08 t __cxxabiv1::__vmi_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
000000000029a510 t __cxxabiv1::__vmi_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
0000000000299a98 t __cxxabiv1::__vmi_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
000000000029a8bc t __cxxabiv1::__base_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
000000000029a8f8 t __cxxabiv1::__base_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
0000000000299a54 t __cxxabiv1::__base_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
00000000002997d4 t __cxxabiv1::__fundamental_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
000000000029a108 t __cxxabiv1::__pointer_to_member_type_info::can_catch_nested(__cxxabiv1::__shim_type_info const*) const
000000000029a19c t __cxxabiv1::__pointer_to_member_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
00000000001e4a50 W ImBitVector::TestBit(int) const
00000000001d2ff4 T ImFontAtlas::CalcCustomRectUV(ImFontAtlasCustomRect const*, ImVec2*, ImVec2*) const
00000000001c47a0 W ImFontAtlas::IsBuilt() const
00000000001c2c80 W ImGuiTabBar::GetTabName(ImGuiTabItem const*) const
00000000001c5390 W ImGuiTabBar::GetTabOrder(ImGuiTabItem const*) const
00000000001c4460 W ImGuiWindow::MenuBarRect() const
00000000001c0e78 W ImGuiWindow::CalcFontSize() const
00000000001bedec W ImGuiWindow::TitleBarRect() const
00000000001c08e4 W ImGuiWindow::MenuBarHeight() const
00000000001c0878 W ImGuiWindow::TitleBarHeight() const
00000000001c0a40 W ImGuiWindow::Rect() const
0000000000265c80 W IniProperty::IsValid() const
000000000012cc20 W RelativePtr<ModelSubmesh>::Get() const
000000000012c990 W RelativePtr<ModelSubmesh>::operator[](unsigned int) const
000000000012c9f8 W RelativePtr<ModelMaterial>::Get() const
000000000025b3dc W RelativePtr<GfxShaderStageInfo>::Get() const
000000000025b3a4 W RelativePtr<GfxShaderStageInfo>::operator[](unsigned int) const
000000000012eb14 W RelativePtr<GfxShaderParameterInfo>::Get() const
000000000025d6d8 W RelativePtr<GfxShaderParameterInfo>::operator[](unsigned int) const
000000000012eac0 W RelativePtr<GfxShaderVertexAttributeInfo>::Get() const
000000000012cbcc W RelativePtr<ModelMesh>::Get() const
000000000012c960 W RelativePtr<ModelMesh>::operator[](unsigned int) const
000000000012da24 W RelativePtr<ModelNode>::Get() const
000000000012cc74 W RelativePtr<RelativePtr<ModelMaterial> >::Get() const
000000000012c9c8 W RelativePtr<RelativePtr<ModelMaterial> >::operator[](unsigned int) const
000000000012cdcc W RelativePtr<char>::Get() const
000000000012ca4c W RelativePtr<char>::IsNull() const
00000000000f5b04 W RelativePtr<unsigned char>::Get() const
000000000010f524 W RelativePtr<unsigned char>::IsNull() const
000000000010df5c W RelativePtr<unsigned char>::operator!() const
000000000012c698 W RelativePtr<unsigned int>::Get() const
00000000000f43b4 W StaticArray<AssetMetaKeyValue, 64u>::Count() const
000000000025ac68 W StaticArray<VkAttachmentDescription, 2u>::Count() const
00000000002564e8 W StaticArray<VkDeviceQueueCreateInfo, 4u>::Count() const
0000000000256220 W StaticArray<VkValidationFeatureEnableEXT, 5u>::Count() const
00000000002580d4 W StaticArray<VkCommandBuffer_T*, 32u>::Count() const
000000000016c388 W StaticArray<SettingsCustomCallbacks*, 8u>::Count() const
0000000000256250 W StaticArray<char const*, 32u>::Count() const
00000000002560ac W StaticArray<char const*, 4u>::Count() const
000000000014f434 W StaticArray<void*, 16u>::Count() const
0000000000265630 W StaticArray<unsigned short, 128u>::Count() const
00000000001c16ac W ImGuiPayload::IsDataType(char const*) const
00000000001c244c W ImGuiPayload::IsDelivery() const
00000000001c2430 W ImGuiPayload::IsPreview() const
00000000001837fc T ImGuiStorage::GetVoidPtr(unsigned int) const
00000000001835d4 T ImGuiStorage::GetInt(unsigned int, int) const
0000000000183720 T ImGuiStorage::GetBool(unsigned int, bool) const
0000000000183774 T ImGuiStorage::GetFloat(unsigned int, float) const
0000000000293bdc t (anonymous namespace)::itanium_demangle::AbiTagAttr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028f944 t (anonymous namespace)::itanium_demangle::BinaryExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029266c t (anonymous namespace)::itanium_demangle::BracedExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000290348 t (anonymous namespace)::itanium_demangle::DeleteExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028ec70 t (anonymous namespace)::itanium_demangle::LambdaExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002923b4 t (anonymous namespace)::itanium_demangle::MemberExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000288654 t (anonymous namespace)::itanium_demangle::NestedName::getBaseName() const
0000000000288554 t (anonymous namespace)::itanium_demangle::NestedName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028fcb4 t (anonymous namespace)::itanium_demangle::PrefixExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002936a4 t (anonymous namespace)::itanium_demangle::UUIDOfExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296438 t (anonymous namespace)::itanium_demangle::VectorType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296eb4 t (anonymous namespace)::itanium_demangle::PointerType::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296b54 t (anonymous namespace)::itanium_demangle::PointerType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296b80 t (anonymous namespace)::itanium_demangle::PointerType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000292c2c t (anonymous namespace)::itanium_demangle::PostfixExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000286f9c t (anonymous namespace)::itanium_demangle::SpecialName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000293ad4 t (anonymous namespace)::itanium_demangle::CtorDtorName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294744 t (anonymous namespace)::itanium_demangle::EnableIfAttr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000295ad8 t (anonymous namespace)::itanium_demangle::FunctionType::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000295a44 t (anonymous namespace)::itanium_demangle::FunctionType::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000295a38 t (anonymous namespace)::itanium_demangle::FunctionType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000295a50 t (anonymous namespace)::itanium_demangle::FunctionType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000292b10 t (anonymous namespace)::itanium_demangle::InitListExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029582c t (anonymous namespace)::itanium_demangle::NoexceptSpec::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029443c t (anonymous namespace)::itanium_demangle::TemplateArgs::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002930f4 t (anonymous namespace)::itanium_demangle::EnclosingExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028eee8 t (anonymous namespace)::itanium_demangle::FunctionParam::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002935b8 t (anonymous namespace)::itanium_demangle::NodeArrayNode::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000295e64 t (anonymous namespace)::itanium_demangle::ObjCProtoName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002943e8 t (anonymous namespace)::itanium_demangle::ParameterPack::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294280 t (anonymous namespace)::itanium_demangle::ParameterPack::hasArraySlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294350 t (anonymous namespace)::itanium_demangle::ParameterPack::getSyntaxNode((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002942e8 t (anonymous namespace)::itanium_demangle::ParameterPack::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294218 t (anonymous namespace)::itanium_demangle::ParameterPack::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029439c t (anonymous namespace)::itanium_demangle::ParameterPack::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000290b10 t (anonymous namespace)::itanium_demangle::QualifiedName::getBaseName() const
0000000000290a10 t (anonymous namespace)::itanium_demangle::QualifiedName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002972d4 t (anonymous namespace)::itanium_demangle::ReferenceType::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000297004 t (anonymous namespace)::itanium_demangle::ReferenceType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000297030 t (anonymous namespace)::itanium_demangle::ReferenceType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028d920 t (anonymous namespace)::itanium_demangle::StringLiteral::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002901d8 t (anonymous namespace)::itanium_demangle::ConversionExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028cd84 t (anonymous namespace)::itanium_demangle::IntegerLiteral::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002928b4 t (anonymous namespace)::itanium_demangle::BracedRangeExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028eae0 t (anonymous namespace)::itanium_demangle::ClosureTypeName::printDeclarator((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e984 t (anonymous namespace)::itanium_demangle::ClosureTypeName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000293230 t (anonymous namespace)::itanium_demangle::ConditionalExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028ed70 t (anonymous namespace)::itanium_demangle::IntegerCastExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002921f8 t (anonymous namespace)::itanium_demangle::LiteralOperator::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296318 t (anonymous namespace)::itanium_demangle::PixelVectorType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028df80 t (anonymous namespace)::itanium_demangle::UnnamedTypeName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028d3d0 t (anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028d688 t (anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028d130 t (anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294950 t (anonymous namespace)::itanium_demangle::FunctionEncoding::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294844 t (anonymous namespace)::itanium_demangle::FunctionEncoding::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294838 t (anonymous namespace)::itanium_demangle::FunctionEncoding::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294850 t (anonymous namespace)::itanium_demangle::FunctionEncoding::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294714 t (anonymous namespace)::itanium_demangle::StdQualifiedName::getBaseName() const
0000000000294644 t (anonymous namespace)::itanium_demangle::StdQualifiedName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000295fd8 t (anonymous namespace)::itanium_demangle::VendorExtQualType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002924d0 t (anonymous namespace)::itanium_demangle::ArraySubscriptExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000292398 t (anonymous namespace)::itanium_demangle::GlobalQualifiedName::getBaseName() const
00000000002922d8 t (anonymous namespace)::itanium_demangle::GlobalQualifiedName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296938 t (anonymous namespace)::itanium_demangle::PointerToMemberType::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296750 t (anonymous namespace)::itanium_demangle::PointerToMemberType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029677c t (anonymous namespace)::itanium_demangle::PointerToMemberType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000293474 t (anonymous namespace)::itanium_demangle::SizeofParamPackExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002941e8 t (anonymous namespace)::itanium_demangle::SpecialSubstitution::getBaseName() const
0000000000293f1c t (anonymous namespace)::itanium_demangle::SpecialSubstitution::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029594c t (anonymous namespace)::itanium_demangle::DynamicExceptionSpec::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294628 t (anonymous namespace)::itanium_demangle::NameWithTemplateArgs::getBaseName() const
000000000029457c t (anonymous namespace)::itanium_demangle::NameWithTemplateArgs::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000297448 t (anonymous namespace)::itanium_demangle::PostfixQualifiedType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294730 t (anonymous namespace)::itanium_demangle::TemplateArgumentPack::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028709c t (anonymous namespace)::itanium_demangle::CtorVtableSpecialName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000293d3c t (anonymous namespace)::itanium_demangle::StructuredBindingName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e968 t (anonymous namespace)::itanium_demangle::TemplateParamPackDecl::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e8d4 t (anonymous namespace)::itanium_demangle::TemplateParamPackDecl::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e4a8 t (anonymous namespace)::itanium_demangle::TypeTemplateParamDecl::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e41c t (anonymous namespace)::itanium_demangle::TypeTemplateParamDecl::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029211c t (anonymous namespace)::itanium_demangle::ConversionOperatorType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296a1c t (anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028f748 t (anonymous namespace)::itanium_demangle::ParameterPackExpansion::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000288944 t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002887ac t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::hasArraySlow((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028889c t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::getSyntaxNode((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000288824 t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000288734 t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002888f4 t (anonymous namespace)::itanium_demangle::ForwardTemplateReference::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e5c8 t (anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e514 t (anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e748 t (anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e644 t (anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e190 t (anonymous namespace)::itanium_demangle::SyntheticTemplateParamName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000293aa4 t (anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution::getBaseName() const
00000000002937c4 t (anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028707c t (anonymous namespace)::itanium_demangle::Node::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000287084 t (anonymous namespace)::itanium_demangle::Node::getBaseName() const
0000000000286f7c t (anonymous namespace)::itanium_demangle::Node::hasArraySlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000286f94 t (anonymous namespace)::itanium_demangle::Node::getSyntaxNode((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000286f88 t (anonymous namespace)::itanium_demangle::Node::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000286f70 t (anonymous namespace)::itanium_demangle::Node::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000292da4 t (anonymous namespace)::itanium_demangle::NewExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028d070 t (anonymous namespace)::itanium_demangle::BoolExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028ffec t (anonymous namespace)::itanium_demangle::CallExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028fe30 t (anonymous namespace)::itanium_demangle::CastExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000292088 t (anonymous namespace)::itanium_demangle::DtorName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028efe0 t (anonymous namespace)::itanium_demangle::FoldExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028853c t (anonymous namespace)::itanium_demangle::NameType::getBaseName() const
00000000002884a8 t (anonymous namespace)::itanium_demangle::NameType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002962fc t (anonymous namespace)::itanium_demangle::QualType::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296128 t (anonymous namespace)::itanium_demangle::QualType::hasArraySlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296154 t (anonymous namespace)::itanium_demangle::QualType::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002960fc t (anonymous namespace)::itanium_demangle::QualType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296180 t (anonymous namespace)::itanium_demangle::QualType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002965bc t (anonymous namespace)::itanium_demangle::ArrayType::printRight((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000029659c t (anonymous namespace)::itanium_demangle::ArrayType::hasArraySlow((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000296590 t (anonymous namespace)::itanium_demangle::ArrayType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002965a8 t (anonymous namespace)::itanium_demangle::ArrayType::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000294c90 t (anonymous namespace)::itanium_demangle::DotSuffix::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
0000000000293e14 t (anonymous namespace)::itanium_demangle::LocalName::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
000000000028e7b4 t (anonymous namespace)::itanium_demangle::NodeArray::printWithComma((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000002935cc t (anonymous namespace)::itanium_demangle::ThrowExpr::printLeft((anonymous namespace)::itanium_demangle::OutputStream&) const
00000000001c2704 W ImChunkStream<ImGuiTableSettings>::size() const
00000000001c26ec W ImChunkStream<ImGuiWindowSettings>::size() const
00000000001c4ab0 W ImChunkStream<ImGuiWindowSettings>::empty() const
00000000001c20b4 W ImGuiDockNode::IsLeafNode() const
00000000001c240c W ImGuiDockNode::IsNoTabBar() const
00000000001c1c0c W ImGuiDockNode::IsRootNode() const
00000000001bed68 W ImGuiDockNode::IsDockSpace() const
00000000001c1c30 W ImGuiDockNode::IsSplitNode() const
00000000001c1e20 W ImGuiDockNode::IsCentralNode() const
00000000001c1d1c W ImGuiDockNode::IsFloatingNode() const
00000000001c23e8 W ImGuiDockNode::IsHiddenTabBar() const
00000000001c5288 W ImGuiDockNode::Rect() const
00000000001c5244 W ImGuiDockNode::IsEmpty() const
00000000001c1478 W ImGuiViewport::GetCenter() const
00000000001bf1d4 W ImGuiViewportP::GetMainRect() const
00000000001c0a98 W ImGuiViewportP::GetWorkRect() const
00000000001c3ccc W ImGuiViewportP::CalcWorkRectPos(ImVec2 const&) const
00000000001c3d20 W ImGuiViewportP::CalcWorkRectSize(ImVec2 const&, ImVec2 const&) const
000000000021d874 W ImGuiViewportP::GetBuildWorkRect() const
00000000000f6e30 W TimerStopWatch::Elapsed() const
00000000000f653c W TimerStopWatch::ElapsedMS() const
00000000002555b8 W VmaAllocator_T::IsIntegratedGpu() const
0000000000255b24 W VmaAllocator_T::GetPhysicalDevice() const
000000000025542c W VmaAllocator_T::GetMemoryHeapCount() const
0000000000254f20 W VmaAllocator_T::GetMemoryTypeCount() const
000000000025490c W VmaAllocator_T::GetVulkanFunctions() const
0000000000239ddc T VmaAllocator_T::FindMemoryTypeIndex(unsigned int, VmaAllocationCreateInfo const*, unsigned int, unsigned int*) const
00000000002547c8 W VmaAllocator_T::GetAllocationCallbacks() const
00000000002555a0 W VmaAllocator_T::GetGlobalMemoryTypeBits() const
0000000000255ac0 W VmaAllocator_T::IsMemoryTypeNonCoherent(unsigned int) const
0000000000254f58 W VmaAllocator_T::GetBufferImageGranularity() const
000000000023ba34 T VmaAllocator_T::GetFlushOrInvalidateRange(VmaAllocation_T*, unsigned long, unsigned long, VkMappedMemoryRange&) const
00000000002552b8 W VmaAllocator_T::GetMemoryTypeMinAlignment(unsigned int) const
0000000000239c90 T VmaAllocator_T::GetImageMemoryRequirements(VkImage_T*, VkMemoryRequirements&, bool&, bool&) const
0000000000254c10 W VmaAllocator_T::MemoryTypeIndexToHeapIndex(unsigned int) const
0000000000239b14 T VmaAllocator_T::GetBufferMemoryRequirements(VkBuffer_T*, VkMemoryRequirements&, bool&, bool&) const
0000000000237bb0 T VmaAllocator_T::CalculateGlobalMemoryTypeBits() const
0000000000254e1c W VmaAllocator_T::GetExternalMemoryHandleTypeFlags(unsigned int) const
000000000023bf40 T VmaAllocator_T::CalculateGpuDefragmentationMemoryTypeBits() const
00000000002555dc W VmaBlockVector::GetPriority() const
0000000000255b54 W VmaBlockVector::GetAlgorithm() const
0000000000254fec W VmaBlockVector::GetAllocator() const
0000000000255004 W VmaBlockVector::GetBlockCount() const
0000000000233dbc T VmaBlockVector::CalcMaxBlockSize() const
00000000002555f4 W VmaBlockVector::GetMemoryTypeIndex() const
00000000002554d4 W VmaBlockVector::GetAllocationNextPtr() const
0000000000254c78 W VmaBlockVector::HasExplicitBlockSize() const
00000000002554ec W VmaBlockVector::GetPreferredBlockSize() const
0000000000232c7c T VmaBlockVector::IsCorruptionDetectionEnabled() const
000000000025502c W VmaBlockVector::GetBlock(unsigned long) const
0000000000255a2c W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::size() const
0000000000255a08 W VmaSmallVector<VkMappedMemoryRange, VmaStlAllocator<VkMappedMemoryRange>, 16ul>::empty() const
00000000001c1ac4 W ImGuiTextBuffer::size() const
00000000001c1730 W ImGuiTextBuffer::begin() const
00000000001c1b04 W ImGuiTextBuffer::c_str() const
00000000001c170c W ImGuiTextBuffer::empty() const
000000000018412c T ImGuiTextFilter::PassFilter(char const*, char const*) const
00000000001bce34 W ImGuiTextFilter::ImGuiTextRange::empty() const
0000000000184000 T ImGuiTextFilter::ImGuiTextRange::split(char, ImVector<ImGuiTextFilter::ImGuiTextRange>*) const
00000000002536c8 W VmaAllocation_T::GetUserData() const
0000000000255218 W VmaAllocation_T::GetAlignment() const
00000000002320d0 T VmaAllocation_T::GetMappedData() const
0000000000231fc0 T VmaAllocation_T::GetParentPool() const
000000000022b220 T VmaAllocation_T::GetAllocHandle() const
0000000000254af8 W VmaAllocation_T::IsPersistentMap() const
0000000000254a68 W VmaAllocation_T::IsMappingAllowed() const
00000000002550e0 W VmaAllocation_T::GetMemoryTypeIndex() const
0000000000255230 W VmaAllocation_T::GetSuballocationType() const
00000000002536e0 W VmaAllocation_T::GetName() const
000000000025346c W VmaAllocation_T::GetSize() const
00000000002549fc W VmaAllocation_T::GetType() const
0000000000254a14 W VmaAllocation_T::GetBlock() const
0000000000232048 T VmaAllocation_T::GetMemory() const
0000000000231704 T VmaAllocation_T::GetOffset() const
0000000000259940 W GfxHeapAllocator::GetType() const
000000000014df98 W MemHeapAllocator::GetType() const
0000000000144cf8 T MemTempAllocator::GetPointerOffset(void*) const
000000000015f710 W MemTempAllocator::GetId() const
000000000014c958 W MemTempAllocator::GetType() const
0000000000144c68 T MemTempAllocator::GetOffset() const
00000000002596d4 W MemTlsfAllocator::IsDebugMode() const
00000000000f4e04 W MemTlsfAllocator::GetAllocatedSize() const
000000000014c96c W MemTlsfAllocator::GetType() const
0000000000253910 W VmaBlockMetadata::GetDebugMargin() const
0000000000229ac4 T VmaBlockMetadata::DebugLogAllocation(unsigned long, unsigned long, void*) const
0000000000253fa8 W VmaBlockMetadata::GetAllocationCallbacks() const
0000000000253f08 W VmaBlockMetadata::GetBufferImageGranularity() const
0000000000253940 W VmaBlockMetadata::GetSize() const
00000000002536ac W VmaBlockMetadata::IsVirtual() const
000000000017c85c W AssetBarrierScope::Barrier() const
00000000001c2514 W ImDrawDataBuilder::GetDrawListCount() const
00000000001bd604 W ImGuiStyleVarInfo::GetVarPtr(ImGuiStyle*) const
0000000000230a50 T VmaVirtualBlock_T::GetStatistics(VmaStatistics&) const
0000000000230794 T VmaVirtualBlock_T::GetAllocationCallbacks() const
0000000000230ac8 T VmaVirtualBlock_T::CalculateDetailedStatistics(VmaDetailedStatistics&) const
0000000000255bac W VmaVirtualBlock_T::IsEmpty() const
000000000017c714 W CameraFrustumPoints::Count() const
000000000021d640 W ImGuiInputTextState::HasSelection() const
000000000015ff20 W MemSingleShotMalloc<JsonContext, 8u>::GetMemoryRequirement() const
000000000015a464 W MemSingleShotMalloc<JobsAtomicPool<JobsInstance, 512u>, 8u>::GetMemoryRequirement() const
000000000015aa58 W MemSingleShotMalloc<JobsAtomicPool<JobsFiberProperties, 4096u>, 8u>::GetMemoryRequirement() const
00000000000f608c W MemSingleShotMalloc<AssetLoadParams, 8u>::GetMemoryRequirement() const
000000000025d6c0 W MemSingleShotMalloc<VkGraphicsPipelineCreateInfo, 12u>::GetMemoryRequirement() const
000000000010edd8 W MemSingleShotMalloc<AssetDescriptorUpdateCacheItem, 8u>::GetMemoryRequirement() const
000000000025d460 W MemSingleShotMalloc<VkPipelineDynamicStateCreateInfo, 8u>::GetMemoryRequirement() const
000000000025d448 W MemSingleShotMalloc<VkPipelineColorBlendStateCreateInfo, 8u>::GetMemoryRequirement() const
000000000025d430 W MemSingleShotMalloc<VkPipelineVertexInputStateCreateInfo, 8u>::GetMemoryRequirement() const
0000000000151288 W MemSingleShotMalloc<_private::HashTableData, 8u>::GetMemoryRequirement() const
00000000001697d8 W MemSingleShotMalloc<_private::HandlePoolTable, 8u>::GetMemoryRequirement() const
000000000017ae0c W MemBumpAllocatorBase::GetCommitedSize() const
000000000014c944 W MemBumpAllocatorBase::GetType() const
00000000000f3588 W MemBumpAllocatorBase::GetOffset() const
0000000000254b1c W VmaDeviceMemoryBlock::GetMappedData() const
0000000000254ac8 W VmaDeviceMemoryBlock::GetParentPool() const
0000000000254ae0 W VmaDeviceMemoryBlock::GetDeviceMemory() const
0000000000231108 T VmaDeviceMemoryBlock::Validate() const
00000000002548f4 W VmaMappingHysteresis::GetExtraMapping() const
00000000001e41c0 W ImFontAtlasCustomRect::IsPacked() const
00000000002302f0 T VmaBlockMetadata_TLSF::GetListIndex(unsigned char, unsigned short) const
000000000022e4d0 T VmaBlockMetadata_TLSF::GetListIndex(unsigned long) const
000000000022e5fc T VmaBlockMetadata_TLSF::AddStatistics(VmaStatistics&) const
000000000022f0ac T VmaBlockMetadata_TLSF::FindFreeBlock(unsigned long, unsigned int&) const
00000000002598d8 W VmaBlockMetadata_TLSF::GetSumFreeSize() const
0000000000230004 T VmaBlockMetadata_TLSF::GetNextAllocation(VmaAllocHandle_T*) const
000000000022dcac T VmaBlockMetadata_TLSF::SizeToMemoryClass(unsigned long) const
000000000022dcf8 T VmaBlockMetadata_TLSF::SizeToSecondIndex(unsigned long, unsigned char) const
00000000002598a4 W VmaBlockMetadata_TLSF::GetAllocationCount() const
0000000000259924 W VmaBlockMetadata_TLSF::GetAllocationOffset(VmaAllocHandle_T*) const
00000000002598bc W VmaBlockMetadata_TLSF::GetFreeRegionsCount() const
000000000022e530 T VmaBlockMetadata_TLSF::AddDetailedStatistics(VmaDetailedStatistics&) const
000000000022ff18 T VmaBlockMetadata_TLSF::GetAllocationUserData(VmaAllocHandle_T*) const
0000000000230094 T VmaBlockMetadata_TLSF::GetNextFreeRegionSize(VmaAllocHandle_T*) const
0000000000230264 T VmaBlockMetadata_TLSF::DebugLogAllAllocations() const
000000000022ff70 T VmaBlockMetadata_TLSF::GetAllocationListBegin() const
00000000002541b4 W VmaBlockMetadata_TLSF::Block::IsFree() const
00000000002598fc W VmaBlockMetadata_TLSF::IsEmpty() const
000000000022ddbc T VmaBlockMetadata_TLSF::Validate() const
000000000014580c T MemThreadSafeAllocator::GetType() const
0000000000139920 T SettingsJunkyardParser::GetCategory(unsigned int) const
000000000013990c T SettingsJunkyardParser::GetCategoryCount() const
0000000000255444 W VmaIntrusiveLinkedList<VmaPoolListItemTraits>::IsEmpty() const
0000000000253318 W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::IsEmpty() const
0000000000253370 W VmaIntrusiveLinkedList<VmaDedicatedAllocationListItemTraits>::GetCount() const
000000000024bde8 T GfxDynamicUniformBuffer::IsValid() const
000000000022b808 T VmaBlockMetadata_Linear::AddStatistics(VmaStatistics&) const
0000000000259838 W VmaBlockMetadata_Linear::GetSumFreeSize() const
000000000022d790 T VmaBlockMetadata_Linear::ShouldCompact1st() const
000000000022d338 T VmaBlockMetadata_Linear::FindSuballocation(unsigned long) const
000000000022d570 T VmaBlockMetadata_Linear::GetNextAllocation(VmaAllocHandle_T*) const
000000000022b29c T VmaBlockMetadata_Linear::GetAllocationCount() const
0000000000259888 W VmaBlockMetadata_Linear::GetAllocationOffset(VmaAllocHandle_T*) const
000000000022b300 T VmaBlockMetadata_Linear::GetFreeRegionsCount() const
000000000022b338 T VmaBlockMetadata_Linear::AddDetailedStatistics(VmaDetailedStatistics&) const
000000000022d504 T VmaBlockMetadata_Linear::GetAllocationUserData(VmaAllocHandle_T*) const
000000000022d5ac T VmaBlockMetadata_Linear::GetNextFreeRegionSize(VmaAllocHandle_T*) const
000000000022d684 T VmaBlockMetadata_Linear::DebugLogAllAllocations() const
000000000022d538 T VmaBlockMetadata_Linear::GetAllocationListBegin() const
000000000025380c W VmaBlockMetadata_Linear::AccessSuballocations1st() const
000000000025384c W VmaBlockMetadata_Linear::AccessSuballocations2nd() const
0000000000259850 W VmaBlockMetadata_Linear::IsEmpty() const
000000000022a7fc T VmaBlockMetadata_Linear::Validate() const
00000000001e441c W ImFontGlyphRangesBuilder::GetBit(unsigned long) const
000000000025d838 W VmaSuballocationOffsetLess::operator()(VmaSuballocation const&, VmaSuballocation const&) const
000000000025d86c W VmaSuballocationOffsetGreater::operator()(VmaSuballocation const&, VmaSuballocation const&) const
0000000000253754 W VmaBlockBufferImageGranularity::GetEndPage(unsigned long, unsigned long) const
000000000025371c W VmaBlockBufferImageGranularity::GetStartPage(unsigned long) const
000000000022a30c T VmaBlockBufferImageGranularity::StartValidation(VkAllocationCallbacks const*, bool) const
000000000022a508 T VmaBlockBufferImageGranularity::FinishValidation(VmaBlockBufferImageGranularity::ValidationContext&) const
000000000022a668 T VmaBlockBufferImageGranularity::OffsetToPageIndex(unsigned long) const
0000000000229d30 T VmaBlockBufferImageGranularity::RoundupAllocRequest(VmaSuballocationType, unsigned long&, unsigned long&) const
0000000000229e08 T VmaBlockBufferImageGranularity::CheckConflictAndAlignUp(unsigned long&, unsigned long, unsigned long, unsigned long, VmaSuballocationType) const
000000000022a3c8 T VmaBlockBufferImageGranularity::Validate(VmaBlockBufferImageGranularity::ValidationContext&, unsigned long, unsigned long) const
00000000002536f8 W VmaBlockBufferImageGranularity::IsEnabled() const
0000000000140614 W Blob::ReadOffset() const
000000000010e5dc W Blob::ReadStringBinary(char*, unsigned int) const
00000000000f40b4 W Blob::Data() const
00000000000f67e8 W Blob::Read(void*, unsigned long) const
0000000000140674 W unsigned long Blob::Read<VfsFlags>(VfsFlags*) const
000000000025b308 W unsigned long Blob::Read<VkBuffer_T*>(VkBuffer_T**) const
000000000025b370 W unsigned long Blob::Read<VkImage_T*>(VkImage_T**) const
00000000000f67b4 W unsigned long Blob::Read<unsigned int>(unsigned int*) const
00000000001407ac W unsigned long Blob::Read<unsigned long>(unsigned long*) const
00000000000f40cc W Blob::Size() const
000000000010e394 W Blob::CopyTo(Blob*) const
00000000000f4070 W Blob::IsValid() const
000000000014062c W Blob::Capacity() const
0000000000178e18 T File::GetLastModified() const
0000000000178e38 T File::IsOpen() const
0000000000178df8 T File::GetSize() const
00000000001409cc W Path::IsDir() const
000000000012c0b0 W Span<Model>::Count() const
00000000002596f0 W Array<GfxGarbage, 8u>::Count() const
000000000014032c W Array<VfsRequest, 8u>::Count() const
00000000000f4dac W Array<AssetGarbage, 8u>::Count() const
0000000000138e18 W Array<ClipboardVar, 32u>::Count() const
00000000002765d8 W Array<ConCustomVar, 8u>::Count() const
0000000000260ce4 W Array<GfxImageData, 32u>::Count() const
000000000014c250 W Array<MemTempStack, 8u>::Count() const
0000000000260998 W Array<GfxBufferData, 32u>::Count() const
0000000000261028 W Array<GfxPipelineData, 32u>::Count() const
00000000000f4d94 W Array<AssetTypeManager, 8u>::Count() const
000000000016c34c W Array<SettingsKeyValue, 8u>::Count() const
000000000017f8cc W Array<EngineShortcutKeys, 8u>::Count() const
000000000025aea8 W Array<GfxDeferredCommand, 8u>::Count() const
00000000001407e0 W Array<VfsFileChangeEvent, 8u>::Count() const
0000000000132090 W Array<AppEventCallbackPair, 8u>::Count() const
00000000002619a4 W Array<GfxDescriptorSetData, 32u>::Count() const
000000000025b8d0 W Array<GfxPipelineLayoutData, 32u>::Count() const
0000000000261658 W Array<GfxDescriptorSetLayoutData, 32u>::Count() const
00000000000f61dc W Array<Asset, 32u>::Count() const
0000000000258b48 W Array<Handle<GfxPipelineT>, 8u>::Count() const
00000000002595d0 W Array<Handle<GfxPipelineT>, 8u>::operator[](unsigned int) const
000000000027515c W Array<Handle<GfxDescriptorSetT>, 8u>::Count() const
00000000000f7a1c W Array<Signal, 32u>::Count() const
000000000015f7f4 W Array<cj5_token, 8u>::Count() const
000000000014e934 W Array<DebugFiberProtectorThreadContext::Item, 8u>::Count() const
000000000014c530 W Array<_private::MemDebugPointer, 8u>::Count() const
000000000014c268 W Array<MemTempContext*, 8u>::Count() const
000000000025a824 W Array<VkCommandBuffer_T*, 8u>::Count() const
000000000010e088 W Array<AssetDescriptorUpdateCacheItem*, 8u>::Count() const
0000000000140888 W Array<void (*)(char const*), 8u>::Count() const
00000000002763cc W Array<char*, 8u>::Count() const
00000000001172b4 t Array<modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData, 8u>::Count() const
00000000001454b8 t Array<MemTlsfAllocator::CalculateFragmentation()::AllocData, 8u>::Count() const
0000000000132874 T Camera::GetViewMat() const
00000000001327e0 T Camera::GetOrthoMat(float, float) const
00000000001344ac T Camera::GetFrustumPlanes(Mat4 const&) const
0000000000132c2c T Camera::GetFrustumPoints(float, float, float, float) const
0000000000132828 T Camera::GetPerspectiveMat(float, float) const
000000000012d0fc W Handle<GfxBufferT>::IsValid() const
000000000025fec0 W Handle<GfxBufferT>::operator unsigned int() const
00000000000f43cc W Handle<AssetHandleT>::IsValid() const
00000000000f4758 W Handle<AssetHandleT>::operator unsigned int() const
000000000010e818 W Handle<AssetHandleT>::operator==(Handle<AssetHandleT> const&) const
000000000017c8f4 W Handle<GfxPipelineT>::IsValid() const
000000000026001c W Handle<GfxPipelineT>::operator unsigned int() const
0000000000261554 W Handle<GfxPipelineT>::operator==(Handle<GfxPipelineT> const&) const
00000000001697c0 W Handle<HandleDummyT>::operator unsigned int() const
00000000000f4658 W Handle<AssetBarrierT>::IsValid() const
00000000000f753c W Handle<AssetBarrierT>::operator unsigned int() const
00000000002592c0 W Handle<GfxDescriptorSetT>::IsValid() const
0000000000260178 W Handle<GfxDescriptorSetT>::operator unsigned int() const
0000000000258698 W Handle<GfxPipelineLayoutT>::IsValid() const
000000000025ae90 W Handle<GfxPipelineLayoutT>::operator unsigned int() const
0000000000138228 W Handle<ClipboardVarHandleT>::IsValid() const
0000000000138ca0 W Handle<ClipboardVarHandleT>::operator unsigned int() const
0000000000258dfc W Handle<GfxDescriptorSetLayoutT>::IsValid() const
000000000025f5dc W Handle<GfxDescriptorSetLayoutT>::operator unsigned int() const
000000000010dbc4 W Handle<GfxImageT>::IsValid() const
000000000025f718 W Handle<GfxImageT>::operator unsigned int() const
000000000010e110 W Handle<GfxImageT>::operator==(Handle<GfxImageT> const&) const
00000000001d712c T ImFont::RenderChar(ImDrawList*, float, ImVec2, unsigned int, unsigned short) const
00000000001cfa60 T ImFont::RenderText(ImDrawList*, float, ImVec2, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
00000000001d6da8 T ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
000000000021d780 W ImFont::GetCharAdvance(unsigned short) const
00000000001d67a4 T ImFont::FindGlyphNoFallback(unsigned short) const
00000000001d6a80 T ImFont::CalcWordWrapPositionA(float, char const*, char const*, float) const
00000000001bf0a4 W ImFont::IsLoaded() const
00000000001d6624 T ImFont::FindGlyph(unsigned short) const
00000000001c2468 W ImPool<ImGuiTable>::GetMapSize() const
00000000001c26d4 W ImPool<ImGuiTable>::GetAliveCount() const
00000000001f2644 W ImPool<ImGuiTable>::GetIndex(ImGuiTable const*) const
00000000001c2658 W ImPool<ImGuiTabBar>::GetMapSize() const
00000000001c2640 W ImPool<ImGuiTabBar>::GetAliveCount() const
000000000021de04 W ImPool<ImGuiTabBar>::Contains(ImGuiTabBar const*) const
000000000021de68 W ImPool<ImGuiTabBar>::GetIndex(ImGuiTabBar const*) const
00000000001c1f28 W ImRect::IsInverted() const
00000000001c4500 W ImRect::GetBL() const
00000000001c4538 W ImRect::GetBR() const
000000000021d904 W ImRect::GetTL() const
000000000021d928 W ImRect::GetTR() const
00000000001bf22c W ImRect::ToVec4() const
0000000000217644 W ImRect::GetArea() const
00000000001c0390 W ImRect::GetSize() const
00000000001bee6c W ImRect::Contains(ImVec2 const&) const
00000000001bd8a8 W ImRect::Contains(ImRect const&) const
00000000001c0af0 W ImRect::GetWidth() const
00000000001be100 W ImRect::Overlaps(ImRect const&) const
00000000001c1f78 W ImRect::GetCenter() const
00000000001c0b10 W ImRect::GetHeight() const
00000000001f3558 W ImSpan<ImGuiTableColumn>::index_from_ptr(ImGuiTableColumn const*) const
00000000001f2930 W ImSpan<ImGuiTableColumn>::size() const
00000000001f2cac W ImSpan<ImGuiTableColumn>::operator[](int) const
00000000002220f8 W ImVec2::operator[](unsigned long) const
000000000013bb74 W String<128u>::CStr() const
0000000000258684 W String<12u>::CStr() const
000000000012c6ec W String<12u>::IsEmpty() const
000000000012c710 W String<12u>::operator==(char const*) const
000000000013fc7c W String<256u>::CStr() const
00000000000f3bc8 W String<260u>::CStr() const
000000000013fc20 W String<260u>::Length() const
0000000000140644 W String<260u>::IsEqual(char const*) const
000000000013fb68 W String<260u>::EndsWith(char) const
0000000000140a04 W String<260u>::FindChar(char, unsigned int) const
0000000000140b6c W String<260u>::operator==(String<260u> const&) const
0000000000276908 W String<32u>::IsEqualNoCase(char const*) const
00000000000f4558 W String<32u>::CStr() const
000000000012be5c W String<32u>::Length() const
000000000010f1ac W String<32u>::IsEmpty() const
00000000000f4528 W String<32u>::IsEqual(char const*) const
000000000012c864 W String<32u>::operator==(char const*) const
000000000017aef0 W String<64u>::CStr() const
0000000000178814 T SysUUID::operator==(SysUUID const&) const
0000000000266bec T ImGuizmo::vec_t::Abs() const
0000000000272a90 W ImGuizmo::vec_t::Dot(ImGuizmo::vec_t const&) const
00000000002732d4 W ImGuizmo::vec_t::Dot3(ImGuizmo::vec_t const&) const
0000000000272eb4 W ImGuizmo::vec_t::Length() const
0000000000272b94 W ImGuizmo::vec_t::LengthSq() const
0000000000266a54 T ImGuizmo::vec_t::operator-(ImGuizmo::vec_t const&) const
0000000000266b64 T ImGuizmo::vec_t::operator*(ImGuizmo::vec_t const&) const
0000000000266978 T ImGuizmo::vec_t::operator*(float) const
00000000002733fc W ImGuizmo::vec_t::operator!=(ImGuizmo::vec_t const&) const
00000000002669f0 T ImGuizmo::vec_t::operator-() const
0000000000266adc T ImGuizmo::vec_t::operator+(ImGuizmo::vec_t const&) const
0000000000272af4 W ImGuizmo::matrix_t::GetDeterminant() const
0000000000272f68 W ImGuizmo::matrix_t::operator*(ImGuizmo::matrix_t const&) const
00000000001e54ec W ImVector<ImDrawVert>::_grow_capacity(int) const
0000000000265b98 W ImVector<ImDrawVert>::size() const
00000000001f3938 W ImVector<ImGuiTable>::_grow_capacity(int) const
00000000001e42c0 W ImVector<stbrp_rect>::size_in_bytes() const
00000000001e5ae8 W ImVector<stbrp_rect>::_grow_capacity(int) const
00000000001e5bfc W ImVector<ImFontGlyph>::_grow_capacity(int) const
000000000021d668 W ImVector<ImFontGlyph>::empty() const
00000000002222fc W ImVector<ImGuiTabBar>::_grow_capacity(int) const
00000000001e58d0 W ImVector<ImFontConfig>::_grow_capacity(int) const
000000000021e120 W ImVector<ImGuiTabItem>::_grow_capacity(int) const
00000000001c53bc W ImVector<ImGuiTabItem>::index_from_ptr(ImGuiTabItem const*) const
00000000001e5780 W ImVector<ImDrawChannel>::_grow_capacity(int) const
00000000001c65cc W ImVector<ImGuiColorMod>::_grow_capacity(int) const
00000000001c66e0 W ImVector<ImGuiStyleMod>::_grow_capacity(int) const
00000000001c7690 W ImVector<ImGuiGroupData>::_grow_capacity(int) const
00000000001c7470 W ImVector<ImGuiPopupData>::_grow_capacity(int) const
00000000001f40dc W ImVector<ImGuiOldColumns>::_grow_capacity(int) const
0000000000222408 W ImVector<ImGuiPtrOrIndex>::_grow_capacity(int) const
000000000021dad4 W ImVector<ImGuiPtrOrIndex>::empty() const
00000000001c7248 W ImVector<ImGuiContextHook>::_grow_capacity(int) const
00000000001c801c W ImVector<ImGuiDockRequest>::_grow_capacity(int) const
00000000001e4c04 W ImVector<stbtt_packedchar>::size_in_bytes() const
00000000001e51e4 W ImVector<stbtt_packedchar>::_grow_capacity(int) const
00000000001e48e0 W ImVector<ImFontBuildDstData>::size_in_bytes() const
00000000001e5008 W ImVector<ImFontBuildDstData>::_grow_capacity(int) const
00000000001e48c0 W ImVector<ImFontBuildSrcData>::size_in_bytes() const
00000000001e4efc W ImVector<ImFontBuildSrcData>::_grow_capacity(int) const
00000000001f4158 W ImVector<ImGuiOldColumnData>::_grow_capacity(int) const
00000000001f3af8 W ImVector<ImGuiTableTempData>::_grow_capacity(int) const
00000000001c5ebc W ImVector<ImGuiStackLevelInfo>::_grow_capacity(int) const
00000000001c6354 W ImVector<ImGuiListClipperData>::_grow_capacity(int) const
00000000001c77a4 W ImVector<ImGuiSettingsHandler>::_grow_capacity(int) const
000000000021e22c W ImVector<ImGuiShrinkWidthItem>::_grow_capacity(int) const
00000000001c735c W ImVector<ImGuiWindowStackData>::_grow_capacity(int) const
00000000001c06a8 W ImVector<ImGuiWindowStackData>::empty() const
00000000001e59dc W ImVector<ImFontAtlasCustomRect>::_grow_capacity(int) const
00000000001c5c38 W ImVector<ImGuiDockNodeSettings>::_grow_capacity(int) const
00000000001c3038 W ImVector<ImGuiListClipperRange>::_grow_capacity(int) const
00000000001f3ed0 W ImVector<ImGuiTableColumnSortSpecs>::_grow_capacity(int) const
00000000001c5920 W ImVector<ImGuiDockContextPruneNodeData>::_grow_capacity(int) const
00000000001c46d4 W ImVector<ImVec2>::_grow_capacity(int) const
00000000001e55f8 W ImVector<ImVec4>::_grow_capacity(int) const
00000000001e5470 W ImVector<ImDrawCmd>::_grow_capacity(int) const
00000000001c2a30 W ImVector<ImDrawCmd>::back() const
00000000001c2a94 W ImVector<ImDrawCmd>::begin() const
00000000001c2bf0 W ImVector<ImGuiStorage::ImGuiStoragePair>::size_in_bytes() const
00000000001c60c0 W ImVector<ImGuiStorage::ImGuiStoragePair>::_grow_capacity(int) const
00000000001bca44 W ImVector<ImGuiStorage::ImGuiStoragePair>::end() const
00000000001c61cc W ImVector<ImGuiTextFilter::ImGuiTextRange>::_grow_capacity(int) const
00000000001bce5c W ImVector<ImGuiTextFilter::ImGuiTextRange>::empty() const
00000000001bce80 W ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[](int) const
00000000001c4074 W ImVector<ImDrawList*>::_grow_capacity(int) const
00000000001bffb0 W ImVector<ImDrawList*>::empty() const
00000000001c436c W ImVector<ImGuiWindow*>::_grow_capacity(int) const
00000000001c8128 W ImVector<ImGuiDockNode*>::_grow_capacity(int) const
00000000001c4f68 W ImVector<ImGuiViewport*>::_grow_capacity(int) const
00000000001c4b70 W ImVector<ImGuiViewport*>::contains(ImGuiViewport* const&) const
00000000001c2624 W ImVector<ImGuiViewportP*>::size_in_bytes() const
00000000001c78b0 W ImVector<ImGuiViewportP*>::_grow_capacity(int) const
00000000001c7df0 W ImVector<ImFont*>::_grow_capacity(int) const
00000000001c0fb4 W ImVector<ImFont*>::empty() const
00000000001e5704 W ImVector<void*>::_grow_capacity(int) const
00000000001c6248 W ImVector<char>::_grow_capacity(int) const
00000000001c5d10 W ImVector<char>::empty() const
00000000001c4a5c W ImVector<char>::front() const
00000000001f2d30 W ImVector<char>::operator[](int) const
00000000001c7ce4 W ImVector<float>::_grow_capacity(int) const
000000000021d68c W ImVector<float>::empty() const
000000000021dd98 W ImVector<float>::operator[](int) const
00000000001c7ef4 W ImVector<unsigned char>::_grow_capacity(int) const
00000000001c757c W ImVector<int>::_grow_capacity(int) const
00000000001c5fc8 W ImVector<unsigned int>::_grow_capacity(int) const
00000000001e512c W ImVector<unsigned int>::end() const
00000000001e5114 W ImVector<unsigned int>::begin() const
00000000001e4a2c W ImVector<unsigned int>::empty() const
00000000001c2360 W ImVector<unsigned int>::contains(unsigned int const&) const
00000000001e536c W ImVector<unsigned int>::operator[](int) const
00000000001c6044 W ImVector<unsigned short>::_grow_capacity(int) const
0000000000265bb0 W ImVector<unsigned short>::size() const
00000000001e38dc W ImVector<unsigned short>::empty() const
000000000021d6d8 W ImVector<unsigned short>::contains(unsigned short const&) const
000000000021dd2c W ImVector<unsigned short>::operator[](int) const
000000000015f24c T JsonNode::GetArrayItem(unsigned int) const
000000000015ef40 T JsonNode::GetChildItem(unsigned int) const
000000000015ec18 T JsonNode::GetArrayCount() const
000000000015eb28 T JsonNode::GetChildCount() const
000000000015f3d0 T JsonNode::GetNextArrayItem(JsonNode const&) const
000000000015f0f8 T JsonNode::GetNextChildItem(JsonNode const&) const
000000000015ed54 T JsonNode::GetKey(char*, unsigned int) const
000000000015ec84 T JsonNode::IsArray() const
00000000000f4214 W JsonNode::IsValid() const
00000000000f41b8 W JsonNode::GetChild(char const*) const
000000000015ee84 T JsonNode::GetValue(char*, unsigned int) const
000000000015ecb8 T JsonNode::IsObject() const
000000000017d76c W RingBlob::ExpectWrite() const
000000000017d644 W RingBlob::Capacity() const
0000000000259560 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Get(unsigned int) const
00000000002588d8 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Find(unsigned int) const
000000000025708c W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Keys() const
00000000002570a8 W HashTable<Array<Handle<GfxPipelineT>, 8u> >::Capacity() const
00000000000f45c8 W HashTable<Handle<AssetHandleT> >::FindAndFetch(unsigned int, Handle<AssetHandleT> const&) const
00000000000f75fc W HashTable<Handle<AssetHandleT> >::Get(unsigned int) const
0000000000138934 W HashTable<Handle<ClipboardVarHandleT> >::FindAndFetch(unsigned int, Handle<ClipboardVarHandleT> const&) const
0000000000138668 W HashTable<Handle<ClipboardVarHandleT> >::Get(unsigned int) const
0000000000138638 W HashTable<Handle<ClipboardVarHandleT> >::Find(unsigned int) const
00000000002656d0 W HashTable<char const*>::FindAndFetch(unsigned int, char const* const&) const
0000000000265d3c W HashTable<char const*>::Get(unsigned int) const
0000000000265d0c W HashTable<char const*>::Find(unsigned int) const
00000000000f65cc W HashTable<unsigned int>::FindAndFetch(unsigned int, unsigned int const&) const
00000000000f66d4 W HashTable<unsigned int>::Get(unsigned int) const
00000000000f5234 W HashTable<unsigned int>::Find(unsigned int) const
00000000000f70b8 W HashTable<unsigned int>::Keys() const
00000000000f70d4 W HashTable<unsigned int>::Values() const
00000000000f70f0 W HashTable<unsigned int>::Capacity() const
000000000013b984 W SocketTCP::IsConnected() const
000000000013bb5c W SocketTCP::GetErrorCode() const
00000000001791f8 T SocketTCP::IsValid() const
0000000000255b3c W VmaPool_T::GetName() const
0000000000253c84 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::end() const
00000000002538d4 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::back() const
000000000025d8b8 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::cend() const
00000000002538f8 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::size() const
0000000000253c60 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::begin() const
000000000025388c W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::empty() const
000000000025d8a0 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::cbegin() const
00000000002538b0 W VmaVector<VmaSuballocation, VmaStlAllocator<VmaSuballocation> >::operator[](unsigned long) const
0000000000255060 W VmaVector<VmaDefragmentationMove, VmaStlAllocator<VmaDefragmentationMove> >::size() const
0000000000259e44 W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::size() const
000000000025e824 W VmaVector<VmaPoolAllocator<VmaAllocation_T>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaAllocation_T>::ItemBlock> >::empty() const
000000000025d9b4 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::size() const
000000000025dc70 W VmaVector<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock, VmaStlAllocator<VmaPoolAllocator<VmaBlockMetadata_TLSF::Block>::ItemBlock> >::empty() const
00000000002551b4 W VmaVector<VmaDefragmentationContext_T::FragmentedBlock, VmaStlAllocator<VmaDefragmentationContext_T::FragmentedBlock> >::size() const
0000000000254b84 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::size() const
0000000000254bec W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::empty() const
0000000000254cf0 W VmaVector<VmaDeviceMemoryBlock*, VmaStlAllocator<VmaDeviceMemoryBlock*> >::operator[](unsigned long) const
000000000029b61c T std::bad_typeid::what() const
000000000029b1d0 T std::logic_error::what() const
000000000029b0a0 T std::bad_exception::what() const
000000000029b29c T std::runtime_error::what() const
00000000002832b4 T std::nested_exception::rethrow_nested() const
000000000029b100 T std::bad_array_new_length::what() const
000000000027851c T std::__ndk1::error_code::message() const
0000000000278128 t std::__ndk1::__do_message::message(int) const
0000000000281d84 T std::__ndk1::bad_weak_ptr::what() const
000000000027a3d8 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::find_last_of(char const*, unsigned long, unsigned long) const
0000000000279b74 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::find_first_of(char const*, unsigned long, unsigned long) const
00000000002795d8 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::find_last_not_of(char const*, unsigned long, unsigned long) const
0000000000279670 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::find_first_not_of(char const*, unsigned long, unsigned long) const
0000000000279a04 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::at(unsigned long) const
000000000027a134 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::copy(char*, unsigned long, unsigned long) const
000000000027ac6c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::find(char const*, unsigned long, unsigned long) const
000000000027a288 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::find(char, unsigned long) const
00000000002792ec W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::rfind(char const*, unsigned long, unsigned long) const
000000000027a5e4 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::rfind(char, unsigned long) const
000000000027a960 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::compare(char const*) const
000000000027aa8c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::compare(unsigned long, unsigned long, char const*) const
000000000027a9f0 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
000000000027ad40 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::compare(unsigned long, unsigned long, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long) const
000000000027c640 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::find_last_of(wchar_t const*, unsigned long, unsigned long) const
000000000027be30 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::find_first_of(wchar_t const*, unsigned long, unsigned long) const
000000000027b840 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::find_last_not_of(wchar_t const*, unsigned long, unsigned long) const
000000000027b8e4 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::find_first_not_of(wchar_t const*, unsigned long, unsigned long) const
000000000027bcb4 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::at(unsigned long) const
000000000027c388 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
000000000027cd24 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::find(wchar_t const*, unsigned long, unsigned long) const
000000000027c4e8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::find(wchar_t, unsigned long) const
000000000027b530 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::rfind(wchar_t const*, unsigned long, unsigned long) const
000000000027c850 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::rfind(wchar_t, unsigned long) const
000000000027cab0 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::compare(wchar_t const*) const
000000000027cbdc W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::compare(unsigned long, unsigned long, wchar_t const*) const
000000000027cb40 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::compare(unsigned long, unsigned long, wchar_t const*, unsigned long) const
000000000027ce04 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::compare(unsigned long, unsigned long, std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long) const
0000000000255504 t std::__ndk1::__atomic_base<unsigned int, false>::load(std::__ndk1::memory_order) const
000000000025453c t std::__ndk1::__atomic_base<unsigned int, false>::operator unsigned int() const
0000000000255af8 t std::__ndk1::__atomic_base<unsigned long, false>::load(std::__ndk1::memory_order) const
00000000002544dc t std::__ndk1::__atomic_base<unsigned long, false>::operator unsigned long() const
0000000000278104 T std::__ndk1::error_category::equivalent(std::__ndk1::error_code const&, int) const
00000000002780b8 T std::__ndk1::error_category::equivalent(int, std::__ndk1::error_condition const&) const
00000000002780a4 T std::__ndk1::error_category::default_error_condition(int) const
0000000000278500 T std::__ndk1::error_condition::message() const
0000000000281f5c T std::__ndk1::__shared_weak_count::__get_deleter(std::type_info const&) const
0000000000283324 W std::__ndk1::__vector_base_common<true>::__throw_length_error() const
000000000028333c W std::__ndk1::__vector_base_common<true>::__throw_out_of_range() const
0000000000278ef4 W std::__ndk1::__basic_string_common<true>::__throw_length_error() const
0000000000278f60 W std::__ndk1::__basic_string_common<true>::__throw_out_of_range() const
00000000002820bc t std::__ndk1::__future_error_category::name() const
00000000002820cc t std::__ndk1::__future_error_category::message(int) const
00000000002783c0 t std::__ndk1::__system_error_category::default_error_condition(int) const
000000000027833c t std::__ndk1::__system_error_category::name() const
000000000027834c t std::__ndk1::__system_error_category::message(int) const
0000000000278258 t std::__ndk1::__generic_error_category::name() const
0000000000278268 t std::__ndk1::__generic_error_category::message(int) const
000000000029b5c0 T std::bad_cast::what() const
000000000029b0d0 T std::bad_alloc::what() const
000000000029b088 T std::exception::what() const
000000000029b5d0 T std::bad_typeid::bad_typeid()
000000000029b5d0 T std::bad_typeid::bad_typeid()
000000000029b5f0 T std::bad_typeid::~bad_typeid()
000000000029b5e8 T std::bad_typeid::~bad_typeid()
000000000029b5e8 T std::bad_typeid::~bad_typeid()
0000000000280f78 T std::logic_error::logic_error(char const*)
0000000000280ee0 T std::logic_error::logic_error(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000281004 T std::logic_error::logic_error(std::logic_error const&)
0000000000280f78 T std::logic_error::logic_error(char const*)
0000000000280ee0 T std::logic_error::logic_error(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000281004 T std::logic_error::logic_error(std::logic_error const&)
000000000029b16c T std::logic_error::~logic_error()
000000000029b110 T std::logic_error::~logic_error()
000000000029b110 T std::logic_error::~logic_error()
0000000000281038 T std::logic_error::operator=(std::logic_error const&)
000000000029b438 T std::range_error::~range_error()
000000000029b1dc T std::range_error::~range_error()
000000000029b1dc T std::range_error::~range_error()
000000000029b2a8 T std::domain_error::~domain_error()
000000000029b110 T std::domain_error::~domain_error()
000000000029b110 T std::domain_error::~domain_error()
0000000000280bd4 t std::length_error::length_error(char const*)
000000000029b370 T std::length_error::~length_error()
000000000029b110 T std::length_error::~length_error()
000000000029b110 T std::length_error::~length_error()
0000000000280c0c t std::out_of_range::out_of_range(char const*)
000000000029b3d4 T std::out_of_range::~out_of_range()
000000000029b110 T std::out_of_range::~out_of_range()
000000000029b110 T std::out_of_range::~out_of_range()
000000000029b098 T std::bad_exception::~bad_exception()
000000000029b078 T std::bad_exception::~bad_exception()
000000000029b078 T std::bad_exception::~bad_exception()
0000000000283188 T std::exception_ptr::exception_ptr(std::exception_ptr const&)
0000000000283188 T std::exception_ptr::exception_ptr(std::exception_ptr const&)
000000000028317c T std::exception_ptr::~exception_ptr()
000000000028317c T std::exception_ptr::~exception_ptr()
000000000028319c T std::exception_ptr::operator=(std::exception_ptr const&)
0000000000281138 T std::runtime_error::runtime_error(char const*)
00000000002810a0 T std::runtime_error::runtime_error(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
00000000002811c4 T std::runtime_error::runtime_error(std::runtime_error const&)
0000000000281138 T std::runtime_error::runtime_error(char const*)
00000000002810a0 T std::runtime_error::runtime_error(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
00000000002811c4 T std::runtime_error::runtime_error(std::runtime_error const&)
000000000029b238 T std::runtime_error::~runtime_error()
000000000029b1dc T std::runtime_error::~runtime_error()
000000000029b1dc T std::runtime_error::~runtime_error()
00000000002811f8 T std::runtime_error::operator=(std::runtime_error const&)
000000000029b49c T std::overflow_error::~overflow_error()
000000000029b1dc T std::overflow_error::~overflow_error()
000000000029b1dc T std::overflow_error::~overflow_error()
000000000029b500 T std::underflow_error::~underflow_error()
000000000029b1dc T std::underflow_error::~underflow_error()
000000000029b1dc T std::underflow_error::~underflow_error()
000000000029b30c T std::invalid_argument::~invalid_argument()
000000000029b110 T std::invalid_argument::~invalid_argument()
000000000029b110 T std::invalid_argument::~invalid_argument()
00000000002831ec T std::nested_exception::nested_exception()
00000000002831ec T std::nested_exception::nested_exception()
0000000000283274 T std::nested_exception::~nested_exception()
0000000000283254 T std::nested_exception::~nested_exception()
0000000000283254 T std::nested_exception::~nested_exception()
000000000029b0e0 T std::bad_array_new_length::bad_array_new_length()
000000000029b0e0 T std::bad_array_new_length::bad_array_new_length()
000000000029b0f8 T std::bad_array_new_length::~bad_array_new_length()
000000000029b078 T std::bad_array_new_length::~bad_array_new_length()
000000000029b078 T std::bad_array_new_length::~bad_array_new_length()
00000000000ad397 R std::__ndk1::adopt_lock
00000000000ad395 R std::__ndk1::defer_lock
00000000002807e4 T std::__ndk1::to_wstring(double)
00000000002809e0 T std::__ndk1::to_wstring(long double)
00000000002805e4 T std::__ndk1::to_wstring(float)
000000000027fa6c T std::__ndk1::to_wstring(int)
000000000027fef8 T std::__ndk1::to_wstring(unsigned int)
000000000027fbf0 T std::__ndk1::to_wstring(long)
0000000000280018 T std::__ndk1::to_wstring(unsigned long)
000000000027fd74 T std::__ndk1::to_wstring(long long)
0000000000280138 T std::__ndk1::to_wstring(unsigned long long)
0000000000277f54 T std::__ndk1::__call_once(unsigned long volatile&, void*, void (*)(void*))
0000000000281838 T std::__ndk1::this_thread::sleep_for(std::__ndk1::chrono::duration<long long, std::__ndk1::ratio<1l, 1000000000l> > const&)
0000000000277b14 T std::__ndk1::timed_mutex::lock()
0000000000277c30 T std::__ndk1::timed_mutex::unlock()
0000000000277bd0 T std::__ndk1::timed_mutex::try_lock()
0000000000277a8c T std::__ndk1::timed_mutex::timed_mutex()
0000000000277a8c T std::__ndk1::timed_mutex::timed_mutex()
0000000000277aa8 T std::__ndk1::timed_mutex::~timed_mutex()
0000000000277aa8 T std::__ndk1::timed_mutex::~timed_mutex()
00000000000ad396 R std::__ndk1::try_to_lock
0000000000278e38 t std::__ndk1::__do_message::~__do_message()
0000000000281fe4 T std::__ndk1::__get_sp_mut(void const*)
0000000000281d58 T std::__ndk1::bad_weak_ptr::~bad_weak_ptr()
0000000000281d50 T std::__ndk1::bad_weak_ptr::~bad_weak_ptr()
0000000000281d50 T std::__ndk1::bad_weak_ptr::~bad_weak_ptr()
00000000002791b0 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, char const*)
000000000027ab50 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::at(unsigned long)
00000000000ad438 V std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::npos
000000000027a77c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::erase(unsigned long, unsigned long)
0000000000279974 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::__init(char const*, unsigned long)
00000000002793b0 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::__init(char const*, unsigned long, unsigned long)
000000000027a2fc W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::__init(unsigned long, char)
000000000027aef8 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::append(char const*)
0000000000279f64 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::append(char const*, unsigned long)
000000000027a858 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::append(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long)
000000000027a510 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::append(unsigned long, char)
000000000027ab98 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::assign(char const*)
0000000000279d40 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::assign(char const*, unsigned long)
000000000027a030 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::assign(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long)
000000000027a634 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::assign(unsigned long, char)
000000000027b030 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::insert(std::__ndk1::__wrap_iter<char const*>, char)
000000000027a38c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::insert(unsigned long, char const*)
0000000000279a4c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::insert(unsigned long, char const*, unsigned long)
000000000027b180 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::insert(unsigned long, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long)
000000000027970c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::insert(unsigned long, unsigned long, char)
0000000000280ddc t std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::resize(unsigned long)
000000000027b11c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::resize(unsigned long, char)
00000000002794e4 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::replace(unsigned long, unsigned long, char const*)
0000000000278fcc W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long)
000000000027afd8 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::replace(unsigned long, unsigned long, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long)
0000000000279bf0 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::replace(unsigned long, unsigned long, unsigned long, char)
0000000000279e08 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::reserve(unsigned long)
0000000000279824 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
000000000027a45c W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::push_back(char)
0000000000279444 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::basic_string(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000279538 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::basic_string(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, std::__ndk1::allocator<char> const&)
000000000027a1b4 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::basic_string(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long, std::__ndk1::allocator<char> const&)
0000000000279444 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::basic_string(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000279538 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::basic_string(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, std::__ndk1::allocator<char> const&)
000000000027a1b4 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::basic_string(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long, unsigned long, std::__ndk1::allocator<char> const&)
0000000000279658 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::~basic_string()
0000000000279658 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::~basic_string()
000000000027adf0 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::operator=(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000279940 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >::operator=(char)
000000000027b3d0 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, wchar_t const*)
000000000027cca0 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::at(unsigned long)
00000000000ad440 V std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::npos
000000000027c978 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::erase(unsigned long, unsigned long)
000000000027bc1c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::__init(wchar_t const*, unsigned long)
000000000027b600 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::__init(wchar_t const*, unsigned long, unsigned long)
000000000027c55c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::__init(unsigned long, wchar_t)
000000000027cfcc W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::append(wchar_t const*)
000000000027c260 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::append(wchar_t const*, unsigned long)
000000000027ca58 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::append(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long)
000000000027c778 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::append(unsigned long, wchar_t)
000000000027cce8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::assign(wchar_t const*)
000000000027c00c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::assign(wchar_t const*, unsigned long)
000000000027c330 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::assign(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long)
000000000027c8a8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::assign(unsigned long, wchar_t)
000000000027d060 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::insert(std::__ndk1::__wrap_iter<wchar_t const*>, wchar_t)
000000000027c5f4 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::insert(unsigned long, wchar_t const*)
000000000027bcfc W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::insert(unsigned long, wchar_t const*, unsigned long)
000000000027d1bc W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::insert(unsigned long, std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long)
000000000027b990 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::insert(unsigned long, unsigned long, wchar_t)
000000000027d158 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::resize(unsigned long, wchar_t)
000000000027b744 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::replace(unsigned long, unsigned long, wchar_t const*)
000000000027b1d8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::replace(unsigned long, unsigned long, wchar_t const*, unsigned long)
000000000027d008 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::replace(unsigned long, unsigned long, std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long)
000000000027beb4 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::replace(unsigned long, unsigned long, unsigned long, wchar_t)
000000000027c0d8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::reserve(unsigned long)
000000000027bab0 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
000000000027c6c8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::push_back(wchar_t)
000000000027b69c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::basic_string(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&)
000000000027b798 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::basic_string(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, std::__ndk1::allocator<wchar_t> const&)
000000000027c40c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::basic_string(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long, std::__ndk1::allocator<wchar_t> const&)
000000000027b69c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::basic_string(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&)
000000000027b798 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::basic_string(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, std::__ndk1::allocator<wchar_t> const&)
000000000027c40c W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::basic_string(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long, unsigned long, std::__ndk1::allocator<wchar_t> const&)
000000000027b8cc W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::~basic_string()
000000000027b8cc W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::~basic_string()
000000000027ceb8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::operator=(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&)
000000000027bbe8 W std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> >::operator=(wchar_t)
00000000002822e8 T std::__ndk1::future_error::future_error(std::__ndk1::error_code)
00000000002822e8 T std::__ndk1::future_error::future_error(std::__ndk1::error_code)
000000000028239c T std::__ndk1::future_error::~future_error()
0000000000282394 T std::__ndk1::future_error::~future_error()
0000000000282394 T std::__ndk1::future_error::~future_error()
00000000002599f8 t std::__ndk1::shared_mutex::lock_shared()
0000000000259a40 t std::__ndk1::shared_mutex::unlock_shared()
0000000000259a88 t std::__ndk1::shared_mutex::lock()
0000000000259ad0 t std::__ndk1::shared_mutex::unlock()
0000000000259b30 t std::__ndk1::shared_mutex::shared_mutex()
0000000000259970 t std::__ndk1::shared_mutex::~shared_mutex()
0000000000278538 T std::__ndk1::system_error::__init(std::__ndk1::error_code const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >)
00000000002788bc T std::__ndk1::system_error::system_error(std::__ndk1::error_code)
0000000000278748 T std::__ndk1::system_error::system_error(std::__ndk1::error_code, char const*)
000000000027864c T std::__ndk1::system_error::system_error(std::__ndk1::error_code, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000278c48 T std::__ndk1::system_error::system_error(int, std::__ndk1::error_category const&)
0000000000278ac0 T std::__ndk1::system_error::system_error(int, std::__ndk1::error_category const&, char const*)
00000000002789b0 T std::__ndk1::system_error::system_error(int, std::__ndk1::error_category const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
00000000002788bc T std::__ndk1::system_error::system_error(std::__ndk1::error_code)
0000000000278748 T std::__ndk1::system_error::system_error(std::__ndk1::error_code, char const*)
000000000027864c T std::__ndk1::system_error::system_error(std::__ndk1::error_code, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000278c48 T std::__ndk1::system_error::system_error(int, std::__ndk1::error_category const&)
0000000000278ac0 T std::__ndk1::system_error::system_error(int, std::__ndk1::error_category const&, char const*)
00000000002789b0 T std::__ndk1::system_error::system_error(int, std::__ndk1::error_category const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000278d58 T std::__ndk1::system_error::~system_error()
0000000000278d50 T std::__ndk1::system_error::~system_error()
0000000000278d50 T std::__ndk1::system_error::~system_error()
0000000000255820 t std::__ndk1::__atomic_base<unsigned int, false>::store(unsigned int, std::__ndk1::memory_order)
0000000000259d28 t std::__ndk1::__atomic_base<unsigned int, false>::__atomic_base(unsigned int)
000000000025df34 t std::__ndk1::__atomic_base<unsigned int, true>::fetch_add(unsigned int, std::__ndk1::memory_order)
000000000025e22c t std::__ndk1::__atomic_base<unsigned int, true>::fetch_sub(unsigned int, std::__ndk1::memory_order)
0000000000259cfc t std::__ndk1::__atomic_base<unsigned int, true>::__atomic_base(unsigned int)
0000000000254564 t std::__ndk1::__atomic_base<unsigned int, true>::operator--()
00000000002544ac t std::__ndk1::__atomic_base<unsigned int, true>::operator++()
00000000002558a8 t std::__ndk1::__atomic_base<unsigned long, false>::compare_exchange_strong(unsigned long&, unsigned long, std::__ndk1::memory_order)
000000000025dd14 t std::__ndk1::__atomic_base<unsigned long, false>::store(unsigned long, std::__ndk1::memory_order)
000000000025ddb8 t std::__ndk1::__atomic_base<unsigned long, true>::fetch_add(unsigned long, std::__ndk1::memory_order)
000000000025e0b0 t std::__ndk1::__atomic_base<unsigned long, true>::fetch_sub(unsigned long, std::__ndk1::memory_order)
0000000000254504 t std::__ndk1::__atomic_base<unsigned long, true>::operator-=(unsigned long)
0000000000254474 t std::__ndk1::__atomic_base<unsigned long, true>::operator+=(unsigned long)
00000000000ad5d8 R std::__ndk1::allocator_arg
0000000000283010 T std::__ndk1::shared_future<void>::~shared_future()
0000000000283010 T std::__ndk1::shared_future<void>::~shared_future()
0000000000283024 T std::__ndk1::shared_future<void>::operator=(std::__ndk1::shared_future<void> const&)
0000000000281dac T std::__ndk1::__shared_count::__add_shared()
0000000000281dc8 T std::__ndk1::__shared_count::__release_shared()
0000000000281d9c T std::__ndk1::__shared_count::~__shared_count()
0000000000281d94 T std::__ndk1::__shared_count::~__shared_count()
0000000000281d94 T std::__ndk1::__shared_count::~__shared_count()
0000000000278084 T std::__ndk1::error_category::error_category()
000000000027809c T std::__ndk1::error_category::~error_category()
0000000000278e30 T std::__ndk1::error_category::~error_category()
0000000000278e30 T std::__ndk1::error_category::~error_category()
0000000000281cec T std::__ndk1::__thread_struct::notify_all_at_thread_exit(std::__ndk1::condition_variable*, std::__ndk1::mutex*)
0000000000281cf8 T std::__ndk1::__thread_struct::__make_ready_at_thread_exit(std::__ndk1::__assoc_sub_state*)
0000000000281c6c T std::__ndk1::__thread_struct::__thread_struct()
0000000000281c6c T std::__ndk1::__thread_struct::__thread_struct()
0000000000281ca8 T std::__ndk1::__thread_struct::~__thread_struct()
0000000000281ca8 T std::__ndk1::__thread_struct::~__thread_struct()
000000000028225c T std::__ndk1::future_category()
0000000000277a18 T std::__ndk1::recursive_mutex::lock()
0000000000277a44 T std::__ndk1::recursive_mutex::unlock()
0000000000277a64 T std::__ndk1::recursive_mutex::try_lock()
000000000027792c T std::__ndk1::recursive_mutex::recursive_mutex()
000000000027792c T std::__ndk1::recursive_mutex::recursive_mutex()
00000000002779f8 T std::__ndk1::recursive_mutex::~recursive_mutex()
00000000002779f8 T std::__ndk1::recursive_mutex::~recursive_mutex()
00000000002784a0 T std::__ndk1::system_category()
00000000002782dc T std::__ndk1::generic_category()
0000000000282914 T std::__ndk1::__assoc_sub_state::__sub_wait(std::__ndk1::unique_lock<std::__ndk1::mutex>&)
00000000002827b0 T std::__ndk1::__assoc_sub_state::__make_ready()
0000000000282618 T std::__ndk1::__assoc_sub_state::set_exception(std::exception_ptr)
00000000002823c8 T std::__ndk1::__assoc_sub_state::__on_zero_shared()
0000000000282558 T std::__ndk1::__assoc_sub_state::set_value_at_thread_exit()
00000000002826e4 T std::__ndk1::__assoc_sub_state::set_exception_at_thread_exit(std::exception_ptr)
00000000002827f8 T std::__ndk1::__assoc_sub_state::copy()
00000000002829b4 T std::__ndk1::__assoc_sub_state::wait()
0000000000282a98 T std::__ndk1::__assoc_sub_state::__execute()
00000000002823d8 T std::__ndk1::__assoc_sub_state::set_value()
00000000002830c8 W std::__ndk1::__assoc_sub_state::~__assoc_sub_state()
0000000000283074 W std::__ndk1::__assoc_sub_state::~__assoc_sub_state()
0000000000259d54 t std::__ndk1::__cxx_atomic_impl<unsigned int, std::__ndk1::__cxx_atomic_base_impl<unsigned int> >::__cxx_atomic_impl(unsigned int)
000000000025e3a8 t unsigned int std::__ndk1::__cxx_atomic_load<unsigned int>(std::__ndk1::__cxx_atomic_base_impl<unsigned int> const*, std::__ndk1::memory_order)
000000000025f4e0 t unsigned long std::__ndk1::__cxx_atomic_load<unsigned long>(std::__ndk1::__cxx_atomic_base_impl<unsigned long> const*, std::__ndk1::memory_order)
0000000000282040 T std::__ndk1::declare_reachable(void*)
000000000025ecc4 t void std::__ndk1::__cxx_atomic_store<unsigned int>(std::__ndk1::__cxx_atomic_base_impl<unsigned int>*, unsigned int, std::__ndk1::memory_order)
000000000025dd48 t void std::__ndk1::__cxx_atomic_store<unsigned long>(std::__ndk1::__cxx_atomic_base_impl<unsigned long>*, unsigned long, std::__ndk1::memory_order)
00000000002776ec T std::__ndk1::condition_variable::notify_all()
00000000002776cc T std::__ndk1::condition_variable::notify_one()
000000000027775c T std::__ndk1::condition_variable::__do_timed_wait(std::__ndk1::unique_lock<std::__ndk1::mutex>&, std::__ndk1::chrono::time_point<std::__ndk1::chrono::system_clock, std::__ndk1::chrono::duration<long long, std::__ndk1::ratio<1l, 1000000000l> > >)
000000000027770c T std::__ndk1::condition_variable::wait(std::__ndk1::unique_lock<std::__ndk1::mutex>&)
0000000000276e28 T std::__ndk1::condition_variable::~condition_variable()
0000000000276e28 T std::__ndk1::condition_variable::~condition_variable()
0000000000282058 T std::__ndk1::get_pointer_safety()
0000000000277548 T std::__ndk1::shared_timed_mutex::lock_shared()
0000000000277664 T std::__ndk1::shared_timed_mutex::unlock_shared()
0000000000277600 T std::__ndk1::shared_timed_mutex::try_lock_shared()
0000000000277408 T std::__ndk1::shared_timed_mutex::lock()
0000000000277510 T std::__ndk1::shared_timed_mutex::unlock()
00000000002774c4 T std::__ndk1::shared_timed_mutex::try_lock()
00000000002773e8 T std::__ndk1::shared_timed_mutex::shared_timed_mutex()
00000000002773e8 T std::__ndk1::shared_timed_mutex::shared_timed_mutex()
0000000000277268 T std::__ndk1::__shared_mutex_base::lock_shared()
0000000000277380 T std::__ndk1::__shared_mutex_base::unlock_shared()
000000000027731c T std::__ndk1::__shared_mutex_base::try_lock_shared()
0000000000277128 T std::__ndk1::__shared_mutex_base::lock()
0000000000277230 T std::__ndk1::__shared_mutex_base::unlock()
00000000002771e4 T std::__ndk1::__shared_mutex_base::try_lock()
0000000000277108 T std::__ndk1::__shared_mutex_base::__shared_mutex_base()
0000000000277108 T std::__ndk1::__shared_mutex_base::__shared_mutex_base()
0000000000259994 t std::__ndk1::__shared_mutex_base::~__shared_mutex_base()
0000000000281e30 T std::__ndk1::__shared_weak_count::__add_weak()
0000000000281e14 T std::__ndk1::__shared_weak_count::__add_shared()
0000000000281ed4 T std::__ndk1::__shared_weak_count::__release_weak()
0000000000281e4c T std::__ndk1::__shared_weak_count::__release_shared()
0000000000281f08 T std::__ndk1::__shared_weak_count::lock()
0000000000281da4 T std::__ndk1::__shared_weak_count::~__shared_weak_count()
0000000000281d94 T std::__ndk1::__shared_weak_count::~__shared_weak_count()
0000000000281d94 T std::__ndk1::__shared_weak_count::~__shared_weak_count()
00000000002818dc T std::__ndk1::__thread_local_data()
0000000000281a70 t std::__ndk1::__thread_struct_imp::notify_all_at_thread_exit(std::__ndk1::condition_variable*, std::__ndk1::mutex*)
0000000000281b80 t std::__ndk1::__thread_struct_imp::__make_ready_at_thread_exit(std::__ndk1::__assoc_sub_state*)
0000000000281970 t std::__ndk1::__thread_struct_imp::~__thread_struct_imp()
0000000000281970 t std::__ndk1::__thread_struct_imp::~__thread_struct_imp()
0000000000282048 T std::__ndk1::declare_no_pointers(char*, unsigned long)
0000000000282490 t std::__ndk1::__throw_future_error(std::__ndk1::future_errc)
0000000000278f0c t std::__ndk1::__throw_length_error(char const*)
0000000000278f78 t std::__ndk1::__throw_out_of_range(char const*)
0000000000278d84 T std::__ndk1::__throw_system_error(int, char const*)
0000000000281d04 t std::__ndk1::__thread_specific_ptr<std::__ndk1::__thread_struct>::__at_thread_exit(void*)
0000000000282064 T std::__ndk1::__undeclare_reachable(void*)
0000000000277d0c T std::__ndk1::recursive_timed_mutex::lock()
0000000000277ed8 T std::__ndk1::recursive_timed_mutex::unlock()
0000000000277e38 T std::__ndk1::recursive_timed_mutex::try_lock()
0000000000277c84 T std::__ndk1::recursive_timed_mutex::recursive_timed_mutex()
0000000000277c84 T std::__ndk1::recursive_timed_mutex::recursive_timed_mutex()
0000000000277ca0 T std::__ndk1::recursive_timed_mutex::~recursive_timed_mutex()
0000000000277ca0 T std::__ndk1::recursive_timed_mutex::~recursive_timed_mutex()
0000000000282050 T std::__ndk1::undeclare_no_pointers(char*, unsigned long)
0000000000259d80 W std::__ndk1::__cxx_atomic_base_impl<unsigned int>::__cxx_atomic_base_impl(unsigned int)
000000000025df68 t unsigned int std::__ndk1::__cxx_atomic_fetch_add<unsigned int>(std::__ndk1::__cxx_atomic_base_impl<unsigned int>*, unsigned int, std::__ndk1::memory_order)
000000000025ddec t unsigned long std::__ndk1::__cxx_atomic_fetch_add<unsigned long>(std::__ndk1::__cxx_atomic_base_impl<unsigned long>*, unsigned long, std::__ndk1::memory_order)
000000000025e260 t unsigned int std::__ndk1::__cxx_atomic_fetch_sub<unsigned int>(std::__ndk1::__cxx_atomic_base_impl<unsigned int>*, unsigned int, std::__ndk1::memory_order)
000000000025e0e4 t unsigned long std::__ndk1::__cxx_atomic_fetch_sub<unsigned long>(std::__ndk1::__cxx_atomic_base_impl<unsigned long>*, unsigned long, std::__ndk1::memory_order)
0000000000283124 t std::__ndk1::__future_error_category::~__future_error_category()
0000000000278e48 t std::__ndk1::__system_error_category::~__system_error_category()
0000000000278e40 t std::__ndk1::__generic_error_category::~__generic_error_category()
0000000000277828 T std::__ndk1::notify_all_at_thread_exit(std::__ndk1::condition_variable&, std::__ndk1::unique_lock<std::__ndk1::mutex>)
000000000025ed34 t bool std::__ndk1::__cxx_atomic_compare_exchange_strong<unsigned long>(std::__ndk1::__cxx_atomic_base_impl<unsigned long>*, unsigned long*, unsigned long, std::__ndk1::memory_order, std::__ndk1::memory_order)
000000000027ebc4 T std::__ndk1::stod(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*)
000000000027edb0 T std::__ndk1::stod(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*)
000000000027e7e4 T std::__ndk1::stof(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*)
000000000027e9d0 T std::__ndk1::stof(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*)
000000000027d3a4 T std::__ndk1::stoi(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*, int)
000000000027d5f0 T std::__ndk1::stoi(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*, int)
000000000027d844 T std::__ndk1::stol(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*, int)
000000000027da30 T std::__ndk1::stol(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*, int)
000000000028206c T std::__ndk1::align(unsigned long, unsigned long, void*&, unsigned long&)
00000000002778b8 T std::__ndk1::mutex::lock()
000000000027790c T std::__ndk1::mutex::unlock()
00000000002778e4 T std::__ndk1::mutex::try_lock()
0000000000276e58 T std::__ndk1::mutex::~mutex()
0000000000276e58 T std::__ndk1::mutex::~mutex()
000000000027efa4 T std::__ndk1::stold(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*)
000000000027f18c T std::__ndk1::stold(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*)
000000000027e00c T std::__ndk1::stoll(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*, int)
000000000027e1fc T std::__ndk1::stoll(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*, int)
000000000027dc24 T std::__ndk1::stoul(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*, int)
000000000027de14 T std::__ndk1::stoul(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*, int)
0000000000281338 t char* std::__ndk1::__itoa::append8_no_zeros<unsigned int>(char*, unsigned int)
0000000000281260 T std::__ndk1::__itoa::__u32toa(unsigned int, char*)
00000000002814f8 T std::__ndk1::__itoa::__u64toa(unsigned long, char*)
00000000000ad448 r std::__ndk1::__itoa::__pow10_32
00000000000ad470 r std::__ndk1::__itoa::__pow10_64
00000000000ad510 r std::__ndk1::__itoa::cDigitsLut
0000000000255390 t std::__ndk1::atomic<unsigned int>::atomic(unsigned int)
000000000025440c t std::__ndk1::atomic<unsigned int>::operator=(unsigned int)
0000000000254440 t std::__ndk1::atomic<unsigned long>::operator=(unsigned long)
0000000000282b30 T std::__ndk1::future<void>::get()
0000000000282aac T std::__ndk1::future<void>::future(std::__ndk1::__assoc_sub_state*)
0000000000282aac T std::__ndk1::future<void>::future(std::__ndk1::__assoc_sub_state*)
0000000000282b1c T std::__ndk1::future<void>::~future()
0000000000282b1c T std::__ndk1::future<void>::~future()
000000000027e3f4 T std::__ndk1::stoull(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, unsigned long*, int)
000000000027e5e8 T std::__ndk1::stoull(std::__ndk1::basic_string<wchar_t, std::__ndk1::char_traits<wchar_t>, std::__ndk1::allocator<wchar_t> > const&, unsigned long*, int)
000000000028180c T std::__ndk1::thread::hardware_concurrency()
0000000000281778 T std::__ndk1::thread::join()
00000000002817c4 T std::__ndk1::thread::detach()
0000000000281754 T std::__ndk1::thread::~thread()
0000000000281754 T std::__ndk1::thread::~thread()
0000000000281a38 t std::__ndk1::vector<std::__ndk1::pair<std::__ndk1::condition_variable*, std::__ndk1::mutex*>, std::__ndk1::__hidden_allocator<std::__ndk1::pair<std::__ndk1::condition_variable*, std::__ndk1::mutex*> > >::~vector()
0000000000281a54 t std::__ndk1::vector<std::__ndk1::__assoc_sub_state*, std::__ndk1::__hidden_allocator<std::__ndk1::__assoc_sub_state*> >::~vector()
000000000025e704 t bool const& std::__ndk1::forward<bool const&>(std::__ndk1::remove_reference<bool const&>::type&)
000000000025ec50 t bool& std::__ndk1::forward<bool&>(std::__ndk1::remove_reference<bool&>::type&)
0000000000282e34 T std::__ndk1::promise<void>::get_future()
0000000000282ed8 T std::__ndk1::promise<void>::set_exception(std::exception_ptr)
0000000000282f60 T std::__ndk1::promise<void>::set_value_at_thread_exit()
0000000000282f88 T std::__ndk1::promise<void>::set_exception_at_thread_exit(std::exception_ptr)
0000000000282eb0 T std::__ndk1::promise<void>::set_value()
0000000000282b90 T std::__ndk1::promise<void>::promise()
0000000000282b90 T std::__ndk1::promise<void>::promise()
0000000000282be4 T std::__ndk1::promise<void>::~promise()
0000000000282be4 T std::__ndk1::promise<void>::~promise()
0000000000281f68 T std::__ndk1::__sp_mut::lock()
0000000000281fc0 T std::__ndk1::__sp_mut::unlock()
000000000028038c T std::__ndk1::to_string(double)
00000000002804bc T std::__ndk1::to_string(long double)
0000000000280258 T std::__ndk1::to_string(float)
000000000027f37c T std::__ndk1::to_string(int)
000000000027f730 T std::__ndk1::to_string(unsigned int)
000000000027f4b8 T std::__ndk1::to_string(long)
000000000027f844 T std::__ndk1::to_string(unsigned long)
000000000027f5f4 T std::__ndk1::to_string(long long)
000000000027f958 T std::__ndk1::to_string(unsigned long long)
00000000002c98f8 b std::__ndk1::cv
00000000002c98d0 b std::__ndk1::mut
00000000002c9958 b std::__ndk1::mut_back
000000000027d214 W std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > std::__ndk1::operator+<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >(char const*, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&)
0000000000280c44 t std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > std::__ndk1::operator+<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, char const*)
000000000029b574 T std::bad_cast::bad_cast()
000000000029b574 T std::bad_cast::bad_cast()
000000000029b594 T std::bad_cast::~bad_cast()
000000000029b58c T std::bad_cast::~bad_cast()
000000000029b58c T std::bad_cast::~bad_cast()
000000000029b0b0 T std::bad_alloc::bad_alloc()
000000000029b0b0 T std::bad_alloc::bad_alloc()
000000000029b0c8 T std::bad_alloc::~bad_alloc()
000000000029b078 T std::bad_alloc::~bad_alloc()
000000000029b078 T std::bad_alloc::~bad_alloc()
000000000029b080 T std::exception::~exception()
000000000029b078 T std::exception::~exception()
000000000029b078 T std::exception::~exception()
000000000029b56c T std::type_info::~type_info()
000000000029b564 T std::type_info::~type_info()
000000000029b564 T std::type_info::~type_info()
0000000000298134 T std::unexpected()
0000000000298164 t std::__terminate(void (*)())
0000000000298118 t std::__unexpected(void (*)())
0000000000298150 T std::get_terminate()
000000000029834c T std::set_terminate(void (*)())
00000000002980c0 T std::get_unexpected()
0000000000298320 T std::set_unexpected(void (*)())
00000000002981c8 T std::get_new_handler()
00000000002981a8 T std::set_new_handler(void (*)())
0000000000276e78 T std::__throw_bad_alloc()
0000000000283228 T std::current_exception()
000000000028330c T std::rethrow_exception(std::exception_ptr)
0000000000282dac t std::exception_ptr std::make_exception_ptr<std::__ndk1::future_error>(std::__ndk1::future_error)
0000000000283150 T std::uncaught_exception()
0000000000283174 T std::uncaught_exceptions()
00000000000ad394 R std::nothrow
00000000002980d4 T std::terminate()
00000000002532d4 t thread-local initialization routine for gCmdBufferThreadData
00000000002b3d20 D typeinfo for decimal16
00000000002b3f50 D typeinfo for char32_t
00000000002b3820 D typeinfo for std::nullptr_t
00000000002b3f00 D typeinfo for char16_t
00000000002b3eb0 D typeinfo for char8_t
00000000002b4060 D typeinfo for __cxxabiv1::__enum_type_info
00000000002b36b8 D typeinfo for __cxxabiv1::__shim_type_info
00000000002b3fd8 D typeinfo for __cxxabiv1::__array_type_info
00000000002b36d0 D typeinfo for __cxxabiv1::__class_type_info
00000000002b36e8 D typeinfo for __cxxabiv1::__pbase_type_info
00000000002b3700 D typeinfo for __cxxabiv1::__pointer_type_info
00000000002b3718 D typeinfo for __cxxabiv1::__function_type_info
00000000002b4118 D typeinfo for __cxxabiv1::__si_class_type_info
00000000002b4180 D typeinfo for __cxxabiv1::__vmi_class_type_info
00000000002b37b8 D typeinfo for __cxxabiv1::__fundamental_type_info
00000000002b3730 D typeinfo for __cxxabiv1::__pointer_to_member_type_info
00000000002b2af0 d typeinfo for (anonymous namespace)::itanium_demangle::AbiTagAttr
00000000002b1f90 d typeinfo for (anonymous namespace)::itanium_demangle::BinaryExpr
00000000002b2540 d typeinfo for (anonymous namespace)::itanium_demangle::BracedExpr
00000000002b21c0 d typeinfo for (anonymous namespace)::itanium_demangle::DeleteExpr
00000000002b1d60 d typeinfo for (anonymous namespace)::itanium_demangle::LambdaExpr
00000000002b2460 d typeinfo for (anonymous namespace)::itanium_demangle::MemberExpr
00000000002b16d0 d typeinfo for (anonymous namespace)::itanium_demangle::NestedName
00000000002b2000 d typeinfo for (anonymous namespace)::itanium_demangle::PrefixExpr
00000000002b29a0 d typeinfo for (anonymous namespace)::itanium_demangle::UUIDOfExpr
00000000002b3340 d typeinfo for (anonymous namespace)::itanium_demangle::VectorType
00000000002b3500 d typeinfo for (anonymous namespace)::itanium_demangle::PointerType
00000000002b2690 d typeinfo for (anonymous namespace)::itanium_demangle::PostfixExpr
00000000002b1580 d typeinfo for (anonymous namespace)::itanium_demangle::SpecialName
00000000002b2a80 d typeinfo for (anonymous namespace)::itanium_demangle::CtorDtorName
00000000002b2ee0 d typeinfo for (anonymous namespace)::itanium_demangle::EnableIfAttr
00000000002b3110 d typeinfo for (anonymous namespace)::itanium_demangle::FunctionType
00000000002b2620 d typeinfo for (anonymous namespace)::itanium_demangle::InitListExpr
00000000002b3030 d typeinfo for (anonymous namespace)::itanium_demangle::NoexceptSpec
00000000002b2d20 d typeinfo for (anonymous namespace)::itanium_demangle::TemplateArgs
00000000002b2770 d typeinfo for (anonymous namespace)::itanium_demangle::EnclosingExpr
00000000002b1e40 d typeinfo for (anonymous namespace)::itanium_demangle::FunctionParam
00000000002b28c0 d typeinfo for (anonymous namespace)::itanium_demangle::NodeArrayNode
00000000002b3180 d typeinfo for (anonymous namespace)::itanium_demangle::ObjCProtoName
00000000002b2cb0 d typeinfo for (anonymous namespace)::itanium_demangle::ParameterPack
00000000002b2230 d typeinfo for (anonymous namespace)::itanium_demangle::QualifiedName
00000000002b3570 d typeinfo for (anonymous namespace)::itanium_demangle::ReferenceType
00000000002b19e0 d typeinfo for (anonymous namespace)::itanium_demangle::StringLiteral
00000000002b2150 d typeinfo for (anonymous namespace)::itanium_demangle::ConversionExpr
00000000002b17b0 d typeinfo for (anonymous namespace)::itanium_demangle::IntegerLiteral
00000000002b25b0 d typeinfo for (anonymous namespace)::itanium_demangle::BracedRangeExpr
00000000002b1cf0 d typeinfo for (anonymous namespace)::itanium_demangle::ClosureTypeName
00000000002b27e0 d typeinfo for (anonymous namespace)::itanium_demangle::ConditionalExpr
00000000002b1dd0 d typeinfo for (anonymous namespace)::itanium_demangle::IntegerCastExpr
00000000002b2380 d typeinfo for (anonymous namespace)::itanium_demangle::LiteralOperator
00000000002b32d0 d typeinfo for (anonymous namespace)::itanium_demangle::PixelVectorType
00000000002b1a50 d typeinfo for (anonymous namespace)::itanium_demangle::UnnamedTypeName
00000000002b1900 d typeinfo for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>
00000000002b1970 d typeinfo for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>
00000000002b1890 d typeinfo for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>
00000000002b2f50 d typeinfo for (anonymous namespace)::itanium_demangle::FunctionEncoding
00000000002b2e00 d typeinfo for (anonymous namespace)::itanium_demangle::StdQualifiedName
00000000002b31f0 d typeinfo for (anonymous namespace)::itanium_demangle::VendorExtQualType
00000000002b24d0 d typeinfo for (anonymous namespace)::itanium_demangle::ArraySubscriptExpr
00000000002b23f0 d typeinfo for (anonymous namespace)::itanium_demangle::GlobalQualifiedName
00000000002b3420 d typeinfo for (anonymous namespace)::itanium_demangle::PointerToMemberType
00000000002b2850 d typeinfo for (anonymous namespace)::itanium_demangle::SizeofParamPackExpr
00000000002b2c40 d typeinfo for (anonymous namespace)::itanium_demangle::SpecialSubstitution
00000000002b30a0 d typeinfo for (anonymous namespace)::itanium_demangle::DynamicExceptionSpec
00000000002b2d90 d typeinfo for (anonymous namespace)::itanium_demangle::NameWithTemplateArgs
00000000002b35e0 d typeinfo for (anonymous namespace)::itanium_demangle::PostfixQualifiedType
00000000002b2e70 d typeinfo for (anonymous namespace)::itanium_demangle::TemplateArgumentPack
00000000002b15f0 d typeinfo for (anonymous namespace)::itanium_demangle::CtorVtableSpecialName
00000000002b2b60 d typeinfo for (anonymous namespace)::itanium_demangle::StructuredBindingName
00000000002b1c80 d typeinfo for (anonymous namespace)::itanium_demangle::TemplateParamPackDecl
00000000002b1b30 d typeinfo for (anonymous namespace)::itanium_demangle::TypeTemplateParamDecl
00000000002b2310 d typeinfo for (anonymous namespace)::itanium_demangle::ConversionOperatorType
00000000002b3490 d typeinfo for (anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType
00000000002b1f20 d typeinfo for (anonymous namespace)::itanium_demangle::ParameterPackExpansion
00000000002b1740 d typeinfo for (anonymous namespace)::itanium_demangle::ForwardTemplateReference
00000000002b1ba0 d typeinfo for (anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl
00000000002b1c10 d typeinfo for (anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl
00000000002b1ac0 d typeinfo for (anonymous namespace)::itanium_demangle::SyntheticTemplateParamName
00000000002b2a10 d typeinfo for (anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution
00000000002b1570 d typeinfo for (anonymous namespace)::itanium_demangle::Node
00000000002b2700 d typeinfo for (anonymous namespace)::itanium_demangle::NewExpr
00000000002b1820 d typeinfo for (anonymous namespace)::itanium_demangle::BoolExpr
00000000002b20e0 d typeinfo for (anonymous namespace)::itanium_demangle::CallExpr
00000000002b2070 d typeinfo for (anonymous namespace)::itanium_demangle::CastExpr
00000000002b22a0 d typeinfo for (anonymous namespace)::itanium_demangle::DtorName
00000000002b1eb0 d typeinfo for (anonymous namespace)::itanium_demangle::FoldExpr
00000000002b1660 d typeinfo for (anonymous namespace)::itanium_demangle::NameType
00000000002b3260 d typeinfo for (anonymous namespace)::itanium_demangle::QualType
00000000002b33b0 d typeinfo for (anonymous namespace)::itanium_demangle::ArrayType
00000000002b2fc0 d typeinfo for (anonymous namespace)::itanium_demangle::DotSuffix
00000000002b2bd0 d typeinfo for (anonymous namespace)::itanium_demangle::LocalName
00000000002b2930 d typeinfo for (anonymous namespace)::itanium_demangle::ThrowExpr
00000000002b1250 d typeinfo for std::__ndk1::__do_message
00000000002b1350 D typeinfo for std::__ndk1::bad_weak_ptr
00000000002b1428 D typeinfo for std::__ndk1::future_error
00000000002b11e0 D typeinfo for std::__ndk1::system_error
00000000002b1390 D typeinfo for std::__ndk1::__shared_count
00000000002b11f8 D typeinfo for std::__ndk1::error_category
00000000002b1470 D typeinfo for std::__ndk1::__assoc_sub_state
00000000002b13d8 D typeinfo for std::__ndk1::__shared_weak_count
00000000002b14d0 d typeinfo for std::__ndk1::__future_error_category
00000000002b1310 d typeinfo for std::__ndk1::__system_error_category
00000000002b12b0 d typeinfo for std::__ndk1::__generic_error_category
00000000002b3d30 D typeinfo for decimal16*
00000000002b3f60 D typeinfo for char32_t*
00000000002b3830 D typeinfo for std::nullptr_t*
00000000002b3f10 D typeinfo for char16_t*
00000000002b3ec0 D typeinfo for char8_t*
00000000002b3d50 D typeinfo for decimal16 const*
00000000002b3f80 D typeinfo for char32_t const*
00000000002b3850 D typeinfo for std::nullptr_t const*
00000000002b3f30 D typeinfo for char16_t const*
00000000002b3ee0 D typeinfo for char8_t const*
00000000002b39e0 D typeinfo for signed char const*
00000000002b38a0 D typeinfo for bool const*
00000000002b3940 D typeinfo for char const*
00000000002b3df0 D typeinfo for double const*
00000000002b3e40 D typeinfo for long double const*
00000000002b3da0 D typeinfo for float const*
00000000002b3e90 D typeinfo for __float128 const*
00000000002b3990 D typeinfo for unsigned char const*
00000000002b3ad0 D typeinfo for int const*
00000000002b3b20 D typeinfo for unsigned int const*
00000000002b3b70 D typeinfo for long const*
00000000002b3bc0 D typeinfo for unsigned long const*
00000000002b3cb0 D typeinfo for __int128 const*
00000000002b3d00 D typeinfo for unsigned __int128 const*
00000000002b3a30 D typeinfo for short const*
00000000002b3a80 D typeinfo for unsigned short const*
00000000002b3800 D typeinfo for void const*
00000000002b38f0 D typeinfo for wchar_t const*
00000000002b3c10 D typeinfo for long long const*
00000000002b3c60 D typeinfo for unsigned long long const*
00000000002b39c0 D typeinfo for signed char*
00000000002b3880 D typeinfo for bool*
00000000002b3920 D typeinfo for char*
00000000002b3dd0 D typeinfo for double*
00000000002b3e20 D typeinfo for long double*
00000000002b3d80 D typeinfo for float*
00000000002b3e70 D typeinfo for __float128*
00000000002b3970 D typeinfo for unsigned char*
00000000002b3ab0 D typeinfo for int*
00000000002b3b00 D typeinfo for unsigned int*
00000000002b3b50 D typeinfo for long*
00000000002b3ba0 D typeinfo for unsigned long*
00000000002b3c90 D typeinfo for __int128*
00000000002b3ce0 D typeinfo for unsigned __int128*
00000000002b3a10 D typeinfo for short*
00000000002b3a60 D typeinfo for unsigned short*
00000000002b37e0 D typeinfo for void*
00000000002b38d0 D typeinfo for wchar_t*
00000000002b3bf0 D typeinfo for long long*
00000000002b3c40 D typeinfo for unsigned long long*
00000000002b4610 D typeinfo for std::bad_typeid
00000000002b43b0 D typeinfo for std::logic_error
00000000002b44e0 D typeinfo for std::range_error
00000000002b43c8 D typeinfo for std::domain_error
00000000002b4448 D typeinfo for std::length_error
00000000002b4488 D typeinfo for std::out_of_range
00000000002b42f0 D typeinfo for std::bad_exception
00000000002b44c8 D typeinfo for std::runtime_error
00000000002b4520 D typeinfo for std::overflow_error
00000000002b4560 D typeinfo for std::underflow_error
00000000002b4408 D typeinfo for std::invalid_argument
00000000002b1508 D typeinfo for std::nested_exception
00000000002b4320 D typeinfo for std::bad_array_new_length
00000000002b45f8 D typeinfo for std::bad_cast
00000000002b4308 D typeinfo for std::bad_alloc
00000000002b42b8 D typeinfo for std::exception
00000000002b45e8 D typeinfo for std::type_info
00000000002b39b0 D typeinfo for signed char
00000000002b3870 D typeinfo for bool
00000000002b3910 D typeinfo for char
00000000002b3dc0 D typeinfo for double
00000000002b3e10 D typeinfo for long double
00000000002b3d70 D typeinfo for float
00000000002b3e60 D typeinfo for __float128
00000000002b3960 D typeinfo for unsigned char
00000000002b3aa0 D typeinfo for int
00000000002b3af0 D typeinfo for unsigned int
00000000002b3b40 D typeinfo for long
00000000002b3b90 D typeinfo for unsigned long
00000000002b3c80 D typeinfo for __int128
00000000002b3cd0 D typeinfo for unsigned __int128
00000000002b3a00 D typeinfo for short
00000000002b3a50 D typeinfo for unsigned short
00000000002b37d0 D typeinfo for void
00000000002b38c0 D typeinfo for wchar_t
00000000002b3be0 D typeinfo for long long
00000000002b3c30 D typeinfo for unsigned long long
00000000000aefdc R typeinfo name for decimal16
00000000000af024 R typeinfo name for char32_t
00000000000aef49 R typeinfo name for std::nullptr_t
00000000000af018 R typeinfo name for char16_t
00000000000af00c R typeinfo name for char8_t
00000000000af052 R typeinfo name for __cxxabiv1::__enum_type_info
00000000000aee20 R typeinfo name for __cxxabiv1::__shim_type_info
00000000000af030 R typeinfo name for __cxxabiv1::__array_type_info
00000000000aee41 R typeinfo name for __cxxabiv1::__class_type_info
00000000000aee63 R typeinfo name for __cxxabiv1::__pbase_type_info
00000000000aee85 R typeinfo name for __cxxabiv1::__pointer_type_info
00000000000aeea9 R typeinfo name for __cxxabiv1::__function_type_info
00000000000af073 R typeinfo name for __cxxabiv1::__si_class_type_info
00000000000af098 R typeinfo name for __cxxabiv1::__vmi_class_type_info
00000000000aef18 R typeinfo name for __cxxabiv1::__fundamental_type_info
00000000000aeece R typeinfo name for __cxxabiv1::__pointer_to_member_type_info
00000000000ae80c r typeinfo name for (anonymous namespace)::itanium_demangle::AbiTagAttr
00000000000ae2fd r typeinfo name for (anonymous namespace)::itanium_demangle::BinaryExpr
00000000000ae580 r typeinfo name for (anonymous namespace)::itanium_demangle::BracedExpr
00000000000ae3e6 r typeinfo name for (anonymous namespace)::itanium_demangle::DeleteExpr
00000000000ae201 r typeinfo name for (anonymous namespace)::itanium_demangle::LambdaExpr
00000000000ae51a r typeinfo name for (anonymous namespace)::itanium_demangle::MemberExpr
00000000000adec6 r typeinfo name for (anonymous namespace)::itanium_demangle::NestedName
00000000000ae32c r typeinfo name for (anonymous namespace)::itanium_demangle::PrefixExpr
00000000000ae76c r typeinfo name for (anonymous namespace)::itanium_demangle::UUIDOfExpr
00000000000aebda r typeinfo name for (anonymous namespace)::itanium_demangle::VectorType
00000000000aeca9 r typeinfo name for (anonymous namespace)::itanium_demangle::PointerType
00000000000ae614 r typeinfo name for (anonymous namespace)::itanium_demangle::PostfixExpr
00000000000ade08 r typeinfo name for (anonymous namespace)::itanium_demangle::SpecialName
00000000000ae7db r typeinfo name for (anonymous namespace)::itanium_demangle::CtorDtorName
00000000000ae9e4 r typeinfo name for (anonymous namespace)::itanium_demangle::EnableIfAttr
00000000000aeae1 r typeinfo name for (anonymous namespace)::itanium_demangle::FunctionType
00000000000ae5e3 r typeinfo name for (anonymous namespace)::itanium_demangle::InitListExpr
00000000000aea77 r typeinfo name for (anonymous namespace)::itanium_demangle::NoexceptSpec
00000000000ae90c r typeinfo name for (anonymous namespace)::itanium_demangle::TemplateArgs
00000000000ae66f r typeinfo name for (anonymous namespace)::itanium_demangle::EnclosingExpr
00000000000ae264 r typeinfo name for (anonymous namespace)::itanium_demangle::FunctionParam
00000000000ae70d r typeinfo name for (anonymous namespace)::itanium_demangle::NodeArrayNode
00000000000aeb12 r typeinfo name for (anonymous namespace)::itanium_demangle::ObjCProtoName
00000000000ae8da r typeinfo name for (anonymous namespace)::itanium_demangle::ParameterPack
00000000000ae415 r typeinfo name for (anonymous namespace)::itanium_demangle::QualifiedName
00000000000aecd9 r typeinfo name for (anonymous namespace)::itanium_demangle::ReferenceType
00000000000ae039 r typeinfo name for (anonymous namespace)::itanium_demangle::StringLiteral
00000000000ae3b3 r typeinfo name for (anonymous namespace)::itanium_demangle::ConversionExpr
00000000000adf32 r typeinfo name for (anonymous namespace)::itanium_demangle::IntegerLiteral
00000000000ae5af r typeinfo name for (anonymous namespace)::itanium_demangle::BracedRangeExpr
00000000000ae1cd r typeinfo name for (anonymous namespace)::itanium_demangle::ClosureTypeName
00000000000ae6a1 r typeinfo name for (anonymous namespace)::itanium_demangle::ConditionalExpr
00000000000ae230 r typeinfo name for (anonymous namespace)::itanium_demangle::IntegerCastExpr
00000000000ae4ae r typeinfo name for (anonymous namespace)::itanium_demangle::LiteralOperator
00000000000aeba6 r typeinfo name for (anonymous namespace)::itanium_demangle::PixelVectorType
00000000000ae06b r typeinfo name for (anonymous namespace)::itanium_demangle::UnnamedTypeName
00000000000adfc9 r typeinfo name for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>
00000000000ae001 r typeinfo name for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>
00000000000adf91 r typeinfo name for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>
00000000000aea15 r typeinfo name for (anonymous namespace)::itanium_demangle::FunctionEncoding
00000000000ae976 r typeinfo name for (anonymous namespace)::itanium_demangle::StdQualifiedName
00000000000aeb44 r typeinfo name for (anonymous namespace)::itanium_demangle::VendorExtQualType
00000000000ae549 r typeinfo name for (anonymous namespace)::itanium_demangle::ArraySubscriptExpr
00000000000ae4e2 r typeinfo name for (anonymous namespace)::itanium_demangle::GlobalQualifiedName
00000000000aec36 r typeinfo name for (anonymous namespace)::itanium_demangle::PointerToMemberType
00000000000ae6d5 r typeinfo name for (anonymous namespace)::itanium_demangle::SizeofParamPackExpr
00000000000ae8a2 r typeinfo name for (anonymous namespace)::itanium_demangle::SpecialSubstitution
00000000000aeaa8 r typeinfo name for (anonymous namespace)::itanium_demangle::DynamicExceptionSpec
00000000000ae93d r typeinfo name for (anonymous namespace)::itanium_demangle::NameWithTemplateArgs
00000000000aed0b r typeinfo name for (anonymous namespace)::itanium_demangle::PostfixQualifiedType
00000000000ae9ab r typeinfo name for (anonymous namespace)::itanium_demangle::TemplateArgumentPack
00000000000ade60 r typeinfo name for (anonymous namespace)::itanium_demangle::CtorVtableSpecialName
00000000000ae83b r typeinfo name for (anonymous namespace)::itanium_demangle::StructuredBindingName
00000000000ae193 r typeinfo name for (anonymous namespace)::itanium_demangle::TemplateParamPackDecl
00000000000ae0de r typeinfo name for (anonymous namespace)::itanium_demangle::TypeTemplateParamDecl
00000000000ae473 r typeinfo name for (anonymous namespace)::itanium_demangle::ConversionOperatorType
00000000000aec6e r typeinfo name for (anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType
00000000000ae2c2 r typeinfo name for (anonymous namespace)::itanium_demangle::ParameterPackExpansion
00000000000adef5 r typeinfo name for (anonymous namespace)::itanium_demangle::ForwardTemplateReference
00000000000ae118 r typeinfo name for (anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl
00000000000ae155 r typeinfo name for (anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl
00000000000ae09f r typeinfo name for (anonymous namespace)::itanium_demangle::SyntheticTemplateParamName
00000000000ae79b r typeinfo name for (anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution
00000000000ade38 r typeinfo name for (anonymous namespace)::itanium_demangle::Node
00000000000ae644 r typeinfo name for (anonymous namespace)::itanium_demangle::NewExpr
00000000000adf65 r typeinfo name for (anonymous namespace)::itanium_demangle::BoolExpr
00000000000ae387 r typeinfo name for (anonymous namespace)::itanium_demangle::CallExpr
00000000000ae35b r typeinfo name for (anonymous namespace)::itanium_demangle::CastExpr
00000000000ae447 r typeinfo name for (anonymous namespace)::itanium_demangle::DtorName
00000000000ae296 r typeinfo name for (anonymous namespace)::itanium_demangle::FoldExpr
00000000000ade9a r typeinfo name for (anonymous namespace)::itanium_demangle::NameType
00000000000aeb7a r typeinfo name for (anonymous namespace)::itanium_demangle::QualType
00000000000aec09 r typeinfo name for (anonymous namespace)::itanium_demangle::ArrayType
00000000000aea4a r typeinfo name for (anonymous namespace)::itanium_demangle::DotSuffix
00000000000ae875 r typeinfo name for (anonymous namespace)::itanium_demangle::LocalName
00000000000ae73f r typeinfo name for (anonymous namespace)::itanium_demangle::ThrowExpr
00000000000ad3ce r typeinfo name for std::__ndk1::__do_message
00000000000ad5d9 R typeinfo name for std::__ndk1::bad_weak_ptr
00000000000ad635 R typeinfo name for std::__ndk1::future_error
00000000000ad398 R typeinfo name for std::__ndk1::system_error
00000000000ad5f3 R typeinfo name for std::__ndk1::__shared_count
00000000000ad3b2 R typeinfo name for std::__ndk1::error_category
00000000000ad64f R typeinfo name for std::__ndk1::__assoc_sub_state
00000000000ad60f R typeinfo name for std::__ndk1::__shared_weak_count
00000000000ad66e r typeinfo name for std::__ndk1::__future_error_category
00000000000ad40e r typeinfo name for std::__ndk1::__system_error_category
00000000000ad3e8 r typeinfo name for std::__ndk1::__generic_error_category
00000000000aefdf R typeinfo name for decimal16*
00000000000af027 R typeinfo name for char32_t*
00000000000aef4c R typeinfo name for std::nullptr_t*
00000000000af01b R typeinfo name for char16_t*
00000000000af00f R typeinfo name for char8_t*
00000000000aefe3 R typeinfo name for decimal16 const*
00000000000af02b R typeinfo name for char32_t const*
00000000000aef50 R typeinfo name for std::nullptr_t const*
00000000000af01f R typeinfo name for char16_t const*
00000000000af013 R typeinfo name for char8_t const*
00000000000aef7e R typeinfo name for signed char const*
00000000000aef5a R typeinfo name for bool const*
00000000000aef6c R typeinfo name for char const*
00000000000aeff6 R typeinfo name for double const*
00000000000aefff R typeinfo name for long double const*
00000000000aefed R typeinfo name for float const*
00000000000af008 R typeinfo name for __float128 const*
00000000000aef75 R typeinfo name for unsigned char const*
00000000000aef99 R typeinfo name for int const*
00000000000aefa2 R typeinfo name for unsigned int const*
00000000000aefab R typeinfo name for long const*
00000000000aefb4 R typeinfo name for unsigned long const*
00000000000aefcf R typeinfo name for __int128 const*
00000000000aefd8 R typeinfo name for unsigned __int128 const*
00000000000aef87 R typeinfo name for short const*
00000000000aef90 R typeinfo name for unsigned short const*
00000000000aef45 R typeinfo name for void const*
00000000000aef63 R typeinfo name for wchar_t const*
00000000000aefbd R typeinfo name for long long const*
00000000000aefc6 R typeinfo name for unsigned long long const*
00000000000aef7b R typeinfo name for signed char*
00000000000aef57 R typeinfo name for bool*
00000000000aef69 R typeinfo name for char*
00000000000aeff3 R typeinfo name for double*
00000000000aeffc R typeinfo name for long double*
00000000000aefea R typeinfo name for float*
00000000000af005 R typeinfo name for __float128*
00000000000aef72 R typeinfo name for unsigned char*
00000000000aef96 R typeinfo name for int*
00000000000aef9f R typeinfo name for unsigned int*
00000000000aefa8 R typeinfo name for long*
00000000000aefb1 R typeinfo name for unsigned long*
00000000000aefcc R typeinfo name for __int128*
00000000000aefd5 R typeinfo name for unsigned __int128*
00000000000aef84 R typeinfo name for short*
00000000000aef8d R typeinfo name for unsigned short*
00000000000aef42 R typeinfo name for void*
00000000000aef60 R typeinfo name for wchar_t*
00000000000aefba R typeinfo name for long long*
00000000000aefc3 R typeinfo name for unsigned long long*
00000000000af1bd R typeinfo name for std::bad_typeid
00000000000af114 R typeinfo name for std::logic_error
00000000000af15b R typeinfo name for std::range_error
00000000000af103 R typeinfo name for std::domain_error
00000000000af139 R typeinfo name for std::length_error
00000000000af14a R typeinfo name for std::out_of_range
00000000000af0cb R typeinfo name for std::bad_exception
00000000000af16b R typeinfo name for std::runtime_error
00000000000af17d R typeinfo name for std::overflow_error
00000000000af190 R typeinfo name for std::underflow_error
00000000000af124 R typeinfo name for std::invalid_argument
00000000000ad693 R typeinfo name for std::nested_exception
00000000000af0ea R typeinfo name for std::bad_array_new_length
00000000000af1b1 R typeinfo name for std::bad_cast
00000000000af0dd R typeinfo name for std::bad_alloc
00000000000af0be R typeinfo name for std::exception
00000000000af1a4 R typeinfo name for std::type_info
00000000000aef79 R typeinfo name for signed char
00000000000aef55 R typeinfo name for bool
00000000000aef67 R typeinfo name for char
00000000000aeff1 R typeinfo name for double
00000000000aeffa R typeinfo name for long double
00000000000aefe8 R typeinfo name for float
00000000000af003 R typeinfo name for __float128
00000000000aef70 R typeinfo name for unsigned char
00000000000aef94 R typeinfo name for int
00000000000aef9d R typeinfo name for unsigned int
00000000000aefa6 R typeinfo name for long
00000000000aefaf R typeinfo name for unsigned long
00000000000aefca R typeinfo name for __int128
00000000000aefd3 R typeinfo name for unsigned __int128
00000000000aef82 R typeinfo name for short
00000000000aef8b R typeinfo name for unsigned short
00000000000aef40 R typeinfo name for void
00000000000aef5e R typeinfo name for wchar_t
00000000000aefb8 R typeinfo name for long long
00000000000aefc1 R typeinfo name for unsigned long long
00000000002b0978 D vtable for CameraOrbit
00000000002b08a8 D vtable for ModelLoader
00000000002b10f8 V vtable for AppCallbacks
00000000002b08e0 D vtable for ShaderLoader
00000000002b0870 V vtable for AssetCallbacks
00000000002b1050 D vtable for GfxHeapAllocator
00000000002b0b60 V vtable for MemHeapAllocator
00000000002b0a30 D vtable for MemTempAllocator
00000000002b0b30 D vtable for MemTlsfAllocator
00000000002b0d90 V vtable for VmaBlockMetadata
00000000002b0ae0 D vtable for MemBumpAllocatorVM
00000000002b0838 D vtable for AssetImageCallbacks
00000000002b0a90 D vtable for MemBumpAllocatorBase
00000000002b0f20 D vtable for VmaBlockMetadata_TLSF
00000000002b0a60 D vtable for MemThreadSafeAllocator
00000000002b09d0 D vtable for SettingsJunkyardParser
00000000002b0a00 V vtable for SettingsCustomCallbacks
00000000002b0e58 D vtable for VmaBlockMetadata_Linear
00000000002b0918 D vtable for Camera
00000000002b10c8 V vtable for AppImpl
00000000002b0808 V vtable for Allocator
00000000002b0948 D vtable for CameraFPS
00000000002b4028 D vtable for __cxxabiv1::__enum_type_info
00000000002b3748 D vtable for __cxxabiv1::__shim_type_info
00000000002b3fa0 D vtable for __cxxabiv1::__array_type_info
00000000002b4078 D vtable for __cxxabiv1::__class_type_info
00000000002b4198 D vtable for __cxxabiv1::__pbase_type_info
00000000002b41d0 D vtable for __cxxabiv1::__pointer_type_info
00000000002b3ff0 D vtable for __cxxabiv1::__function_type_info
00000000002b40c8 D vtable for __cxxabiv1::__si_class_type_info
00000000002b4130 D vtable for __cxxabiv1::__vmi_class_type_info
00000000002b3780 D vtable for __cxxabiv1::__fundamental_type_info
00000000002b4208 D vtable for __cxxabiv1::__pointer_to_member_type_info
00000000002b2a98 d vtable for (anonymous namespace)::itanium_demangle::AbiTagAttr
00000000002b1f38 d vtable for (anonymous namespace)::itanium_demangle::BinaryExpr
00000000002b24e8 d vtable for (anonymous namespace)::itanium_demangle::BracedExpr
00000000002b2168 d vtable for (anonymous namespace)::itanium_demangle::DeleteExpr
00000000002b1d08 d vtable for (anonymous namespace)::itanium_demangle::LambdaExpr
00000000002b2408 d vtable for (anonymous namespace)::itanium_demangle::MemberExpr
00000000002b1678 d vtable for (anonymous namespace)::itanium_demangle::NestedName
00000000002b1fa8 d vtable for (anonymous namespace)::itanium_demangle::PrefixExpr
00000000002b2948 d vtable for (anonymous namespace)::itanium_demangle::UUIDOfExpr
00000000002b32e8 d vtable for (anonymous namespace)::itanium_demangle::VectorType
00000000002b34a8 d vtable for (anonymous namespace)::itanium_demangle::PointerType
00000000002b2638 d vtable for (anonymous namespace)::itanium_demangle::PostfixExpr
00000000002b1518 d vtable for (anonymous namespace)::itanium_demangle::SpecialName
00000000002b2a28 d vtable for (anonymous namespace)::itanium_demangle::CtorDtorName
00000000002b2e88 d vtable for (anonymous namespace)::itanium_demangle::EnableIfAttr
00000000002b30b8 d vtable for (anonymous namespace)::itanium_demangle::FunctionType
00000000002b25c8 d vtable for (anonymous namespace)::itanium_demangle::InitListExpr
00000000002b2fd8 d vtable for (anonymous namespace)::itanium_demangle::NoexceptSpec
00000000002b2cc8 d vtable for (anonymous namespace)::itanium_demangle::TemplateArgs
00000000002b2718 d vtable for (anonymous namespace)::itanium_demangle::EnclosingExpr
00000000002b1de8 d vtable for (anonymous namespace)::itanium_demangle::FunctionParam
00000000002b2868 d vtable for (anonymous namespace)::itanium_demangle::NodeArrayNode
00000000002b3128 d vtable for (anonymous namespace)::itanium_demangle::ObjCProtoName
00000000002b2c58 d vtable for (anonymous namespace)::itanium_demangle::ParameterPack
00000000002b21d8 d vtable for (anonymous namespace)::itanium_demangle::QualifiedName
00000000002b3518 d vtable for (anonymous namespace)::itanium_demangle::ReferenceType
00000000002b1988 d vtable for (anonymous namespace)::itanium_demangle::StringLiteral
00000000002b20f8 d vtable for (anonymous namespace)::itanium_demangle::ConversionExpr
00000000002b1758 d vtable for (anonymous namespace)::itanium_demangle::IntegerLiteral
00000000002b2558 d vtable for (anonymous namespace)::itanium_demangle::BracedRangeExpr
00000000002b1c98 d vtable for (anonymous namespace)::itanium_demangle::ClosureTypeName
00000000002b2788 d vtable for (anonymous namespace)::itanium_demangle::ConditionalExpr
00000000002b1d78 d vtable for (anonymous namespace)::itanium_demangle::IntegerCastExpr
00000000002b2328 d vtable for (anonymous namespace)::itanium_demangle::LiteralOperator
00000000002b3278 d vtable for (anonymous namespace)::itanium_demangle::PixelVectorType
00000000002b19f8 d vtable for (anonymous namespace)::itanium_demangle::UnnamedTypeName
00000000002b18a8 d vtable for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>
00000000002b1918 d vtable for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>
00000000002b1838 d vtable for (anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>
00000000002b2ef8 d vtable for (anonymous namespace)::itanium_demangle::FunctionEncoding
00000000002b2da8 d vtable for (anonymous namespace)::itanium_demangle::StdQualifiedName
00000000002b3198 d vtable for (anonymous namespace)::itanium_demangle::VendorExtQualType
00000000002b2478 d vtable for (anonymous namespace)::itanium_demangle::ArraySubscriptExpr
00000000002b2398 d vtable for (anonymous namespace)::itanium_demangle::GlobalQualifiedName
00000000002b33c8 d vtable for (anonymous namespace)::itanium_demangle::PointerToMemberType
00000000002b27f8 d vtable for (anonymous namespace)::itanium_demangle::SizeofParamPackExpr
00000000002b2be8 d vtable for (anonymous namespace)::itanium_demangle::SpecialSubstitution
00000000002b3048 d vtable for (anonymous namespace)::itanium_demangle::DynamicExceptionSpec
00000000002b2d38 d vtable for (anonymous namespace)::itanium_demangle::NameWithTemplateArgs
00000000002b3588 d vtable for (anonymous namespace)::itanium_demangle::PostfixQualifiedType
00000000002b2e18 d vtable for (anonymous namespace)::itanium_demangle::TemplateArgumentPack
00000000002b1598 d vtable for (anonymous namespace)::itanium_demangle::CtorVtableSpecialName
00000000002b2b08 d vtable for (anonymous namespace)::itanium_demangle::StructuredBindingName
00000000002b1c28 d vtable for (anonymous namespace)::itanium_demangle::TemplateParamPackDecl
00000000002b1ad8 d vtable for (anonymous namespace)::itanium_demangle::TypeTemplateParamDecl
00000000002b22b8 d vtable for (anonymous namespace)::itanium_demangle::ConversionOperatorType
00000000002b3438 d vtable for (anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType
00000000002b1ec8 d vtable for (anonymous namespace)::itanium_demangle::ParameterPackExpansion
00000000002b16e8 d vtable for (anonymous namespace)::itanium_demangle::ForwardTemplateReference
00000000002b1b48 d vtable for (anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl
00000000002b1bb8 d vtable for (anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl
00000000002b1a68 d vtable for (anonymous namespace)::itanium_demangle::SyntheticTemplateParamName
00000000002b29b8 d vtable for (anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution
00000000002b26a8 d vtable for (anonymous namespace)::itanium_demangle::NewExpr
00000000002b17c8 d vtable for (anonymous namespace)::itanium_demangle::BoolExpr
00000000002b2088 d vtable for (anonymous namespace)::itanium_demangle::CallExpr
00000000002b2018 d vtable for (anonymous namespace)::itanium_demangle::CastExpr
00000000002b2248 d vtable for (anonymous namespace)::itanium_demangle::DtorName
00000000002b1e58 d vtable for (anonymous namespace)::itanium_demangle::FoldExpr
00000000002b1608 d vtable for (anonymous namespace)::itanium_demangle::NameType
00000000002b3208 d vtable for (anonymous namespace)::itanium_demangle::QualType
00000000002b3358 d vtable for (anonymous namespace)::itanium_demangle::ArrayType
00000000002b2f68 d vtable for (anonymous namespace)::itanium_demangle::DotSuffix
00000000002b2b78 d vtable for (anonymous namespace)::itanium_demangle::LocalName
00000000002b28d8 d vtable for (anonymous namespace)::itanium_demangle::ThrowExpr
00000000002b4628 d vtable for libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm64>
00000000002b1208 d vtable for std::__ndk1::__do_message
00000000002b1328 D vtable for std::__ndk1::bad_weak_ptr
00000000002b1400 D vtable for std::__ndk1::future_error
00000000002b11b8 D vtable for std::__ndk1::system_error
00000000002b1368 D vtable for std::__ndk1::__shared_count
00000000002b1170 D vtable for std::__ndk1::error_category
00000000002b1440 D vtable for std::__ndk1::__assoc_sub_state
00000000002b13a0 D vtable for std::__ndk1::__shared_weak_count
00000000002b1488 d vtable for std::__ndk1::__future_error_category
00000000002b12c8 d vtable for std::__ndk1::__system_error_category
00000000002b1268 d vtable for std::__ndk1::__generic_error_category
00000000002b45a0 D vtable for std::bad_typeid
00000000002b4338 D vtable for std::logic_error
00000000002b44a0 D vtable for std::range_error
00000000002b4388 D vtable for std::domain_error
00000000002b4420 D vtable for std::length_error
00000000002b4460 D vtable for std::out_of_range
00000000002b42c8 D vtable for std::bad_exception
00000000002b4360 D vtable for std::runtime_error
00000000002b44f8 D vtable for std::overflow_error
00000000002b4538 D vtable for std::underflow_error
00000000002b43e0 D vtable for std::invalid_argument
00000000002b14e8 D vtable for std::nested_exception
00000000002b4268 D vtable for std::bad_array_new_length
00000000002b4578 D vtable for std::bad_cast
00000000002b4240 D vtable for std::bad_alloc
00000000002b4290 D vtable for std::exception
00000000002b45c8 D vtable for std::type_info
000000000023efd4 t thread-local wrapper routine for gCmdBufferThreadData
000000000027585c t conExecute(char const*, char*, unsigned int)::$_0::operator()(char const*) const
00000000002762f8 t conExecute(char const*, char*, unsigned int)::$_1::operator()(ConCommandDesc const&) const
00000000002c0c80 b sysLoadDLL(char const*, char**)::errMsg
00000000002c9788 b AndroidMain(int, char**)::impl
00000000002bfa10 b clipboardAdd(char const*, ClipboardVar const*)::DummyVar
00000000002bfa00 b clipboardGet(char const*)::DummyVar
00000000000f344c t assetRegister(AssetTypeDesc const&)::$_2::operator()(AssetTypeManager const&) const
0000000000146228 t memTempPushId()::$_0::operator()(MemTempContext const*) const
0000000000128e84 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_0::__invoke(void*, unsigned long)
0000000000128ee8 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_1::__invoke(void*, void*)
0000000000128f4c t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_2::__invoke(cgltf_memory_options const*, cgltf_file_options const*, char const*, unsigned long*, void**)
0000000000129000 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_3::__invoke(cgltf_memory_options const*, cgltf_file_options const*, void*)
0000000000128eb4 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_0::operator()(void*, unsigned long) const
0000000000116c88 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_0::operator void* (*)(void*, unsigned long)() const
0000000000128f18 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_1::operator()(void*, void*) const
0000000000116ca0 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_1::operator void (*)(void*, void*)() const
0000000000128f94 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_2::operator()(cgltf_memory_options const*, cgltf_file_options const*, char const*, unsigned long*, void**) const
0000000000116cb8 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_2::operator cgltf_result (*)(cgltf_memory_options const*, cgltf_file_options const*, char const*, unsigned long*, void**)() const
0000000000129038 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_3::operator()(cgltf_memory_options const*, cgltf_file_options const*, void*) const
0000000000116cd0 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_3::operator void (*)(cgltf_memory_options const*, cgltf_file_options const*, void*)() const
000000000012b4a0 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_4::operator()(modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::MaterialData const&) const
0000000000117708 t modelLoadGltf(char const*, Allocator*, ModelLoadParams const&, char*, unsigned int)::$_5::operator()(char const*) const
000000000013f93c t vfsMountLocal(char const*, char const*, bool)::$_0::operator()(VfsMountPoint const&) const
000000000015920c t jobsInitialize(JobsInitParams const&)::$_0::__invoke(void*)
0000000000159238 t jobsInitialize(JobsInitParams const&)::$_0::operator()(void*) const
00000000001574b8 t jobsInitialize(JobsInitParams const&)::$_0::operator bool (*)(void*)() const
000000000013f9a8 t vfsMountRemote(char const*, bool)::$_1::operator()(VfsMountPoint const&) const
00000000000f34ac t assetUnregister(unsigned int)::$_3::operator()(AssetTypeManager const&) const
00000000002c0e90 b frameInfoRender(float, bool*)::fps
00000000002c0e80 b frameInfoRender(float, bool*)::elapsed
00000000002c0e88 b frameInfoRender(float, bool*)::frameIdx
000000000017f404 t engineInitialize()::$_0::__invoke(int, char const**, char*, unsigned int, void*)
000000000017f450 t engineInitialize()::$_0::operator()(int, char const**, char*, unsigned int, void*) const
000000000017e63c t engineInitialize()::$_0::operator bool (*)(int, char const**, char*, unsigned int, void*)() const
000000000016beac t settingsGetValue(char const*, char const*)::$_1::operator()(SettingsKeyValue const&) const
000000000016be78 t settingsSetValue(char const*, char const*)::$_0::operator()(SettingsKeyValue const&) const
00000000002bde42 d stbsp_vsprintfcb::hex
00000000002bde55 d stbsp_vsprintfcb::hexu
00000000000f05f8 t assetLoadMetaData(char const*, AssetPlatform, Allocator*, AssetMetaKeyValue**, unsigned int*)::$_0::operator()(JsonNode, StaticArray<AssetMetaKeyValue, 64u>*) const
000000000009d170 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::mins
000000000009d15c r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::masks
000000000009d184 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shiftc
000000000009d198 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shifte
000000000009d13c r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::lengths
00000000002bdf58 d budgetViewerRender(float, bool*)::Budgets_alpha
000000000027629c t conRegisterCommand(ConCommandDesc const&)::$_5::__invoke(void*)
0000000000276330 t conRegisterCommand(ConCommandDesc const&)::$_4::operator()(ConCommandDesc const&) const
00000000002762c4 t conRegisterCommand(ConCommandDesc const&)::$_5::operator()(void*) const
00000000002760a0 t conRegisterCommand(ConCommandDesc const&)::$_5::operator void (*)(void*)() const
0000000000253274 t gfxDestroyPipeline(Handle<GfxPipelineT>)::$_2::operator()(Handle<GfxPipelineT> const&) const
000000000013b850 t remoteSendResponse(unsigned int, Blob const&, bool, char const*)::$_0::operator()(RemoteCommandDesc const&) const
00000000002c9c48 b __cxa_thread_atexit::manager
000000000014f394 t debugUnwindCallback(_Unwind_Context*, void*)::$_0::operator()(void const*) const
0000000000160c80 t logRegisterCallback(void (*)(LogEntry const&, void*), void*)::$_0::operator()(Pair<void (*)(LogEntry const&, void*), void*> const&) const
000000000013b880 t remoteExecuteCommand(unsigned int, Blob const&)::$_1::operator()(RemoteCommandDesc const&) const
0000000000173558 t strPrintFmtAllocArgs(Allocator*, char const*, std::__va_list)::$_0::__invoke(char const*, void*, int)
0000000000173590 t strPrintFmtAllocArgs(Allocator*, char const*, std::__va_list)::$_0::operator()(char const*, void*, int) const
0000000000170c80 t strPrintFmtAllocArgs(Allocator*, char const*, std::__va_list)::$_0::operator char* (*)(char const*, void*, int)() const
0000000000160cb0 t logUnregisterCallback(void (*)(LogEntry const&, void*))::$_1::operator()(Pair<void (*)(LogEntry const&, void*), void*> const&) const
000000000013b8b0 t remoteRegisterCommand(RemoteCommandDesc const&)::$_2::operator()(RemoteCommandDesc const&) const
000000000013fa08 t vfsMountPackageBundle(char const*)::$_2::operator()(VfsMountPoint const&) const
000000000017ee7c t engineRegisterShortcut(char const*, void (*)(void*), void*)::$_1::operator()(char const*) const
000000000017f4b0 t engineRegisterShortcut(char const*, void (*)(void*), void*)::$_2::operator()(EngineShortcutKeys const&) const
000000000024a634 t gfxUpdateDescriptorSet(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*)::$_4::operator()(unsigned int, unsigned int, GfxDescriptorSetLayoutData::Binding const*) const
00000000001311b8 t ANativeActivity_onCreate::$_1::__invoke(ANativeActivity*)
00000000001312d4 t ANativeActivity_onCreate::$_2::__invoke(ANativeActivity*)
00000000001313ac t ANativeActivity_onCreate::$_3::__invoke(ANativeActivity*)
00000000001313fc t ANativeActivity_onCreate::$_4::__invoke(ANativeActivity*, unsigned long*)
00000000001314dc t ANativeActivity_onCreate::$_5::__invoke(ANativeActivity*)
000000000013152c t ANativeActivity_onCreate::$_6::__invoke(ANativeActivity*)
000000000013157c t ANativeActivity_onCreate::$_7::__invoke(ANativeActivity*)
00000000001315cc t ANativeActivity_onCreate::$_8::__invoke(ANativeActivity*)
000000000013161c t ANativeActivity_onCreate::$_9::__invoke(ANativeActivity*, int)
0000000000131688 t ANativeActivity_onCreate::$_10::__invoke(ANativeActivity*, ANativeWindow*)
0000000000131780 t ANativeActivity_onCreate::$_11::__invoke(ANativeActivity*, ANativeWindow*)
00000000001317dc t ANativeActivity_onCreate::$_12::__invoke(ANativeActivity*, AInputQueue*)
00000000001318b8 t ANativeActivity_onCreate::$_13::__invoke(ANativeActivity*, AInputQueue*)
00000000001311e0 t ANativeActivity_onCreate::$_1::operator()(ANativeActivity*) const
0000000000130114 t ANativeActivity_onCreate::$_1::operator void (*)(ANativeActivity*)() const
00000000001312fc t ANativeActivity_onCreate::$_2::operator()(ANativeActivity*) const
000000000013012c t ANativeActivity_onCreate::$_2::operator void (*)(ANativeActivity*)() const
00000000001313d4 t ANativeActivity_onCreate::$_3::operator()(ANativeActivity*) const
0000000000130144 t ANativeActivity_onCreate::$_3::operator void (*)(ANativeActivity*)() const
000000000013142c t ANativeActivity_onCreate::$_4::operator()(ANativeActivity*, unsigned long*) const
000000000013015c t ANativeActivity_onCreate::$_4::operator void* (*)(ANativeActivity*, unsigned long*)() const
0000000000131504 t ANativeActivity_onCreate::$_5::operator()(ANativeActivity*) const
0000000000130174 t ANativeActivity_onCreate::$_5::operator void (*)(ANativeActivity*)() const
0000000000131554 t ANativeActivity_onCreate::$_6::operator()(ANativeActivity*) const
000000000013018c t ANativeActivity_onCreate::$_6::operator void (*)(ANativeActivity*)() const
00000000001315a4 t ANativeActivity_onCreate::$_7::operator()(ANativeActivity*) const
00000000001301a4 t ANativeActivity_onCreate::$_7::operator void (*)(ANativeActivity*)() const
00000000001315f4 t ANativeActivity_onCreate::$_8::operator()(ANativeActivity*) const
00000000001301bc t ANativeActivity_onCreate::$_8::operator void (*)(ANativeActivity*)() const
000000000013164c t ANativeActivity_onCreate::$_9::operator()(ANativeActivity*, int) const
00000000001301d4 t ANativeActivity_onCreate::$_9::operator void (*)(ANativeActivity*, int)() const
00000000001316b8 t ANativeActivity_onCreate::$_10::operator()(ANativeActivity*, ANativeWindow*) const
00000000001301ec t ANativeActivity_onCreate::$_10::operator void (*)(ANativeActivity*, ANativeWindow*)() const
00000000001317b0 t ANativeActivity_onCreate::$_11::operator()(ANativeActivity*, ANativeWindow*) const
0000000000130204 t ANativeActivity_onCreate::$_11::operator void (*)(ANativeActivity*, ANativeWindow*)() const
000000000013180c t ANativeActivity_onCreate::$_12::operator()(ANativeActivity*, AInputQueue*) const
000000000013021c t ANativeActivity_onCreate::$_12::operator void (*)(ANativeActivity*, AInputQueue*)() const
00000000001318e8 t ANativeActivity_onCreate::$_13::operator()(ANativeActivity*, AInputQueue*) const
0000000000130234 t ANativeActivity_onCreate::$_13::operator void (*)(ANativeActivity*, AInputQueue*)() const
0000000000131cc0 t appUnregisterEventsCallback(void (*)(AppEvent const&, void*))::$_0::operator()(AppEventCallbackPair const&) const
000000000014e6f0 t debugFiberScopeProtector_Pop(unsigned short)::$_1::operator()(DebugFiberProtectorThreadContext::Item const&) const
000000000014f3c0 t debugStacktraceSaveStopPoint(void*)::$_1::operator()(void const*) const
00000000002532a4 t gfxCreateDescriptorSetLayout(GfxShader const&, GfxDescriptorSetLayoutBinding const*, unsigned int)::$_3::operator()(GfxDescriptorSetLayoutData const&) const
00000000002c8d68 b gfxGetPhysicalDeviceProperties()::props
00000000002c8d78 b gfxGetPhysicalDeviceProperties()::propsInit
00000000002be098 d gfxBlendAttachmentDescGetDefault()::desc
00000000002c1188 b ImFontAtlasGetBuilderForStbTruetype()::io
00000000002be0b8 d gfxBlendAttachmentDescGetAlphaBlending()::desc
000000000014e6c0 t debugFiberScopeProtector_RegisterCallback(bool (*)(void*), void*)::$_0::operator()(Pair<bool (*)(void*), void*> const&) const
00000000000f341c t assetLoad(AssetLoadParams const&, void const*)::$_1::operator()(AssetTypeManager const&) const
00000000000f3100 t assetWait(Handle<AssetBarrierT>, unsigned int)::$_4::__invoke(int, int)
00000000000f3134 t assetWait(Handle<AssetBarrierT>, unsigned int)::$_4::operator()(int, int) const
00000000000f2108 t assetWait(Handle<AssetBarrierT>, unsigned int)::$_4::operator bool (*)(int, int)() const
000000000015f670 t jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)::$_0::__invoke(void*)
000000000015f6c0 t jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)::$_1::__invoke(void*)
000000000015f698 t jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)::$_0::operator()(void*) const
000000000015eab8 t jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)::$_0::operator cj5_token* (*)(void*)() const
000000000015f6e8 t jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)::$_1::operator()(void*) const
000000000015ead0 t jsonParse(char const*, unsigned int, JsonErrorLocation*, Allocator*)::$_1::operator cj5_token* (*)(void*)() const
00000000001797d4 t timespecAdd(timespec*, int)::'lambda'(timespec const*)::operator()(timespec const*) const
0000000000179808 t timespecAdd(timespec*, int)::'lambda'(timespec*, unsigned long)::operator()(timespec*, unsigned long) const
000000000013e4fc t vfsFindMount(char const*)::$_5::operator()(VfsMountPoint const&) const
000000000013f180 t vfsDiskReadFile(char const*, VfsFlags, Allocator*)::$_9::operator()(char const*, VfsFlags, Allocator*) const
00000000000f2f78 t assetSaveToCache(AssetTypeManager const&, AssetLoadParams const&, AssetResult const&, unsigned int)::$_7::__invoke(char const*, unsigned long, Blob const&, void*)
00000000000f2fb8 t assetSaveToCache(AssetTypeManager const&, AssetLoadParams const&, AssetResult const&, unsigned int)::$_7::operator()(char const*, unsigned long, Blob const&, void*) const
00000000000f2f60 t assetSaveToCache(AssetTypeManager const&, AssetLoadParams const&, AssetResult const&, unsigned int)::$_7::operator void (*)(char const*, unsigned long, Blob const&, void*)() const
000000000024c6a8 t gfxCmdCopyBuffer(VkBuffer_T*, VkBuffer_T*, unsigned int, VkBufferCopy const*)::$_6::__invoke(VkCommandBuffer_T*, Blob const&)
000000000024c6d8 t gfxCmdCopyBuffer(VkBuffer_T*, VkBuffer_T*, unsigned int, VkBufferCopy const*)::$_6::operator()(VkCommandBuffer_T*, Blob const&) const
000000000024c690 t gfxCmdCopyBuffer(VkBuffer_T*, VkBuffer_T*, unsigned int, VkBufferCopy const*)::$_6::operator void (*)(VkCommandBuffer_T*, Blob const&)() const
000000000013f5d8 t vfsDiskWriteFile(char const*, VfsFlags, Blob const&)::$_11::operator()(char const*, char const*) const
000000000013f7a0 t vfsDiskWriteFile(char const*, VfsFlags, Blob const&)::$_12::operator()(char const*, VfsFlags, Blob const&) const
00000000002bdbdc d stbi__shiftsigned(unsigned int, int, int)::shift_table
00000000002bdbb8 d stbi__shiftsigned(unsigned int, int, int)::mul_table
00000000000f2cb0 t assetLoadObjRemote(Handle<AssetHandleT>, AssetTypeManager const&, AssetLoadParams const&, unsigned int, bool*)::$_6::__invoke(Handle<AssetHandleT>, AssetResult const&, void*)
00000000000f2cec t assetLoadObjRemote(Handle<AssetHandleT>, AssetTypeManager const&, AssetLoadParams const&, unsigned int, bool*)::$_6::operator()(Handle<AssetHandleT>, AssetResult const&, void*) const
00000000000f2c98 t assetLoadObjRemote(Handle<AssetHandleT>, AssetTypeManager const&, AssetLoadParams const&, unsigned int, bool*)::$_6::operator void (*)(Handle<AssetHandleT>, AssetResult const&, void*)() const
000000000013b75c t serverPeerThreadFn(void*)::$_3::operator()(RemoteCommandDesc const&) const
000000000013f0e4 t vfsDiskResolvePath(char*, unsigned int, char const*, VfsFlags)::$_3::operator()(VfsMountPoint const&) const
0000000000129054 t modelCreateMaterial(unsigned int*, unsigned int*, cgltf_material*, char const*, Allocator*)::$_7::operator()(cgltf_texture*, ModelMaterialTexture*, char const*, HashMurmur32Incremental&) const
000000000012b470 t modelHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6::operator()(ModelLoadRequest const&) const
000000000013b820 t remoteClientThreadFn(void*)::$_4::operator()(RemoteCommandDesc const&) const
00000000002bdb98 d stbi__parse_png_file(stbi__png*, int, int)::invalid_chunk
000000000009b00b r stbi__process_marker(stbi__jpeg*, int)::tag
000000000009b010 r stbi__process_marker(stbi__jpeg*, int)::tag
000000000024c804 t gfxCmdPipelineBarrier(unsigned int, unsigned int, unsigned int, unsigned int, VkMemoryBarrier const*, unsigned int, VkBufferMemoryBarrier const*, unsigned int, VkImageMemoryBarrier const*)::$_7::__invoke(VkCommandBuffer_T*, Blob const&)
000000000024c834 t gfxCmdPipelineBarrier(unsigned int, unsigned int, unsigned int, unsigned int, VkMemoryBarrier const*, unsigned int, VkBufferMemoryBarrier const*, unsigned int, VkImageMemoryBarrier const*)::$_7::operator()(VkCommandBuffer_T*, Blob const&) const
000000000024c7ec t gfxCmdPipelineBarrier(unsigned int, unsigned int, unsigned int, unsigned int, VkMemoryBarrier const*, unsigned int, VkBufferMemoryBarrier const*, unsigned int, VkImageMemoryBarrier const*)::$_7::operator void (*)(VkCommandBuffer_T*, Blob const&)() const
000000000009abf0 r stbi__check_png_header(stbi__context*)::png_sig
000000000024cab4 t gfxCmdCopyBufferToImage(VkBuffer_T*, VkImage_T*, unsigned int, unsigned int, unsigned int, unsigned int const*)::$_8::__invoke(VkCommandBuffer_T*, Blob const&)
000000000024cae4 t gfxCmdCopyBufferToImage(VkBuffer_T*, VkImage_T*, unsigned int, unsigned int, unsigned int, unsigned int const*)::$_8::operator()(VkCommandBuffer_T*, Blob const&) const
000000000024ca9c t gfxCmdCopyBufferToImage(VkBuffer_T*, VkImage_T*, unsigned int, unsigned int, unsigned int, unsigned int const*)::$_8::operator void (*)(VkCommandBuffer_T*, Blob const&)() const
000000000024cc60 t gfxCreatePipelineLayout(GfxShader const&, Handle<GfxDescriptorSetLayoutT> const*, unsigned int, GfxPushConstantDesc const*, unsigned int, VkPipelineLayout_T**)::$_5::operator()(GfxPipelineLayoutData const&) const
000000000012acf4 t modelGatherDependencies(Model const*, AssetLoadParams const&, MemTempAllocator*, unsigned int*)::$_8::operator()(Array<AssetDependency, 8u>*, AssetLoadParams const&, ModelMaterialTexture const&) const
000000000013f53c t vfsPackageBundleReadFile(char const*, VfsFlags, Allocator*)::$_4::operator()(VfsMountPoint const&) const
000000000013f3c0 t vfsPackageBundleReadFile(char const*, VfsFlags, Allocator*)::$_10::operator()(char const*, VfsFlags, Allocator*) const
00000000000f99c0 t assetImageHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_0::operator()(AssetImageLoadRequest const&) const
000000000013efb8 t vfsMonitorChangesClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_8::operator()(VfsMountPoint const&) const
00000000000f3390 t assetSaveCacheHashDatabase()::$_8::__invoke(char const*, unsigned long, Blob const&, void*)
00000000000f33d0 t assetSaveCacheHashDatabase()::$_8::operator()(char const*, unsigned long, Blob const&, void*) const
00000000000f3378 t assetSaveCacheHashDatabase()::$_8::operator void (*)(char const*, unsigned long, Blob const&, void*)() const
000000000009b016 r stbi__process_frame_header(stbi__jpeg*, int)::rgb
000000000013e9fc t vfsReadFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6::operator()(char const*, VfsRequest*) const
000000000009ad41 r stbi__compute_huffman_codes(stbi__zbuf*)::length_dezigzag
000000000013ed40 t vfsWriteFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_7::operator()(char const*, VfsRequest*) const
000000000024cca8 t gfxSavePipelineBinaryProperties(char const*, VkPipeline_T*)::$_9::__invoke(char const*, unsigned long, Blob const&, void*)
000000000024cce8 t gfxSavePipelineBinaryProperties(char const*, VkPipeline_T*)::$_9::operator()(char const*, unsigned long, Blob const&, void*) const
000000000024cc90 t gfxSavePipelineBinaryProperties(char const*, VkPipeline_T*)::$_9::operator void (*)(char const*, unsigned long, Blob const&, void*)() const
00000000000a3b08 r GetMinimumStepAtDecimalPrecision(int)::min_steps
00000000000f9a7c t assetUpdateImageDescriptorSetCache(Handle<GfxDescriptorSetT>, unsigned int, GfxDescriptorBindingDesc const*)::$_1::operator()(AssetDescriptorUpdateCacheItem const*) const
000000000012e844 t shaderCompileShaderHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_0::operator()(ShaderLoadRequest const&) const
0000000000159284 t JobsSignal::Wait()::$_1::__invoke(int, int)
00000000001592b8 t JobsSignal::Wait()::$_1::operator()(int, int) const
0000000000157c18 t JobsSignal::Wait()::$_1::operator bool (*)(int, int)() const
000000000009ffa2 r ImFontAtlas::GetGlyphRangesThai()::ranges
000000000009d46a r ImFontAtlas::GetGlyphRangesKorean()::ranges
000000000009d464 r ImFontAtlas::GetGlyphRangesDefault()::ranges
000000000009ff90 r ImFontAtlas::GetGlyphRangesCyrillic()::ranges
00000000002bdf8a d ImFontAtlas::GetGlyphRangesJapanese()::base_ranges
00000000002c38ba b ImFontAtlas::GetGlyphRangesJapanese()::full_ranges
000000000009e822 r ImFontAtlas::GetGlyphRangesJapanese()::accumulative_offsets_from_0x4E00
000000000009ffb0 r ImFontAtlas::GetGlyphRangesVietnamese()::ranges
000000000009d47c r ImFontAtlas::GetGlyphRangesChineseFull()::ranges
00000000002bdf72 d ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()::base_ranges
00000000002c1190 b ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()::full_ranges
000000000009d49a r ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()::accumulative_offsets_from_0x4E00
0000000000183570 t ImGuiStorage::BuildSortByKey()::StaticFunc::PairCompareByID(void const*, void const*)
0000000000243d24 t GfxObjectPools::DetectAndReleaseLeaks()::$_1::operator()(char const*, void*, void* const*, unsigned short) const
000000000024e1f0 t VmaBlockVector::SortByFreeSize()::$_0::operator()(VmaDeviceMemoryBlock const*, VmaDeviceMemoryBlock const*) const
0000000000145424 t MemTlsfAllocator::CalculateFragmentation()::GetAllocsData::GetAllocsData()
0000000000145ee0 t MemTlsfAllocator::CalculateFragmentation()::$_1::__invoke(void*, unsigned long, int, void*)
0000000000145f20 t MemTlsfAllocator::CalculateFragmentation()::$_1::operator()(void*, unsigned long, int, void*) const
00000000001454a0 t MemTlsfAllocator::CalculateFragmentation()::$_1::operator void (*)(void*, unsigned long, int, void*)() const
0000000000147280 t MemTlsfAllocator::CalculateFragmentation()::$_2::operator()(MemTlsfAllocator::CalculateFragmentation()::AllocData const&, MemTlsfAllocator::CalculateFragmentation()::AllocData const&) const
00000000002c0cd0 b File::Read(void*, unsigned long)::pagesz
00000000002bdfc0 d ImGui::ColorEdit4(char const*, float*, int)::fmt_table_int
00000000002be020 d ImGui::ColorEdit4(char const*, float*, int)::fmt_table_float
00000000002bdfa0 d ImGui::ColorEdit4(char const*, float*, int)::ids
00000000002bdf70 d ImGui::ShowMetricsWindow(bool*)::root_nodes_only
00000000002c1098 b ImGui::ShowMetricsWindow(bool*)::viewports
00000000001b02a4 t ImGui::ShowMetricsWindow(bool*)::Funcs::GetTableRect(ImGuiTable*, int, int)
00000000001b00c4 t ImGui::ShowMetricsWindow(bool*)::Funcs::GetWindowRect(ImGuiWindow*, int)
00000000001edcf4 t ImGui::TableMergeDrawChannels(ImGuiTable*)::MergeGroup::MergeGroup()
0000000000274fd8 W AppImpl::Initialize()::'lambda'(void*)::operator()(void*) const
0000000000274cc4 W AppImpl::Initialize()::'lambda'(void*)::operator void (*)(void*)() const
0000000000274fb0 W AppImpl::Initialize()::'lambda'(void*)::__invoke(void*)
00000000002be198 V AppImpl::Update(float)::modelMat
00000000002c96c1 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::isClicking
00000000002c96e8 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::panelPosition
00000000002c96c4 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::interpolationUp
00000000002c96d4 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::interpolationDir
00000000002c96e4 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::interpolationFrames
00000000002be118 d ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::overBox
00000000002c96c2 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::isInside
00000000002c96c0 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::isDraging
00000000002c9738 b ImGuizmo::ViewManipulate(float*, float, ImVec2, ImVec2, unsigned int)::panelSize
0000000000272904 t ImGuizmo::DrawCubes(float const*, float const*, float const*, int)::$_0::__invoke(void const*, void const*)
0000000000272934 t ImGuizmo::DrawCubes(float const*, float const*, float const*, int)::$_0::operator()(void const*, void const*) const
000000000026f4e0 t ImGuizmo::DrawCubes(float const*, float const*, float const*, int)::$_0::operator int (*)(void const*, void const*)() const
00000000000ad310 r ImGuizmo::HandleAndDrawLocalBounds(float const*, ImGuizmo::matrix_t*, float const*, ImGuizmo::OPERATION)::AnchorBigRadius
00000000000ad314 r ImGuizmo::HandleAndDrawLocalBounds(float const*, ImGuizmo::matrix_t*, float const*, ImGuizmo::OPERATION)::AnchorSmallRadius
000000000027617c t _private::conInitialize()::$_2::__invoke(int, char const**, char*, unsigned int, void*)
0000000000276224 t _private::conInitialize()::$_3::__invoke(int, char const**, char*, unsigned int, void*)
00000000002761c8 t _private::conInitialize()::$_2::operator()(int, char const**, char*, unsigned int, void*) const
0000000000275fa8 t _private::conInitialize()::$_2::operator bool (*)(int, char const**, char*, unsigned int, void*)() const
0000000000276270 t _private::conInitialize()::$_3::operator()(int, char const**, char*, unsigned int, void*) const
0000000000275fc0 t _private::conInitialize()::$_3::operator bool (*)(int, char const**, char*, unsigned int, void*)() const
00000000002c8c90 b _private::gfxInitialize()::vmaFuncs
00000000002c9098 b _private::imguiInitialize()::iniFilename
000000000026521c t _private::imguiInitialize()::$_0::__invoke(unsigned long, void*)
00000000002652e8 t _private::imguiInitialize()::$_1::__invoke(void*, void*)
000000000026524c t _private::imguiInitialize()::$_0::operator()(unsigned long, void*) const
00000000002628ac t _private::imguiInitialize()::$_0::operator void* (*)(unsigned long, void*)() const
0000000000265318 t _private::imguiInitialize()::$_1::operator()(void*, void*) const
00000000002628c4 t _private::imguiInitialize()::$_1::operator void (*)(void*, void*)() const
00000000000f3160 t _private::assetUpdateCache(float)::$_5::__invoke(unsigned int, void*)
00000000000f3190 t _private::assetUpdateCache(float)::$_5::operator()(unsigned int, void*) const
00000000000f22b8 t _private::assetUpdateCache(float)::$_5::operator void (*)(unsigned int, void*)() const
00000000002be740 b _private::assetInitializeImageManager()::whiteImage
00000000000aef00 r __cxxabiv1::__pointer_to_member_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const::null_ptr_rep
00000000000aef10 r __cxxabiv1::__pointer_to_member_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const::null_ptr_rep
00000000002be1e0 d std::__ndk1::__get_sp_mut(void const*)::muts
00000000002c9bd8 b std::__ndk1::future_category()::__f
00000000002c9938 b std::__ndk1::system_category()::s
00000000002c9928 b std::__ndk1::generic_category()::s
00000000002c9948 b std::__ndk1::__thread_local_data()::__p
0000000000276148 t conExecute(char const*, char*, unsigned int)::$_0::operator()(char const*) const::'lambda'(ConCustomVar const&)::operator()(ConCustomVar const&) const
000000000013ebac t vfsReadFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_6::operator()(char const*, VfsRequest*) const::'lambda'(VfsRequest const&)::operator()(VfsRequest const&) const
000000000013eef0 t vfsWriteFileHandlerClientFn(unsigned int, Blob const&, void*, bool, char const*)::$_7::operator()(char const*, VfsRequest*) const::'lambda'(VfsRequest const&)::operator()(VfsRequest const&) const
000000000024e230 t VmaBlockVector::SortByFreeSize()::$_0::operator()(VmaDeviceMemoryBlock const*, VmaDeviceMemoryBlock const*) const::'lambda'(VmaDeviceMemoryBlock*, VmaDeviceMemoryBlock*)::operator()(VmaDeviceMemoryBlock*, VmaDeviceMemoryBlock*) const
0000000000272654 t operator/=(ImVec2&, float)
0000000000276f9c W operator delete[](void*)
0000000000276fa4 W operator delete[](void*, std::nothrow_t const&)
00000000002770ec W operator delete[](void*, std::align_val_t)
00000000002770f4 W operator delete[](void*, std::align_val_t, std::nothrow_t const&)
0000000000276fac W operator delete[](void*, unsigned long)
00000000002770fc W operator delete[](void*, unsigned long, std::align_val_t)
0000000000276f84 W operator delete(void*)
0000000000276f8c W operator delete(void*, std::nothrow_t const&)
00000000002770d0 W operator delete(void*, std::align_val_t)
00000000002770d8 W operator delete(void*, std::align_val_t, std::nothrow_t const&)
0000000000276f94 W operator delete(void*, unsigned long)
00000000002770e0 W operator delete(void*, unsigned long, std::align_val_t)
00000000001ad740 t operator/(ImVec2 const&, ImVec2 const&)
000000000018156c t operator/(ImVec2 const&, float)
00000000001b4338 t operator-=(ImVec2&, ImVec2 const&)
00000000001d7bb0 t operator-=(ImVec2&, ImVec2 const&)
00000000001f6bd0 t operator-=(ImVec2&, ImVec2 const&)
00000000001a32d0 t operator*=(ImVec2&, float)
0000000000272694 t operator*=(ImVec2&, float)
0000000000181020 t operator-(ImVec2 const&, ImVec2 const&)
00000000001ccf0c t operator-(ImVec2 const&, ImVec2 const&)
00000000001f487c t operator-(ImVec2 const&, ImVec2 const&)
0000000000271a70 t operator-(ImVec2 const&, ImVec2 const&)
0000000000199240 t operator*(ImVec2 const&, ImVec2 const&)
00000000001d3350 t operator*(ImVec2 const&, ImVec2 const&)
0000000000180268 t operator*(ImVec2 const&, float)
00000000001ccebc t operator*(ImVec2 const&, float)
00000000001f6b34 t operator*(ImVec2 const&, float)
00000000002712ac t operator*(ImVec2 const&, float)
00000000001bb6a8 t operator*(ImVec4 const&, ImVec4 const&)
00000000001c8d54 t operator*(ImVec4 const&, ImVec4 const&)
0000000000276f4c W operator new[](unsigned long)
000000000015978c W operator new[](unsigned long, _private::PlacementNewTag, void*)
0000000000276f54 W operator new[](unsigned long, std::nothrow_t const&)
0000000000277098 W operator new[](unsigned long, std::align_val_t)
00000000002770a0 W operator new[](unsigned long, std::align_val_t, std::nothrow_t const&)
0000000000276eb0 W operator new(unsigned long)
00000000001be19c W operator new(unsigned long, ImNewWrapper, void*)
000000000010e344 W operator new(unsigned long, _private::PlacementNewTag, void*)
0000000000276f1c W operator new(unsigned long, std::nothrow_t const&)
0000000000276fb4 W operator new(unsigned long, std::align_val_t)
0000000000277068 W operator new(unsigned long, std::align_val_t, std::nothrow_t const&)
000000000019d508 t operator+=(ImVec2&, ImVec2 const&)
00000000001d77dc t operator+=(ImVec2&, ImVec2 const&)
00000000001f7b8c t operator+=(ImVec2&, ImVec2 const&)
0000000000181514 t operator+(ImVec2 const&, ImVec2 const&)
00000000001cce64 t operator+(ImVec2 const&, ImVec2 const&)
00000000001e6b18 t operator+(ImVec2 const&, ImVec2 const&)
00000000001f4824 t operator+(ImVec2 const&, ImVec2 const&)
0000000000270fd4 t operator+(ImVec2 const&, ImVec2 const&)
00000000000bd3f0 r __FRAME_END__
                 U __android_log_write
                 U __assert2
00000000000ef4b4 t __atexit_handler_wrapper
0000000000276e48 t __clang_call_terminate
00000000002975ac T __cxa_allocate_dependent_exception
0000000000297534 T __cxa_allocate_exception
                 U __cxa_atexit
0000000000297728 T __cxa_begin_catch
0000000000298b60 T __cxa_call_unexpected
0000000000297908 T __cxa_current_exception_type
0000000000297a64 T __cxa_current_primary_exception
00000000002978ac T __cxa_decrement_exception_refcount
00000000002992b8 T __cxa_deleted_virtual
0000000000283354 T __cxa_demangle
00000000002977c4 T __cxa_end_catch
                 U __cxa_finalize
00000000002975e8 T __cxa_free_dependent_exception
0000000000297588 T __cxa_free_exception
000000000029771c T __cxa_get_exception_ptr
0000000000297cd4 T __cxa_get_globals
0000000000297cf8 T __cxa_get_globals_fast
0000000000297f28 T __cxa_guard_abort
0000000000297d1c T __cxa_guard_acquire
0000000000297e78 T __cxa_guard_release
0000000000297a44 T __cxa_increment_exception_refcount
00000000002c9c40 B __cxa_new_handler
00000000002992a0 T __cxa_pure_virtual
0000000000297958 T __cxa_rethrow
0000000000297ae0 T __cxa_rethrow_primary_exception
00000000002be280 D __cxa_terminate_handler
0000000000299048 T __cxa_thread_atexit
                 w __cxa_thread_atexit_impl
00000000002975f0 T __cxa_throw
0000000000297c7c T __cxa_uncaught_exception
0000000000297cac T __cxa_uncaught_exceptions
00000000002be288 D __cxa_unexpected_handler
00000000000f34dc t __cxx_global_var_init
000000000010db2c t __cxx_global_var_init
000000000012b724 t __cxx_global_var_init
000000000012e874 t __cxx_global_var_init
0000000000131cf0 t __cxx_global_var_init
0000000000137fa0 t __cxx_global_var_init
00000000001399e4 t __cxx_global_var_init
000000000013b8e0 t __cxx_global_var_init
000000000013fa44 t __cxx_global_var_init
000000000014dd58 t __cxx_global_var_init
000000000014e720 t __cxx_global_var_init
000000000014f3ec t __cxx_global_var_init
00000000001592e4 t __cxx_global_var_init
0000000000160ce0 t __cxx_global_var_init
000000000016bee0 t __cxx_global_var_init
000000000017534c t __cxx_global_var_init
000000000017d58c t __cxx_global_var_init
000000000017f574 t __cxx_global_var_init
0000000000255c88 t __cxx_global_var_init
0000000000265388 t __cxx_global_var_init
0000000000276368 t __cxx_global_var_init
000000000014c150 t __cxx_global_var_init
0000000000272c68 t __cxx_global_var_init
00000000001c03d8 t __cxx_global_var_init
00000000001e3a58 t __cxx_global_var_init
0000000000272ce0 t __cxx_global_var_init.1
00000000001c0514 t __cxx_global_var_init.104
0000000000272cfc t __cxx_global_var_init.2
0000000000255ca4 t __cxx_global_var_init.267
00000000002a00ac t __deregister_frame
00000000002b0800 d __dso_handle
00000000002b0800 d __dso_handle_const
000000000029a304 T __dynamic_cast
000000000029b62c W __emutls_get_address
000000000009b0a0 r __emutls_t._ZL10gStbIAlloc
000000000009bf88 r __emutls_t._ZL14mco_current_co
000000000009bf80 r __emutls_t._ZL15gJobsThreadData
000000000009b0a8 r __emutls_t._ZL22stbi__g_failure_reason
000000000009c9d0 r __emutls_t._ZL7gJniEnv
00000000000aee18 r __emutls_t._ZN10__cxxabiv112_GLOBAL__N_15dtorsE
000000000029b7ec t __emutls_unregister_key
00000000002bddb0 d __emutls_v._ZGVZL17FiberProtectorCtxvE17fiberProtectorCtx
00000000002bdd30 d __emutls_v._ZGVZL17MemGetTempContextvE7tempCtx
00000000002bdd70 d __emutls_v._ZGVZL9RandomCtxvE9randomCtx
00000000002bdc08 d __emutls_v._ZL10gStbIAlloc
00000000002bddf0 d __emutls_v._ZL14mco_current_co
00000000002bddd0 d __emutls_v._ZL15gJobsThreadData
00000000002be0d8 d __emutls_v._ZL20gCmdBufferThreadData
00000000002bdce8 d __emutls_v._ZL22stbi__g_failure_reason
00000000002bdc68 d __emutls_v._ZL24stbi__de_iphone_flag_set
00000000002bdc88 d __emutls_v._ZL26stbi__de_iphone_flag_local
00000000002bdca8 d __emutls_v._ZL31stbi__unpremultiply_on_load_set
00000000002bdcc8 d __emutls_v._ZL33stbi__unpremultiply_on_load_local
00000000002bdc28 d __emutls_v._ZL33stbi__vertically_flip_on_load_set
00000000002bdc48 d __emutls_v._ZL35stbi__vertically_flip_on_load_local
00000000002bdf38 d __emutls_v._ZL7gJniEnv
00000000002be298 d __emutls_v._ZN10__cxxabiv112_GLOBAL__N_111dtors_aliveE
00000000002be2b8 d __emutls_v._ZN10__cxxabiv112_GLOBAL__N_15dtorsE
00000000002bdd90 d __emutls_v._ZZL17FiberProtectorCtxvE17fiberProtectorCtx
00000000002bdd10 d __emutls_v._ZZL17MemGetTempContextvE7tempCtx
00000000002bdd50 d __emutls_v._ZZL9RandomCtxvE9randomCtx
00000000002be260 d __emutls_v._ZZN10__cxxabiv112_GLOBAL__N_19__globalsEvE10eh_globals
00000000002be0f8 d __emutls_v.__tls_guard
                 U __errno
0000000000298378 T __gxx_personality_v0
00000000002a00b4 t __libunwind_Registers_arm64_jumpto
                 U __memmove_chk
00000000000ef494 t __on_dlclose
00000000000ef4ac t __on_dlclose_late
                 U __register_atfork
00000000002a00a4 t __register_frame
                 U __sF
                 U __stack_chk_fail
                 U __strlen_chk
00000000002532d4 t __tls_init
000000000029c1e0 t __unw_add_dynamic_fde
000000000029bf98 t __unw_get_fpreg
000000000029c078 t __unw_get_proc_info
000000000029c0e0 t __unw_get_proc_name
000000000029be54 t __unw_get_reg
00000000002a0144 t __unw_getcontext
000000000029bdac t __unw_init_local
000000000029c110 t __unw_is_fpreg
000000000029c148 t __unw_is_signal_frame
000000000029c170 t __unw_iterate_dwarf_unwind_cache
000000000029c138 t __unw_regname
000000000029c504 t __unw_remove_dynamic_fde
000000000029c0b8 t __unw_resume
000000000029c000 t __unw_set_fpreg
000000000029bec0 t __unw_set_reg
000000000029c068 t __unw_step
                 U __vsnprintf_chk
0000000000154a74 t _mco_switch
0000000000154adc t _mco_wrap_main
                 U abort
0000000000297fcc t abort_message
                 U abs
                 U accept
                 U acosf
000000000017539c T android_getCpuFamily
00000000001755b8 T android_getCpuFeatures
                 U android_set_abort_message
                 U asinf
                 U atan2f
00000000000ef4c8 t atexit
                 U atof
                 U atoi
                 U atoll
                 U bind
                 U calloc
0000000000114f54 T cgltf_accessor_read_float
0000000000115940 T cgltf_accessor_read_index
0000000000115788 T cgltf_accessor_read_uint
00000000001153b8 T cgltf_accessor_unpack_floats
0000000000112944 T cgltf_copy_extras_json
0000000000110480 T cgltf_decode_string
000000000011083c T cgltf_decode_uri
0000000000112a4c T cgltf_free
0000000000110240 T cgltf_load_buffer_base64
0000000000110918 T cgltf_load_buffers
0000000000114a14 T cgltf_node_transform_local
0000000000114d08 T cgltf_node_transform_world
0000000000115600 T cgltf_num_components
000000000010f7d8 T cgltf_parse
000000000010feb0 T cgltf_parse_file
0000000000110dfc T cgltf_validate
000000000015e4dc T cj5_get_array_elem
000000000015e620 T cj5_get_array_elem_incremental
000000000015d24c T cj5_get_bool
000000000015c958 T cj5_get_double
000000000015cd3c T cj5_get_float
000000000015cd6c T cj5_get_int
000000000015d114 T cj5_get_int64
000000000015c7fc T cj5_get_string
000000000015cea4 T cj5_get_uint
000000000015cfdc T cj5_get_uint64
000000000015c04c T cj5_parse
000000000015abf8 T cj5_parse_with_factory
000000000015c764 T cj5_seek
000000000015c5e4 T cj5_seek_hash
000000000015c1b4 T cj5_seek_recursive
000000000015e204 T cj5_seekget_array_bool
000000000015d6dc T cj5_seekget_array_double
000000000015d840 T cj5_seekget_array_float
000000000015dc74 T cj5_seekget_array_int
000000000015d9a4 T cj5_seekget_array_int16
000000000015e0a0 T cj5_seekget_array_int64
000000000015e370 T cj5_seekget_array_string
000000000015ddd8 T cj5_seekget_array_uint
000000000015db0c T cj5_seekget_array_uint16
000000000015df3c T cj5_seekget_array_uint64
000000000015d5fc T cj5_seekget_bool
000000000015d39c T cj5_seekget_double
000000000015d404 T cj5_seekget_float
000000000015d46c T cj5_seekget_int
000000000015d598 T cj5_seekget_int64
000000000015d668 T cj5_seekget_string
000000000015d4d0 T cj5_seekget_uint
000000000015d534 T cj5_seekget_uint64
                 U clock_gettime
                 U close
                 U closelog
                 U connect
                 U cosf
                 U dl_iterate_phdr
                 U dladdr
                 U dlclose
                 U dlerror
                 U dlopen
                 U dlsym
000000000029b824 t emutls_init
00000000002c9e98 b emutls_init_once.once
00000000002c9e90 b emutls_key_created
000000000029b860 t emutls_key_destructor
00000000002c9ea8 b emutls_mutex
00000000002c9ea0 b emutls_num_object
00000000002c9e94 b emutls_pthread_key
                 U expf
                 U fclose
                 U fflush
                 U fmodf
                 U fopen
                 U fprintf
                 U fputc
                 U fread
                 U free
                 U freeaddrinfo
                 U fseek
                 U fstat
                 U ftell
                 U fwrite
00000000002c8d80 B gImGui
                 U getaddrinfo
                 U getenv
                 U gettid
                 U inet_ntop
00000000000ad390 V kColorBlack
000000000009cbb0 V kColorGreen
000000000009cbb4 V kColorRed
000000000009cbf4 V kColorWhite
000000000009cbf0 V kColorYellow
00000000000ad37c V kFloat2Zero
000000000009b7fc V kFloat3UnitX
000000000009b7f0 V kFloat3UnitY
000000000009b808 V kFloat3UnitZ
000000000009b814 V kFloat3Zero
00000000000a3f54 V kMat4Ident
00000000000ad36c V kQuatIdent
000000000009b728 V kTransform3DIdent
                 U ldexpf
                 U listen
                 U log
                 U logf
                 U lseek
                 U madvise
                 U malloc
00000000001550e8 T mco_create
0000000000154ae8 T mco_desc_init
0000000000155238 T mco_destroy
0000000000155988 T mco_get_bytes_stored
00000000001559b8 T mco_get_storage_size
0000000000155660 T mco_get_user_data
0000000000154ca8 T mco_init
000000000015588c T mco_peek
00000000001557a4 T mco_pop
0000000000155690 T mco_push
0000000000155a34 T mco_result_description
00000000001552f8 T mco_resume
00000000001559e8 T mco_running
0000000000155630 T mco_status
0000000000155030 T mco_uninit
000000000015547c T mco_yield
                 U memchr
                 U memcmp
                 U memcpy
                 U memmove
                 U memset
                 U mkdir
                 U mktemp
                 U mmap
                 U mprotect
                 U munmap
                 U nanosleep
00000000000002c8 r ndk_build_number
0000000000000288 r ndk_version
0000000000000270 r note_android_ident
0000000000000284 r note_data
0000000000000308 r note_end
000000000000027c r note_name
                 U open
                 U openlog
                 U pipe
                 U posix_memalign
                 U pow
                 U powf
                 U prctl
                 U printf
00000000000ef4e8 t pthread_atfork
                 U pthread_attr_destroy
                 U pthread_attr_init
                 U pthread_attr_setdetachstate
                 U pthread_attr_setstacksize
                 U pthread_cond_broadcast
                 U pthread_cond_destroy
                 U pthread_cond_init
                 U pthread_cond_signal
                 U pthread_cond_timedwait
                 U pthread_cond_timedwait_monotonic_np
                 U pthread_cond_wait
                 U pthread_create
                 U pthread_detach
                 U pthread_equal
                 U pthread_getspecific
                 U pthread_join
                 U pthread_key_create
                 U pthread_key_delete
                 U pthread_mutex_destroy
                 U pthread_mutex_init
                 U pthread_mutex_lock
                 U pthread_mutex_trylock
                 U pthread_mutex_unlock
                 U pthread_mutexattr_destroy
                 U pthread_mutexattr_init
                 U pthread_mutexattr_settype
                 U pthread_once
                 U pthread_rwlock_rdlock
                 U pthread_rwlock_unlock
                 U pthread_rwlock_wrlock
                 U pthread_self
                 U pthread_setschedparam
                 U pthread_setspecific
                 U puts
                 U qsort
                 U raise
                 U read
                 U realloc
                 U realpath
                 U recv
                 U rename
000000000016a3a0 T sargs_boolean
0000000000169a38 T sargs_create
0000000000169d9c T sargs_destroy
000000000016a324 T sargs_equals
000000000016a1b8 T sargs_exists
0000000000169f28 T sargs_find
0000000000169f0c T sargs_isvalid
000000000016a088 T sargs_key_at
000000000016a040 T sargs_num_args
000000000016a220 T sargs_value
000000000016a120 T sargs_value_at
000000000016a28c T sargs_value_def
                 U sched_get_priority_max
                 U sched_get_priority_min
                 U sched_yield
                 U sem_destroy
                 U sem_init
                 U sem_post
                 U sem_timedwait_monotonic_np
                 U sem_wait
                 U send
                 U setenv
                 U shutdown
                 U sincosf
                 U sinf
                 U snprintf
                 U socket
                 U sscanf
                 U stat
000000000016c884 T stbsp_set_separators
00000000001708f4 T stbsp_snprintf
0000000000170550 T stbsp_sprintf
0000000000170614 T stbsp_vsnprintf
00000000001709b0 T stbsp_vsprintf
000000000016c8b0 T stbsp_vsprintfcb
                 U stdout
                 U strchr
                 U strcmp
                 U strcpy
                 U strcspn
                 U strerror_r
                 U strlen
                 U strncmp
                 U strncpy
                 U strrchr
                 U strstr
                 U strtod
                 U strtof
                 U strtol
                 U strtold
                 U strtoll
                 U strtoul
                 U strtoull
                 U swprintf
                 U syscall
                 U sysconf
                 U syslog
                 U tanf
                 U time
0000000000141bf4 T tlsf_add_pool
0000000000141bcc T tlsf_align_size
0000000000141bec T tlsf_alloc_overhead
0000000000141a00 T tlsf_block_size
0000000000141bdc T tlsf_block_size_max
0000000000141bd4 T tlsf_block_size_min
0000000000141328 T tlsf_check
0000000000141a5c T tlsf_check_pool
00000000001422c0 T tlsf_create
00000000001423d4 T tlsf_create_with_pool
0000000000142448 T tlsf_destroy
0000000000142904 T tlsf_free
0000000000142458 T tlsf_get_pool
0000000000142488 T tlsf_malloc
0000000000142680 T tlsf_memalign
0000000000141be4 T tlsf_pool_overhead
0000000000142b08 T tlsf_realloc
0000000000141ec8 T tlsf_remove_pool
0000000000141bc4 T tlsf_size
000000000014182c T tlsf_walk_pool
                 U unsetenv
000000000029bf98 t unw_get_fpreg
000000000029c078 t unw_get_proc_info
000000000029c0e0 t unw_get_proc_name
000000000029be54 t unw_get_reg
00000000002a0144 t unw_getcontext
000000000029bdac t unw_init_local
000000000029c110 t unw_is_fpreg
000000000029c148 t unw_is_signal_frame
000000000029c170 t unw_iterate_dwarf_unwind_cache
00000000002be2d8 d unw_local_addr_space
000000000029c138 t unw_regname
000000000029c0b8 t unw_resume
000000000029c000 t unw_set_fpreg
000000000029bec0 t unw_set_reg
000000000029c068 t unw_step
000000000029b9c0 t unwind_phase2
000000000029bb6c t unwind_phase2_forced
                 U vasprintf
                 U vfprintf
00000000002c6f00 b vkAcquireDrmDisplayEXT
00000000002c7948 b vkAcquireNextImage2KHR
00000000002c7710 b vkAcquireNextImageKHR
00000000002c7340 b vkAcquirePerformanceConfigurationINTEL
00000000002c7648 b vkAcquireProfilingLockKHR
00000000002c77c8 b vkAcquireWinrtDisplayNV
00000000002c6828 b vkAllocateCommandBuffers
00000000002c6830 b vkAllocateDescriptorSets
00000000002c6838 b vkAllocateMemory
00000000002c6840 b vkBeginCommandBuffer
00000000002c7888 b vkBindAccelerationStructureMemoryNV
00000000002c6848 b vkBindBufferMemory
00000000002c6c60 b vkBindBufferMemory2
00000000002c7410 b vkBindBufferMemory2KHR
00000000002c6850 b vkBindImageMemory
00000000002c6c68 b vkBindImageMemory2
00000000002c7418 b vkBindImageMemory2KHR
00000000002c7860 b vkBindOpticalFlowSessionImageNV
00000000002c7388 b vkBuildAccelerationStructuresKHR
00000000002c71f8 b vkBuildMicromapsEXT
00000000002c6f30 b vkCmdBeginConditionalRenderingEXT
00000000002c6f80 b vkCmdBeginDebugUtilsLabelEXT
00000000002c6858 b vkCmdBeginQuery
00000000002c72c0 b vkCmdBeginQueryIndexedEXT
00000000002c6860 b vkCmdBeginRenderPass
00000000002c6d38 b vkCmdBeginRenderPass2
00000000002c7468 b vkCmdBeginRenderPass2KHR
00000000002c6da0 b vkCmdBeginRendering
00000000002c7538 b vkCmdBeginRenderingKHR
00000000002c72c8 b vkCmdBeginTransformFeedbackEXT
00000000002c6868 b vkCmdBindDescriptorSets
00000000002c6870 b vkCmdBindIndexBuffer
00000000002c7328 b vkCmdBindInvocationMaskHUAWEI
00000000002c6878 b vkCmdBindPipeline
00000000002c7800 b vkCmdBindPipelineShaderGroupNV
00000000002c78f0 b vkCmdBindShadingRateImageNV
00000000002c72d0 b vkCmdBindTransformFeedbackBuffersEXT
00000000002c6880 b vkCmdBindVertexBuffers
00000000002c6da8 b vkCmdBindVertexBuffers2
00000000002c7018 b vkCmdBindVertexBuffers2EXT
00000000002c6888 b vkCmdBlitImage
00000000002c6db0 b vkCmdBlitImage2
00000000002c7438 b vkCmdBlitImage2KHR
00000000002c7890 b vkCmdBuildAccelerationStructureNV
00000000002c7390 b vkCmdBuildAccelerationStructuresIndirectKHR
00000000002c7398 b vkCmdBuildAccelerationStructuresKHR
00000000002c7200 b vkCmdBuildMicromapsEXT
00000000002c6890 b vkCmdClearAttachments
00000000002c6898 b vkCmdClearColorImage
00000000002c68a0 b vkCmdClearDepthStencilImage
00000000002c73a0 b vkCmdCopyAccelerationStructureKHR
00000000002c7898 b vkCmdCopyAccelerationStructureNV
00000000002c73a8 b vkCmdCopyAccelerationStructureToMemoryKHR
00000000002c68a8 b vkCmdCopyBuffer
00000000002c6db8 b vkCmdCopyBuffer2
00000000002c7440 b vkCmdCopyBuffer2KHR
00000000002c68b0 b vkCmdCopyBufferToImage
00000000002c6dc0 b vkCmdCopyBufferToImage2
00000000002c7448 b vkCmdCopyBufferToImage2KHR
00000000002c68b8 b vkCmdCopyImage
00000000002c6dc8 b vkCmdCopyImage2
00000000002c7450 b vkCmdCopyImage2KHR
00000000002c68c0 b vkCmdCopyImageToBuffer
00000000002c6dd0 b vkCmdCopyImageToBuffer2
00000000002c7458 b vkCmdCopyImageToBuffer2KHR
00000000002c73b0 b vkCmdCopyMemoryToAccelerationStructureKHR
00000000002c7208 b vkCmdCopyMemoryToMicromapEXT
00000000002c7210 b vkCmdCopyMicromapEXT
00000000002c7218 b vkCmdCopyMicromapToMemoryEXT
00000000002c68c8 b vkCmdCopyQueryPoolResults
00000000002c7790 b vkCmdCuLaunchKernelNVX
00000000002c6f40 b vkCmdDebugMarkerBeginEXT
00000000002c6f48 b vkCmdDebugMarkerEndEXT
00000000002c6f50 b vkCmdDebugMarkerInsertEXT
00000000002c68d0 b vkCmdDispatch
00000000002c6c70 b vkCmdDispatchBase
00000000002c74c8 b vkCmdDispatchBaseKHR
00000000002c68d8 b vkCmdDispatchIndirect
00000000002c68e0 b vkCmdDraw
00000000002c68e8 b vkCmdDrawIndexed
00000000002c68f0 b vkCmdDrawIndexedIndirect
00000000002c6d40 b vkCmdDrawIndexedIndirectCount
00000000002c6ed8 b vkCmdDrawIndexedIndirectCountAMD
00000000002c7528 b vkCmdDrawIndexedIndirectCountKHR
00000000002c68f8 b vkCmdDrawIndirect
00000000002c72d8 b vkCmdDrawIndirectByteCountEXT
00000000002c6d48 b vkCmdDrawIndirectCount
00000000002c6ee0 b vkCmdDrawIndirectCountAMD
00000000002c7530 b vkCmdDrawIndirectCountKHR
00000000002c71d0 b vkCmdDrawMeshTasksEXT
00000000002c71d8 b vkCmdDrawMeshTasksIndirectCountEXT
00000000002c7848 b vkCmdDrawMeshTasksIndirectCountNV
00000000002c71e0 b vkCmdDrawMeshTasksIndirectEXT
00000000002c7850 b vkCmdDrawMeshTasksIndirectNV
00000000002c7858 b vkCmdDrawMeshTasksNV
00000000002c71e8 b vkCmdDrawMultiEXT
00000000002c71f0 b vkCmdDrawMultiIndexedEXT
00000000002c6f38 b vkCmdEndConditionalRenderingEXT
00000000002c6f88 b vkCmdEndDebugUtilsLabelEXT
00000000002c6900 b vkCmdEndQuery
00000000002c72e0 b vkCmdEndQueryIndexedEXT
00000000002c6908 b vkCmdEndRenderPass
00000000002c6d50 b vkCmdEndRenderPass2
00000000002c7470 b vkCmdEndRenderPass2KHR
00000000002c6dd8 b vkCmdEndRendering
00000000002c7540 b vkCmdEndRenderingKHR
00000000002c72e8 b vkCmdEndTransformFeedbackEXT
00000000002c6910 b vkCmdExecuteCommands
00000000002c7808 b vkCmdExecuteGeneratedCommandsNV
00000000002c6918 b vkCmdFillBuffer
00000000002c6f90 b vkCmdInsertDebugUtilsLabelEXT
00000000002c6920 b vkCmdNextSubpass
00000000002c6d58 b vkCmdNextSubpass2
00000000002c7478 b vkCmdNextSubpass2KHR
00000000002c7868 b vkCmdOpticalFlowExecuteNV
00000000002c6928 b vkCmdPipelineBarrier
00000000002c6de0 b vkCmdPipelineBarrier2
00000000002c7738 b vkCmdPipelineBarrier2KHR
00000000002c7810 b vkCmdPreprocessGeneratedCommandsNV
00000000002c6930 b vkCmdPushConstants
00000000002c7688 b vkCmdPushDescriptorSetKHR
00000000002c7928 b vkCmdPushDescriptorSetWithTemplateKHR
00000000002c6938 b vkCmdResetEvent
00000000002c6de8 b vkCmdResetEvent2
00000000002c7740 b vkCmdResetEvent2KHR
00000000002c6940 b vkCmdResetQueryPool
00000000002c6948 b vkCmdResolveImage
00000000002c6df0 b vkCmdResolveImage2
00000000002c7460 b vkCmdResolveImage2KHR
00000000002c70a0 b vkCmdSetAlphaToCoverageEnableEXT
00000000002c70a8 b vkCmdSetAlphaToOneEnableEXT
00000000002c6950 b vkCmdSetBlendConstants
00000000002c77f0 b vkCmdSetCheckpointNV
00000000002c78f8 b vkCmdSetCoarseSampleOrderNV
00000000002c70b0 b vkCmdSetColorBlendAdvancedEXT
00000000002c70b8 b vkCmdSetColorBlendEnableEXT
00000000002c70c0 b vkCmdSetColorBlendEquationEXT
00000000002c6f28 b vkCmdSetColorWriteEnableEXT
00000000002c70c8 b vkCmdSetColorWriteMaskEXT
00000000002c70d0 b vkCmdSetConservativeRasterizationModeEXT
00000000002c70d8 b vkCmdSetCoverageModulationModeNV
00000000002c70e0 b vkCmdSetCoverageModulationTableEnableNV
00000000002c70e8 b vkCmdSetCoverageModulationTableNV
00000000002c70f0 b vkCmdSetCoverageReductionModeNV
00000000002c70f8 b vkCmdSetCoverageToColorEnableNV
00000000002c7100 b vkCmdSetCoverageToColorLocationNV
00000000002c6df8 b vkCmdSetCullMode
00000000002c7020 b vkCmdSetCullModeEXT
00000000002c6958 b vkCmdSetDepthBias
00000000002c6e00 b vkCmdSetDepthBiasEnable
00000000002c7078 b vkCmdSetDepthBiasEnableEXT
00000000002c6960 b vkCmdSetDepthBounds
00000000002c6e08 b vkCmdSetDepthBoundsTestEnable
00000000002c7028 b vkCmdSetDepthBoundsTestEnableEXT
00000000002c7108 b vkCmdSetDepthClampEnableEXT
00000000002c7110 b vkCmdSetDepthClipEnableEXT
00000000002c7118 b vkCmdSetDepthClipNegativeOneToOneEXT
00000000002c6e10 b vkCmdSetDepthCompareOp
00000000002c7030 b vkCmdSetDepthCompareOpEXT
00000000002c6e18 b vkCmdSetDepthTestEnable
00000000002c7038 b vkCmdSetDepthTestEnableEXT
00000000002c6e20 b vkCmdSetDepthWriteEnable
00000000002c7040 b vkCmdSetDepthWriteEnableEXT
00000000002c6c78 b vkCmdSetDeviceMask
00000000002c74d0 b vkCmdSetDeviceMaskKHR
00000000002c6fe8 b vkCmdSetDiscardRectangleEXT
00000000002c6968 b vkCmdSetEvent
00000000002c6e28 b vkCmdSetEvent2
00000000002c7748 b vkCmdSetEvent2KHR
00000000002c78e8 b vkCmdSetExclusiveScissorNV
00000000002c7120 b vkCmdSetExtraPrimitiveOverestimationSizeEXT
00000000002c7840 b vkCmdSetFragmentShadingRateEnumNV
00000000002c7590 b vkCmdSetFragmentShadingRateKHR
00000000002c6e30 b vkCmdSetFrontFace
00000000002c7048 b vkCmdSetFrontFaceEXT
00000000002c7128 b vkCmdSetLineRasterizationModeEXT
00000000002c71c8 b vkCmdSetLineStippleEXT
00000000002c7130 b vkCmdSetLineStippleEnableEXT
00000000002c6970 b vkCmdSetLineWidth
00000000002c7080 b vkCmdSetLogicOpEXT
00000000002c7138 b vkCmdSetLogicOpEnableEXT
00000000002c7088 b vkCmdSetPatchControlPointsEXT
00000000002c7348 b vkCmdSetPerformanceMarkerINTEL
00000000002c7350 b vkCmdSetPerformanceOverrideINTEL
00000000002c7358 b vkCmdSetPerformanceStreamMarkerINTEL
00000000002c7140 b vkCmdSetPolygonModeEXT
00000000002c6e38 b vkCmdSetPrimitiveRestartEnable
00000000002c7090 b vkCmdSetPrimitiveRestartEnableEXT
00000000002c6e40 b vkCmdSetPrimitiveTopology
00000000002c7050 b vkCmdSetPrimitiveTopologyEXT
00000000002c7148 b vkCmdSetProvokingVertexModeEXT
00000000002c7150 b vkCmdSetRasterizationSamplesEXT
00000000002c7158 b vkCmdSetRasterizationStreamEXT
00000000002c6e48 b vkCmdSetRasterizerDiscardEnable
00000000002c7098 b vkCmdSetRasterizerDiscardEnableEXT
00000000002c7698 b vkCmdSetRayTracingPipelineStackSizeKHR
00000000002c7160 b vkCmdSetRepresentativeFragmentTestEnableNV
00000000002c7298 b vkCmdSetSampleLocationsEXT
00000000002c7168 b vkCmdSetSampleLocationsEnableEXT
00000000002c7170 b vkCmdSetSampleMaskEXT
00000000002c6978 b vkCmdSetScissor
00000000002c6e50 b vkCmdSetScissorWithCount
00000000002c7058 b vkCmdSetScissorWithCountEXT
00000000002c7178 b vkCmdSetShadingRateImageEnableNV
00000000002c6980 b vkCmdSetStencilCompareMask
00000000002c6e58 b vkCmdSetStencilOp
00000000002c7060 b vkCmdSetStencilOpEXT
00000000002c6988 b vkCmdSetStencilReference
00000000002c6e60 b vkCmdSetStencilTestEnable
00000000002c7068 b vkCmdSetStencilTestEnableEXT
00000000002c6990 b vkCmdSetStencilWriteMask
00000000002c7180 b vkCmdSetTessellationDomainOriginEXT
00000000002c7310 b vkCmdSetVertexInputEXT
00000000002c6998 b vkCmdSetViewport
00000000002c7900 b vkCmdSetViewportShadingRatePaletteNV
00000000002c7188 b vkCmdSetViewportSwizzleNV
00000000002c7190 b vkCmdSetViewportWScalingEnableNV
00000000002c77d8 b vkCmdSetViewportWScalingNV
00000000002c6e68 b vkCmdSetViewportWithCount
00000000002c7070 b vkCmdSetViewportWithCountEXT
00000000002c7330 b vkCmdSubpassShadingHUAWEI
00000000002c7690 b vkCmdTraceRaysIndirect2KHR
00000000002c76a0 b vkCmdTraceRaysIndirectKHR
00000000002c76a8 b vkCmdTraceRaysKHR
00000000002c78a0 b vkCmdTraceRaysNV
00000000002c69a0 b vkCmdUpdateBuffer
00000000002c69a8 b vkCmdWaitEvents
00000000002c6e70 b vkCmdWaitEvents2
00000000002c7750 b vkCmdWaitEvents2KHR
00000000002c73b8 b vkCmdWriteAccelerationStructuresPropertiesKHR
00000000002c78a8 b vkCmdWriteAccelerationStructuresPropertiesNV
00000000002c7768 b vkCmdWriteBufferMarker2AMD
00000000002c6ec8 b vkCmdWriteBufferMarkerAMD
00000000002c7220 b vkCmdWriteMicromapsPropertiesEXT
00000000002c69b0 b vkCmdWriteTimestamp
00000000002c6e78 b vkCmdWriteTimestamp2
00000000002c7758 b vkCmdWriteTimestamp2KHR
00000000002c78b0 b vkCompileDeferredNV
00000000002c73c0 b vkCopyAccelerationStructureKHR
00000000002c73c8 b vkCopyAccelerationStructureToMemoryKHR
00000000002c73d0 b vkCopyMemoryToAccelerationStructureKHR
00000000002c7228 b vkCopyMemoryToMicromapEXT
00000000002c7230 b vkCopyMicromapEXT
00000000002c7238 b vkCopyMicromapToMemoryEXT
00000000002c73d8 b vkCreateAccelerationStructureKHR
00000000002c78b8 b vkCreateAccelerationStructureNV
00000000002c7408 b vkCreateAndroidSurfaceKHR
00000000002c69b8 b vkCreateBuffer
00000000002c69c0 b vkCreateBufferView
00000000002c69c8 b vkCreateCommandPool
00000000002c69d0 b vkCreateComputePipelines
00000000002c7798 b vkCreateCuFunctionNVX
00000000002c77a0 b vkCreateCuModuleNVX
00000000002c6f68 b vkCreateDebugReportCallbackEXT
00000000002c6f98 b vkCreateDebugUtilsMessengerEXT
00000000002c7488 b vkCreateDeferredOperationKHR
00000000002c69d8 b vkCreateDescriptorPool
00000000002c69e0 b vkCreateDescriptorSetLayout
00000000002c6c80 b vkCreateDescriptorUpdateTemplate
00000000002c74b0 b vkCreateDescriptorUpdateTemplateKHR
00000000002c69e8 b vkCreateDevice
00000000002c74e8 b vkCreateDisplayModeKHR
00000000002c74f0 b vkCreateDisplayPlaneSurfaceKHR
00000000002c69f0 b vkCreateEvent
00000000002c69f8 b vkCreateFence
00000000002c6a00 b vkCreateFramebuffer
00000000002c6a08 b vkCreateGraphicsPipelines
00000000002c71a8 b vkCreateHeadlessSurfaceEXT
00000000002c6a10 b vkCreateImage
00000000002c6a18 b vkCreateImageView
00000000002c7818 b vkCreateIndirectCommandsLayoutNV
00000000002c6810 b vkCreateInstance
00000000002c7240 b vkCreateMicromapEXT
00000000002c7870 b vkCreateOpticalFlowSessionNV
00000000002c6a20 b vkCreatePipelineCache
00000000002c6a28 b vkCreatePipelineLayout
00000000002c6e80 b vkCreatePrivateDataSlot
00000000002c7278 b vkCreatePrivateDataSlotEXT
00000000002c6a30 b vkCreateQueryPool
00000000002c76b0 b vkCreateRayTracingPipelinesKHR
00000000002c78c0 b vkCreateRayTracingPipelinesNV
00000000002c6a38 b vkCreateRenderPass
00000000002c6d60 b vkCreateRenderPass2
00000000002c7480 b vkCreateRenderPass2KHR
00000000002c6a40 b vkCreateSampler
00000000002c6c88 b vkCreateSamplerYcbcrConversion
00000000002c76d0 b vkCreateSamplerYcbcrConversionKHR
00000000002c6a48 b vkCreateSemaphore
00000000002c6a50 b vkCreateShaderModule
00000000002c7520 b vkCreateSharedSwapchainsKHR
00000000002c7718 b vkCreateSwapchainKHR
00000000002c72f0 b vkCreateValidationCacheEXT
00000000002c6f58 b vkDebugMarkerSetObjectNameEXT
00000000002c6f60 b vkDebugMarkerSetObjectTagEXT
00000000002c6f70 b vkDebugReportMessageEXT
00000000002c7490 b vkDeferredOperationJoinKHR
00000000002c73e0 b vkDestroyAccelerationStructureKHR
00000000002c78c8 b vkDestroyAccelerationStructureNV
00000000002c6a58 b vkDestroyBuffer
00000000002c6a60 b vkDestroyBufferView
00000000002c6a68 b vkDestroyCommandPool
00000000002c77a8 b vkDestroyCuFunctionNVX
00000000002c77b0 b vkDestroyCuModuleNVX
00000000002c6f78 b vkDestroyDebugReportCallbackEXT
00000000002c6fa0 b vkDestroyDebugUtilsMessengerEXT
00000000002c7498 b vkDestroyDeferredOperationKHR
00000000002c6a70 b vkDestroyDescriptorPool
00000000002c6a78 b vkDestroyDescriptorSetLayout
00000000002c6c90 b vkDestroyDescriptorUpdateTemplate
00000000002c74b8 b vkDestroyDescriptorUpdateTemplateKHR
00000000002c6a80 b vkDestroyDevice
00000000002c6a88 b vkDestroyEvent
00000000002c6a90 b vkDestroyFence
00000000002c6a98 b vkDestroyFramebuffer
00000000002c6aa0 b vkDestroyImage
00000000002c6aa8 b vkDestroyImageView
00000000002c7820 b vkDestroyIndirectCommandsLayoutNV
00000000002c6ab0 b vkDestroyInstance
00000000002c7248 b vkDestroyMicromapEXT
00000000002c7878 b vkDestroyOpticalFlowSessionNV
00000000002c6ab8 b vkDestroyPipeline
00000000002c6ac0 b vkDestroyPipelineCache
00000000002c6ac8 b vkDestroyPipelineLayout
00000000002c6e88 b vkDestroyPrivateDataSlot
00000000002c7280 b vkDestroyPrivateDataSlotEXT
00000000002c6ad0 b vkDestroyQueryPool
00000000002c6ad8 b vkDestroyRenderPass
00000000002c6ae0 b vkDestroySampler
00000000002c6c98 b vkDestroySamplerYcbcrConversion
00000000002c76d8 b vkDestroySamplerYcbcrConversionKHR
00000000002c6ae8 b vkDestroySemaphore
00000000002c6af0 b vkDestroyShaderModule
00000000002c76e8 b vkDestroySurfaceKHR
00000000002c7720 b vkDestroySwapchainKHR
00000000002c72f8 b vkDestroyValidationCacheEXT
00000000002c6af8 b vkDeviceWaitIdle
00000000002c6ff0 b vkDisplayPowerControlEXT
00000000002c6b00 b vkEndCommandBuffer
00000000002c6b08 b vkEnumerateDeviceExtensionProperties
00000000002c6b10 b vkEnumerateDeviceLayerProperties
00000000002c6b18 b vkEnumerateInstanceExtensionProperties
00000000002c6b20 b vkEnumerateInstanceLayerProperties
00000000002c6808 b vkEnumerateInstanceVersion
00000000002c6ca0 b vkEnumeratePhysicalDeviceGroups
00000000002c74e0 b vkEnumeratePhysicalDeviceGroupsKHR
00000000002c7650 b vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR
00000000002c6b28 b vkEnumeratePhysicalDevices
00000000002c6b30 b vkFlushMappedMemoryRanges
00000000002c6b38 b vkFreeCommandBuffers
00000000002c6b40 b vkFreeDescriptorSets
00000000002c6b48 b vkFreeMemory
00000000002c73e8 b vkGetAccelerationStructureBuildSizesKHR
00000000002c73f0 b vkGetAccelerationStructureDeviceAddressKHR
00000000002c78d0 b vkGetAccelerationStructureHandleNV
00000000002c78d8 b vkGetAccelerationStructureMemoryRequirementsNV
00000000002c6ef0 b vkGetAndroidHardwareBufferPropertiesANDROID
00000000002c6d68 b vkGetBufferDeviceAddress
00000000002c6f10 b vkGetBufferDeviceAddressEXT
00000000002c7420 b vkGetBufferDeviceAddressKHR
00000000002c6b50 b vkGetBufferMemoryRequirements
00000000002c6ca8 b vkGetBufferMemoryRequirements2
00000000002c75c0 b vkGetBufferMemoryRequirements2KHR
00000000002c6d70 b vkGetBufferOpaqueCaptureAddress
00000000002c7428 b vkGetBufferOpaqueCaptureAddressKHR
00000000002c6f18 b vkGetCalibratedTimestampsEXT
00000000002c74a0 b vkGetDeferredOperationMaxConcurrencyKHR
00000000002c74a8 b vkGetDeferredOperationResultKHR
00000000002c7918 b vkGetDescriptorSetHostMappingVALVE
00000000002c7920 b vkGetDescriptorSetLayoutHostMappingInfoVALVE
00000000002c6cb0 b vkGetDescriptorSetLayoutSupport
00000000002c7628 b vkGetDescriptorSetLayoutSupportKHR
00000000002c73f8 b vkGetDeviceAccelerationStructureCompatibilityKHR
00000000002c6e90 b vkGetDeviceBufferMemoryRequirements
00000000002c7630 b vkGetDeviceBufferMemoryRequirementsKHR
00000000002c6fd8 b vkGetDeviceFaultInfoEXT
00000000002c6cb8 b vkGetDeviceGroupPeerMemoryFeatures
00000000002c74d8 b vkGetDeviceGroupPeerMemoryFeaturesKHR
00000000002c7930 b vkGetDeviceGroupPresentCapabilitiesKHR
00000000002c7938 b vkGetDeviceGroupSurfacePresentModesKHR
00000000002c6e98 b vkGetDeviceImageMemoryRequirements
00000000002c7638 b vkGetDeviceImageMemoryRequirementsKHR
00000000002c6ea0 b vkGetDeviceImageSparseMemoryRequirements
00000000002c7640 b vkGetDeviceImageSparseMemoryRequirementsKHR
00000000002c6b58 b vkGetDeviceMemoryCommitment
00000000002c6d78 b vkGetDeviceMemoryOpaqueCaptureAddress
00000000002c7430 b vkGetDeviceMemoryOpaqueCaptureAddressKHR
00000000002c7250 b vkGetDeviceMicromapCompatibilityEXT
00000000002c6b60 b vkGetDeviceProcAddr
00000000002c6b68 b vkGetDeviceQueue
00000000002c6cc0 b vkGetDeviceQueue2
00000000002c7338 b vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI
00000000002c75a0 b vkGetDisplayModeProperties2KHR
00000000002c74f8 b vkGetDisplayModePropertiesKHR
00000000002c75a8 b vkGetDisplayPlaneCapabilities2KHR
00000000002c7500 b vkGetDisplayPlaneCapabilitiesKHR
00000000002c7508 b vkGetDisplayPlaneSupportedDisplaysKHR
00000000002c6f08 b vkGetDrmDisplayEXT
00000000002c7908 b vkGetDynamicRenderingTilePropertiesQCOM
00000000002c6b70 b vkGetEventStatus
00000000002c7550 b vkGetFenceFdKHR
00000000002c6b78 b vkGetFenceStatus
00000000002c7910 b vkGetFramebufferTilePropertiesQCOM
00000000002c7828 b vkGetGeneratedCommandsMemoryRequirementsNV
00000000002c71c0 b vkGetImageDrmFormatModifierPropertiesEXT
00000000002c6b80 b vkGetImageMemoryRequirements
00000000002c6cc8 b vkGetImageMemoryRequirements2
00000000002c75c8 b vkGetImageMemoryRequirements2KHR
00000000002c6b88 b vkGetImageSparseMemoryRequirements
00000000002c6cd0 b vkGetImageSparseMemoryRequirements2
00000000002c75d0 b vkGetImageSparseMemoryRequirements2KHR
00000000002c6b90 b vkGetImageSubresourceLayout
00000000002c71b8 b vkGetImageSubresourceLayout2EXT
00000000002c77b8 b vkGetImageViewAddressNVX
00000000002c77c0 b vkGetImageViewHandleNVX
00000000002c6800 b vkGetInstanceProcAddr
00000000002c6ef8 b vkGetMemoryAndroidHardwareBufferANDROID
00000000002c7568 b vkGetMemoryFdKHR
00000000002c7570 b vkGetMemoryFdPropertiesKHR
00000000002c7198 b vkGetMemoryHostPointerPropertiesEXT
00000000002c7838 b vkGetMemoryRemoteAddressNV
00000000002c7258 b vkGetMicromapBuildSizesEXT
00000000002c7318 b vkGetPastPresentationTimingGOOGLE
00000000002c7360 b vkGetPerformanceParameterINTEL
00000000002c6f20 b vkGetPhysicalDeviceCalibrateableTimeDomainsEXT
00000000002c77e0 b vkGetPhysicalDeviceCooperativeMatrixPropertiesNV
00000000002c75b0 b vkGetPhysicalDeviceDisplayPlaneProperties2KHR
00000000002c7510 b vkGetPhysicalDeviceDisplayPlanePropertiesKHR
00000000002c75b8 b vkGetPhysicalDeviceDisplayProperties2KHR
00000000002c7518 b vkGetPhysicalDeviceDisplayPropertiesKHR
00000000002c6cd8 b vkGetPhysicalDeviceExternalBufferProperties
00000000002c7560 b vkGetPhysicalDeviceExternalBufferPropertiesKHR
00000000002c6ce0 b vkGetPhysicalDeviceExternalFenceProperties
00000000002c7548 b vkGetPhysicalDeviceExternalFencePropertiesKHR
00000000002c7830 b vkGetPhysicalDeviceExternalImageFormatPropertiesNV
00000000002c6ce8 b vkGetPhysicalDeviceExternalSemaphoreProperties
00000000002c7578 b vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
00000000002c6b98 b vkGetPhysicalDeviceFeatures
00000000002c6cf0 b vkGetPhysicalDeviceFeatures2
00000000002c75d8 b vkGetPhysicalDeviceFeatures2KHR
00000000002c6ba0 b vkGetPhysicalDeviceFormatProperties
00000000002c6cf8 b vkGetPhysicalDeviceFormatProperties2
00000000002c75e0 b vkGetPhysicalDeviceFormatProperties2KHR
00000000002c7598 b vkGetPhysicalDeviceFragmentShadingRatesKHR
00000000002c6ba8 b vkGetPhysicalDeviceImageFormatProperties
00000000002c6d00 b vkGetPhysicalDeviceImageFormatProperties2
00000000002c75e8 b vkGetPhysicalDeviceImageFormatProperties2KHR
00000000002c6bb0 b vkGetPhysicalDeviceMemoryProperties
00000000002c6d08 b vkGetPhysicalDeviceMemoryProperties2
00000000002c75f0 b vkGetPhysicalDeviceMemoryProperties2KHR
00000000002c72a0 b vkGetPhysicalDeviceMultisamplePropertiesEXT
00000000002c7880 b vkGetPhysicalDeviceOpticalFlowImageFormatsNV
00000000002c7940 b vkGetPhysicalDevicePresentRectanglesKHR
00000000002c6bb8 b vkGetPhysicalDeviceProperties
00000000002c6d10 b vkGetPhysicalDeviceProperties2
00000000002c75f8 b vkGetPhysicalDeviceProperties2KHR
00000000002c7658 b vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR
00000000002c6bc0 b vkGetPhysicalDeviceQueueFamilyProperties
00000000002c6d18 b vkGetPhysicalDeviceQueueFamilyProperties2
00000000002c7600 b vkGetPhysicalDeviceQueueFamilyProperties2KHR
00000000002c6bc8 b vkGetPhysicalDeviceSparseImageFormatProperties
00000000002c6d20 b vkGetPhysicalDeviceSparseImageFormatProperties2
00000000002c7608 b vkGetPhysicalDeviceSparseImageFormatProperties2KHR
00000000002c77e8 b vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV
00000000002c7010 b vkGetPhysicalDeviceSurfaceCapabilities2EXT
00000000002c7610 b vkGetPhysicalDeviceSurfaceCapabilities2KHR
00000000002c76f0 b vkGetPhysicalDeviceSurfaceCapabilitiesKHR
00000000002c7618 b vkGetPhysicalDeviceSurfaceFormats2KHR
00000000002c76f8 b vkGetPhysicalDeviceSurfaceFormatsKHR
00000000002c7700 b vkGetPhysicalDeviceSurfacePresentModesKHR
00000000002c7708 b vkGetPhysicalDeviceSurfaceSupportKHR
00000000002c6ea8 b vkGetPhysicalDeviceToolProperties
00000000002c72b8 b vkGetPhysicalDeviceToolPropertiesEXT
00000000002c6bd0 b vkGetPipelineCacheData
00000000002c7668 b vkGetPipelineExecutableInternalRepresentationsKHR
00000000002c7670 b vkGetPipelineExecutablePropertiesKHR
00000000002c7678 b vkGetPipelineExecutableStatisticsKHR
00000000002c7270 b vkGetPipelinePropertiesEXT
00000000002c6eb0 b vkGetPrivateData
00000000002c7288 b vkGetPrivateDataEXT
00000000002c6bd8 b vkGetQueryPoolResults
00000000002c7770 b vkGetQueueCheckpointData2NV
00000000002c77f8 b vkGetQueueCheckpointDataNV
00000000002c76b8 b vkGetRayTracingCaptureReplayShaderGroupHandlesKHR
00000000002c76c0 b vkGetRayTracingShaderGroupHandlesKHR
00000000002c78e0 b vkGetRayTracingShaderGroupHandlesNV
00000000002c76c8 b vkGetRayTracingShaderGroupStackSizeKHR
00000000002c7320 b vkGetRefreshCycleDurationGOOGLE
00000000002c6be0 b vkGetRenderAreaGranularity
00000000002c6d80 b vkGetSemaphoreCounterValue
00000000002c7778 b vkGetSemaphoreCounterValueKHR
00000000002c7580 b vkGetSemaphoreFdKHR
00000000002c6ee8 b vkGetShaderInfoAMD
00000000002c72a8 b vkGetShaderModuleCreateInfoIdentifierEXT
00000000002c72b0 b vkGetShaderModuleIdentifierEXT
00000000002c6ff8 b vkGetSwapchainCounterEXT
00000000002c7728 b vkGetSwapchainImagesKHR
00000000002c76e0 b vkGetSwapchainStatusKHR
00000000002c7300 b vkGetValidationCacheDataEXT
00000000002c77d0 b vkGetWinrtDisplayNV
00000000002c7558 b vkImportFenceFdKHR
00000000002c7588 b vkImportSemaphoreFdKHR
00000000002c7368 b vkInitializePerformanceApiINTEL
00000000002c6be8 b vkInvalidateMappedMemoryRanges
00000000002c6bf0 b vkMapMemory
00000000002c6bf8 b vkMergePipelineCaches
00000000002c7308 b vkMergeValidationCachesEXT
00000000002c6fa8 b vkQueueBeginDebugUtilsLabelEXT
00000000002c6c00 b vkQueueBindSparse
00000000002c6fb0 b vkQueueEndDebugUtilsLabelEXT
00000000002c6fb8 b vkQueueInsertDebugUtilsLabelEXT
00000000002c7730 b vkQueuePresentKHR
00000000002c7370 b vkQueueSetPerformanceConfigurationINTEL
00000000002c6c08 b vkQueueSubmit
00000000002c6eb8 b vkQueueSubmit2
00000000002c7760 b vkQueueSubmit2KHR
00000000002c6c10 b vkQueueWaitIdle
00000000002c7000 b vkRegisterDeviceEventEXT
00000000002c7008 b vkRegisterDisplayEventEXT
00000000002c6fe0 b vkReleaseDisplayEXT
00000000002c7378 b vkReleasePerformanceConfigurationINTEL
00000000002c7660 b vkReleaseProfilingLockKHR
00000000002c6c18 b vkResetCommandBuffer
00000000002c6c20 b vkResetCommandPool
00000000002c6c28 b vkResetDescriptorPool
00000000002c6c30 b vkResetEvent
00000000002c6c38 b vkResetFences
00000000002c6d88 b vkResetQueryPool
00000000002c71b0 b vkResetQueryPoolEXT
00000000002c6fc0 b vkSetDebugUtilsObjectNameEXT
00000000002c6fc8 b vkSetDebugUtilsObjectTagEXT
00000000002c7268 b vkSetDeviceMemoryPriorityEXT
00000000002c6c40 b vkSetEvent
00000000002c71a0 b vkSetHdrMetadataEXT
00000000002c6ed0 b vkSetLocalDimmingAMD
00000000002c6ec0 b vkSetPrivateData
00000000002c7290 b vkSetPrivateDataEXT
00000000002c6d90 b vkSignalSemaphore
00000000002c7780 b vkSignalSemaphoreKHR
00000000002c6fd0 b vkSubmitDebugUtilsMessageEXT
00000000002c6d28 b vkTrimCommandPool
00000000002c7620 b vkTrimCommandPoolKHR
00000000002c7380 b vkUninitializePerformanceApiINTEL
00000000002c6c48 b vkUnmapMemory
00000000002c6d30 b vkUpdateDescriptorSetWithTemplate
00000000002c74c0 b vkUpdateDescriptorSetWithTemplateKHR
00000000002c6c50 b vkUpdateDescriptorSets
00000000002c6c58 b vkWaitForFences
00000000002c7680 b vkWaitForPresentKHR
00000000002c6d98 b vkWaitSemaphores
00000000002c7788 b vkWaitSemaphoresKHR
00000000002c7400 b vkWriteAccelerationStructuresPropertiesKHR
00000000002c7260 b vkWriteMicromapsPropertiesEXT
000000000023cd74 T vmaAllocateMemory
000000000023cf70 T vmaAllocateMemoryForBuffer
000000000023d078 T vmaAllocateMemoryForImage
000000000023ce48 T vmaAllocateMemoryPages
000000000023d6e0 T vmaBeginDefragmentation
000000000023d86c T vmaBeginDefragmentationPass
000000000023d91c T vmaBindBufferMemory
000000000023d988 T vmaBindBufferMemory2
000000000023d9fc T vmaBindImageMemory
000000000023da68 T vmaBindImageMemory2
000000000023cc00 T vmaCalculatePoolStatistics
000000000023c4fc T vmaCalculateStatistics
000000000023ec14 T vmaCalculateVirtualBlockStatistics
000000000023d694 T vmaCheckCorruption
000000000023cc64 T vmaCheckPoolCorruption
000000000023eb28 T vmaClearVirtualBlock
000000000023e0c4 T vmaCreateAliasingBuffer
000000000023e5fc T vmaCreateAliasingImage
000000000023c138 T vmaCreateAllocator
000000000023dadc T vmaCreateBuffer
000000000023ddc0 T vmaCreateBufferWithAlignment
000000000023e308 T vmaCreateImage
000000000023cae0 T vmaCreatePool
000000000023e834 T vmaCreateVirtualBlock
000000000023c2a4 T vmaDestroyAllocator
000000000023e250 T vmaDestroyBuffer
000000000023e77c T vmaDestroyImage
000000000023cb44 T vmaDestroyPool
000000000023e974 T vmaDestroyVirtualBlock
000000000023d7bc T vmaEndDefragmentation
000000000023d8c4 T vmaEndDefragmentationPass
000000000023c5c4 T vmaFindMemoryTypeIndex
000000000023c664 T vmaFindMemoryTypeIndexForBufferInfo
000000000023c888 T vmaFindMemoryTypeIndexForImageInfo
000000000023d464 T vmaFlushAllocation
000000000023d544 T vmaFlushAllocations
000000000023d180 T vmaFreeMemory
000000000023d1dc T vmaFreeMemoryPages
000000000023d23c T vmaGetAllocationInfo
000000000023d330 T vmaGetAllocationMemoryProperties
000000000023c2ec T vmaGetAllocatorInfo
000000000023c550 T vmaGetHeapBudgets
000000000023c3bc T vmaGetMemoryProperties
000000000023c414 T vmaGetMemoryTypeProperties
000000000023c364 T vmaGetPhysicalDeviceProperties
000000000023ccb8 T vmaGetPoolName
000000000023cb9c T vmaGetPoolStatistics
000000000023ea0c T vmaGetVirtualAllocationInfo
000000000023ebc0 T vmaGetVirtualBlockStatistics
000000000023d4d4 T vmaInvalidateAllocation
000000000023d5ec T vmaInvalidateAllocations
000000000023e9bc T vmaIsVirtualBlockEmpty
000000000023d3ac T vmaMapMemory
000000000023d2fc T vmaSetAllocationName
000000000023d2a0 T vmaSetAllocationUserData
000000000023c4b0 T vmaSetCurrentFrameIndex
000000000023cd1c T vmaSetPoolName
000000000023eb6c T vmaSetVirtualAllocationUserData
000000000023d410 T vmaUnmapMemory
000000000023ea68 T vmaVirtualAllocate
000000000023ead4 T vmaVirtualFree
000000000022260c T volkGetInstanceVersion
0000000000226380 T volkGetLoadedDevice
0000000000226308 T volkGetLoadedInstance
0000000000222484 T volkInitialize
00000000002225d4 T volkInitializeCustom
0000000000226314 T volkLoadDevice
000000000022638c T volkLoadDeviceTable
0000000000222674 T volkLoadInstance
00000000002262d0 T volkLoadInstanceOnly
                 U vsnprintf
                 U wcslen
                 U wcstod
                 U wcstof
                 U wcstol
                 U wcstold
                 U wcstoll
                 U wcstoul
                 U wcstoull
                 U wmemchr
                 U wmemcmp
                 U wmemcpy
                 U wmemmove
                 U wmemset
                 U write
